"use strict";
(self["webpackChunkavalanche_extension"] = self["webpackChunkavalanche_extension"] || []).push([["node_modules_avalabs_core-utils-sdk_esm_bnToBig_js-node_modules_avalabs_core-utils-sdk_esm_tr-aa4325"],{

/***/ "./node_modules/@avalabs/core-utils-sdk/esm/bnToBig.js":
/*!*************************************************************!*\
  !*** ./node_modules/@avalabs/core-utils-sdk/esm/bnToBig.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "bnToBig": () => (/* binding */ t)
/* harmony export */ });
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! big.js */ "./node_modules/big.js/big.js");
/* harmony import */ var big_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(big_js__WEBPACK_IMPORTED_MODULE_0__);
function t(t,n=0){const r=big_js__WEBPACK_IMPORTED_MODULE_0___default()(10).pow(n);return new (big_js__WEBPACK_IMPORTED_MODULE_0___default())(t.toString()).div(r)}


/***/ }),

/***/ "./node_modules/@avalabs/core-utils-sdk/esm/trunateAddress.js":
/*!********************************************************************!*\
  !*** ./node_modules/@avalabs/core-utils-sdk/esm/trunateAddress.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "truncateAddress": () => (/* binding */ s)
/* harmony export */ });
const s=(s,t=6)=>`${s.substring(0,t)}â€¦${s.slice(-t/2)}`;


/***/ }),

/***/ "./src/components/common/Flipper.tsx":
/*!*******************************************!*\
  !*** ./src/components/common/Flipper.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Flipper": () => (/* binding */ Flipper)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");


const Flipper = ({
  children,
  size,
  isFlipped
}) => {
  if (children.length !== 2) {
    throw new Error('Flipper expects 2 icons as children');
  }
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__.Box, {
    sx: {
      position: 'relative',
      width: size,
      height: size,
      backgroundColor: 'inherit',
      transform: isFlipped ? 'rotateX(0)' : 'rotateX(180deg)',
      transition: 'transform .2s ease-in-out',
      transformStyle: 'preserve-3d'
    }
  }, /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(children[0], {
    size,
    sx: {
      backgroundColor: 'inherit',
      transform: 'rotateX(180deg)',
      position: 'absolute',
      backfaceVisibility: 'hidden',
      zIndex: -1
    }
  }), /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(children[1], {
    size,
    sx: {
      background: 'inherit',
      position: 'absolute',
      backfaceVisibility: 'hidden',
      zIndex: 1
    }
  }));
};

/***/ }),

/***/ "./src/components/common/FunctionIsOffline.tsx":
/*!*****************************************************!*\
  !*** ./src/components/common/FunctionIsOffline.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FunctionIsOffline": () => (/* binding */ FunctionIsOffline),
/* harmony export */   "getTranslatedFunctionName": () => (/* binding */ getTranslatedFunctionName)
/* harmony export */ });
/* harmony import */ var _PageTitle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PageTitle */ "./src/components/common/PageTitle.tsx");
/* harmony import */ var i18next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! i18next */ "./node_modules/i18next/dist/esm/i18next.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* harmony import */ var _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/hooks/useIsFunctionAvailable */ "./src/hooks/useIsFunctionAvailable.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function getTranslatedFunctionName(name) {
  const translations = {
    [_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.BRIDGE]: (0,i18next__WEBPACK_IMPORTED_MODULE_1__.t)('Bridge'),
    [_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.SWAP]: (0,i18next__WEBPACK_IMPORTED_MODULE_1__.t)('Swap'),
    [_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.SEND]: (0,i18next__WEBPACK_IMPORTED_MODULE_1__.t)('Send'),
    [_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.BUY]: (0,i18next__WEBPACK_IMPORTED_MODULE_1__.t)('Buy'),
    [_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.DEFI]: (0,i18next__WEBPACK_IMPORTED_MODULE_1__.t)('DeFi'),
    [_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.KEYSTONE]: (0,i18next__WEBPACK_IMPORTED_MODULE_1__.t)('Keystone'),
    [_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.TOKEN_DETAILS]: (0,i18next__WEBPACK_IMPORTED_MODULE_1__.t)('Token Details')
  };
  return translations[name];
}
function FunctionIsOffline({
  functionName,
  hidePageTitle,
  children
}) {
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_3__.useTranslation)();
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    sx: {
      height: '100%',
      width: '100%'
    }
  }, !hidePageTitle && /*#__PURE__*/React.createElement(_PageTitle__WEBPACK_IMPORTED_MODULE_0__.PageTitle, {
    variant: _PageTitle__WEBPACK_IMPORTED_MODULE_0__.PageTitleVariant.PRIMARY
  }, t('Sorry')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    sx: {
      alignItems: 'center',
      justifyContent: 'center',
      flexGrow: 1
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.AlertCircleIcon, {
    size: 72,
    sx: {
      mb: 3,
      mt: -9
    }
  }), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Typography, {
    variant: "h5",
    sx: {
      mb: 1
    }
  }, t('Feature Disabled')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Typography, {
    size: 16,
    align: "center",
    height: "24px",
    sx: {
      color: 'text.secondary'
    }
  }, t('{{functionName}} is currently unavailable.', {
    functionName: getTranslatedFunctionName(functionName) ?? t('This Feature')
  })), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Typography, {
    sx: {
      color: 'text.secondary'
    }
  }, t('Please check back later and try again.')), children));
}

/***/ }),

/***/ "./src/components/common/TokenCard.tsx":
/*!*********************************************!*\
  !*** ./src/components/common/TokenCard.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TokenCard": () => (/* binding */ TokenCard)
/* harmony export */ });
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");

// TODO: This component is the beginning of the TokenCard from React Components k2 migration, it should be continued in another ticket ie.: #CP-4371 migrate Swap to K2

function TokenCard({
  name,
  onClick,
  balanceInCurrency,
  children
}) {
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_0__.Card, {
    sx: {
      py: 1,
      px: 2,
      borderRadius: 1,
      mb: 1,
      cursor: `${() => onClick ? 'pointer' : 'default'}`
    },
    onClick: () => onClick && onClick(),
    style: {
      cursor: onClick ? 'pointer' : 'default'
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_0__.Stack, {
    sx: {
      width: '100%',
      flexDirection: 'row'
    },
    "data-testid": `${name}-${balanceInCurrency}`
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_0__.Stack, {
    sx: {
      flexDirection: 'row'
    }
  }, children), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_0__.Stack, {
    sx: {
      justifyContent: 'space-between',
      width: '100%',
      alignItems: 'center',
      flexDirection: 'row',
      ml: 2
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_0__.Typography, {
    varian: "body2"
  }, name), balanceInCurrency && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_0__.Typography, {
    varian: "body2"
  }, balanceInCurrency))));
}

/***/ }),

/***/ "./src/components/common/fab/FAB.tsx":
/*!*******************************************!*\
  !*** ./src/components/common/fab/FAB.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FAB": () => (/* binding */ FAB)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@mui/material/styles/styled.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@mui/material/styles/useTheme.js");
/* harmony import */ var _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/hooks/useIsFunctionAvailable */ "./src/hooks/useIsFunctionAvailable.ts");
/* harmony import */ var _src_contexts_AnalyticsProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @src/contexts/AnalyticsProvider */ "./src/contexts/AnalyticsProvider.tsx");
/* harmony import */ var _src_utils_getCoreWebUrl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @src/utils/getCoreWebUrl */ "./src/utils/getCoreWebUrl.ts");
/* harmony import */ var _Flipper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Flipper */ "./src/components/common/Flipper.tsx");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");









const ActionButtonWrapper = (0,_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_6__["default"])(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Stack)`
  padding: 0 8px;
  margin: 8px 0;
  border-radius: 0;
  cursor: pointer;
  align-items: center;
  display: flex;
  gap: 4px;
  width: 100%;

  .button::after {
    content: '';
    position: absolute;
    bottom: -18px;
    height: 18px;
    width: 100%;
  }

  &:last-of-type {
    border-bottom: none;
  }
`;
const Menu = (0,_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_6__["default"])(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Stack, {
  shouldForwardProp: prop => prop !== 'isOpen'
})`
  border-radius: 40px;
  width: ${({
  isOpen
}) => isOpen ? '80px' : '40px'};
  position: absolute;
  bottom: 100%;
  right: ${({
  isOpen
}) => isOpen ? 0 : '20px'};
  margin: 0 0 16px;
  background: ${({
  theme,
  isOpen
}) => isOpen ? theme.palette.background.paper : 'transparent'};
  flex-direction: column;
  align-items: center;
  transition: background-color 0.3s ease-out;
  transform-origin: bottom;
  padding: 8px 0 12px;
  z-index: ${({
  theme
}) => theme.zIndex.fab};
`;
const ButtonText = (0,_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_6__["default"])('span', {
  shouldForwardProp: prop => prop !== 'isExpanded'
})`
  color: ${({
  isExpanded
}) => isExpanded ? 'inherit' : '#fff'};
  transition: color 0.2s ease-in-out;
  padding-left: ${({
  theme
}) => theme.spacing(1)};
`;
const ActionButton = ({
  icon,
  text,
  ...rest
}) => /*#__PURE__*/React.createElement(ActionButtonWrapper, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
  "data-testid": `${text.toLowerCase()}-action-button`
}, rest), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.IconButton, {
  color: "primary",
  variant: "contained",
  size: "large",
  className: "button"
}, icon), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Typography, {
  variant: "caption"
}, text));
function FAB({
  isContentScrolling
}) {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);
  const history = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_8__.useHistory)();
  const {
    checkIsFunctionSupported
  } = (0,_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.useIsFunctionAvailable)();
  const {
    capture
  } = (0,_src_contexts_AnalyticsProvider__WEBPACK_IMPORTED_MODULE_3__.useAnalyticsContext)();
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_9__.useTranslation)();
  const theme = (0,_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_10__["default"])();
  const fabRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);
  const fadeTimer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();
  const [isExpanded, setIsExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);
  const FABMenuItems = [{
    text: t('Send'),
    route: '/send',
    name: _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.SEND,
    icon: /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.ArrowUpRightIcon, {
      size: 24,
      sx: {
        color: theme.palette.common.black
      }
    })
  }, {
    text: t('Receive'),
    route: '/receive',
    name: _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.RECEIVE,
    icon: /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.QRCodeIcon, {
      size: 24,
      sx: {
        color: theme.palette.common.black
      }
    })
  }, {
    text: t('Swap'),
    route: '/swap',
    name: _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.SWAP,
    icon: /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.SwapIcon, {
      size: 24,
      sx: {
        color: theme.palette.common.black
      }
    })
  }, {
    text: t('Buy'),
    name: _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.BUY,
    icon: /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.BuyIcon, {
      size: 24,
      sx: {
        color: theme.palette.common.black
      }
    }),
    onclick: () => window.open(`${(0,_src_utils_getCoreWebUrl__WEBPACK_IMPORTED_MODULE_4__.getCoreWebUrl)()}/buy`, '_blank', 'noreferrer')
  }, {
    text: t('Bridge'),
    route: '/bridge',
    name: _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_2__.FunctionNames.BRIDGE,
    icon: /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.BridgeIcon, {
      size: 24,
      sx: {
        color: theme.palette.common.black
      }
    })
  }].filter(({
    name
  }) => checkIsFunctionSupported(name));
  const fabText = isOpen ? t('Close') : t('Actions');
  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {
    if (isContentScrolling) {
      // When the user starts scrolling, we hide the action button.
      // We also delay it a little bit to prevent it from hiding
      // when the user scrolls just a little bit, or the scrollable
      // area is short.
      fadeTimer.current = setTimeout(() => {
        setIsExpanded(false);
      }, 400);
    } else {
      // We also wait a little bit before showing it back again.
      // This prevents it from popping up too fast when the user scrolls
      // just a tiny bit at a time: scroll -> quick pause -> scroll again.
      fadeTimer.current = setTimeout(() => {
        setIsExpanded(true);
      }, 200);
    }
    return () => {
      if (fadeTimer.current !== undefined) {
        clearTimeout(fadeTimer.current);
      }
    };
  }, [isContentScrolling]);
  if (!FABMenuItems.length) {
    return null;
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Backdrop, {
    open: isOpen,
    onClick: () => {
      capture('FABClosed');
      setIsOpen(false);
    },
    sx: {
      zIndex: theme.zIndex.fab
    }
  }), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Grow, {
    in: isExpanded
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Button, {
    ref: fabRef,
    size: "xlarge",
    "data-testid": "action-menu-button",
    onClick: () => {
      capture(isOpen ? 'FABClosed' : 'FABOpened');
      setIsOpen(!isOpen);
    },
    sx: {
      p: 2,
      height: 56,
      position: 'fixed',
      zIndex: theme.zIndex.fab,
      bottom: theme.spacing(2),
      right: theme.spacing(2),
      ':active': {
        backgroundColor: '#a0a0a0' // By default, the buttons in active state have a semi-transparent background - we don't want that here.
      }
    }
  }, /*#__PURE__*/React.createElement(_Flipper__WEBPACK_IMPORTED_MODULE_5__.Flipper, {
    size: 24,
    isFlipped: !isOpen
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.XIcon, null), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.LightningIcon, null)), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Collapse, {
    orientation: "horizontal",
    in: isExpanded,
    unmountOnExit: true
  }, /*#__PURE__*/React.createElement(ButtonText, {
    isExpanded: isExpanded
  }, fabText)), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Popper, {
    open: isOpen,
    anchorEl: fabRef.current,
    placement: "top-end",
    transition: true,
    sx: {
      zIndex: theme.zIndex.fab
    }
  }, ({
    TransitionProps
  }) => /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_7__.Grow, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, TransitionProps, {
    timeout: 250
  }), /*#__PURE__*/React.createElement(Menu, {
    isOpen: isOpen
  }, isOpen && FABMenuItems.map(({
    text,
    route,
    icon,
    name,
    onclick
  }) => {
    if (!checkIsFunctionSupported(name)) {
      return null;
    }
    return /*#__PURE__*/React.createElement(ActionButton, {
      key: text,
      text: text,
      icon: icon,
      onClick: () => {
        capture(`FABItemSelected_${name}`);
        onclick?.();
        if (!route) {
          return;
        }
        history.push(route);
      }
    });
  })))))));
}

/***/ }),

/***/ "./src/components/common/infiniteScroll/InfiniteScroll.tsx":
/*!*****************************************************************!*\
  !*** ./src/components/common/infiniteScroll/InfiniteScroll.tsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InfiniteScroll": () => (/* binding */ InfiniteScroll)
/* harmony export */ });
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");



function InfiniteScroll({
  loadMore,
  hasMore,
  loading,
  error,
  children
}) {
  const loader = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.useTranslation)();
  const loadMoreHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(entries => {
    const target = entries[0];
    if (target.isIntersecting && !loading && hasMore) {
      loadMore();
    }
  }, [loading, hasMore, loadMore]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const option = {
      root: null,
      rootMargin: '0px',
      threshold: 0
    };
    const loaderValue = loader.current;
    const observer = new IntersectionObserver(loadMoreHandler, option);
    if (loaderValue && observer) {
      observer.observe(loaderValue);
    }
    return () => {
      if (loaderValue && observer) {
        observer.unobserve(loaderValue);
      }
    };
  }, [loadMoreHandler]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, children, loading && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.Stack, {
    sx: {
      pb: 2,
      width: 1,
      alignItems: 'center'
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.CircularProgress, null)), error && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.Typography, {
    variant: "body1"
  }, t('Error!')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.Stack, {
    sx: {
      pb: 9
    },
    ref: loader
  }));
}

/***/ }),

/***/ "./src/hooks/useBalanceTotalInCurrency.ts":
/*!************************************************!*\
  !*** ./src/hooks/useBalanceTotalInCurrency.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useBalanceTotalInCurrency": () => (/* binding */ useBalanceTotalInCurrency)
/* harmony export */ });
/* harmony import */ var _src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @src/contexts/BalancesProvider */ "./src/contexts/BalancesProvider.tsx");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");


function useBalanceTotalInCurrency(account) {
  const {
    getTotalBalance
  } = (0,_src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_0__.useBalancesContext)();
  return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {
    if (!account?.addressC) {
      return null;
    }
    return getTotalBalance(account.addressC);
  }, [account?.addressC, getTotalBalance]);
}

/***/ }),

/***/ "./src/hooks/useNfts.ts":
/*!******************************!*\
  !*** ./src/hooks/useNfts.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useNfts": () => (/* binding */ useNfts)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @src/contexts/BalancesProvider */ "./src/contexts/BalancesProvider.tsx");
/* harmony import */ var _src_contexts_AccountsProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/contexts/AccountsProvider */ "./src/contexts/AccountsProvider.tsx");
/* harmony import */ var _src_contexts_NetworkProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @src/contexts/NetworkProvider */ "./src/contexts/NetworkProvider.tsx");
/* harmony import */ var _src_utils_getAddressForChain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @src/utils/getAddressForChain */ "./src/utils/getAddressForChain.ts");





const useNfts = () => {
  const {
    balances
  } = (0,_src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_1__.useBalancesContext)();
  const {
    accounts: {
      active: activeAccount
    }
  } = (0,_src_contexts_AccountsProvider__WEBPACK_IMPORTED_MODULE_2__.useAccountsContext)();
  const {
    network
  } = (0,_src_contexts_NetworkProvider__WEBPACK_IMPORTED_MODULE_3__.useNetworkContext)();
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!network || !balances.nfts || !activeAccount) {
      return [];
    }
    const userAddress = (0,_src_utils_getAddressForChain__WEBPACK_IMPORTED_MODULE_4__.getAddressForChain)(network, activeAccount);
    if (!userAddress) {
      return [];
    }
    return Object.values(balances.nfts?.[network.chainId]?.[userAddress] ?? {});
  }, [network, balances.nfts, activeAccount]);
};

/***/ }),

/***/ "./src/pages/Collectibles/Collectibles.tsx":
/*!*************************************************!*\
  !*** ./src/pages/Collectibles/Collectibles.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Collectibles": () => (/* binding */ Collectibles)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _components_CollectibleGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/CollectibleGrid */ "./src/pages/Collectibles/components/CollectibleGrid.tsx");
/* harmony import */ var _components_CollectibleList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/CollectibleList */ "./src/pages/Collectibles/components/CollectibleList.tsx");
/* harmony import */ var _components_CollectibleListEmpty__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/CollectibleListEmpty */ "./src/pages/Collectibles/components/CollectibleListEmpty.tsx");
/* harmony import */ var _hooks_useSetCollectibleParams__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useSetCollectibleParams */ "./src/pages/Collectibles/hooks/useSetCollectibleParams.tsx");
/* harmony import */ var _src_hooks_usePageHistory__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @src/hooks/usePageHistory */ "./src/hooks/usePageHistory.ts");
/* harmony import */ var _src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @src/contexts/SettingsProvider */ "./src/contexts/SettingsProvider.tsx");
/* harmony import */ var _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @src/hooks/useIsFunctionAvailable */ "./src/hooks/useIsFunctionAvailable.ts");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");
/* harmony import */ var _components_CollectibleSkeleton__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/CollectibleSkeleton */ "./src/pages/Collectibles/components/CollectibleSkeleton.tsx");
/* harmony import */ var _src_components_common_infiniteScroll_InfiniteScroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @src/components/common/infiniteScroll/InfiniteScroll */ "./src/components/common/infiniteScroll/InfiniteScroll.tsx");
/* harmony import */ var _src_contexts_AnalyticsProvider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @src/contexts/AnalyticsProvider */ "./src/contexts/AnalyticsProvider.tsx");
/* harmony import */ var _src_contexts_NetworkProvider__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @src/contexts/NetworkProvider */ "./src/contexts/NetworkProvider.tsx");
/* harmony import */ var _Home_components_Portfolio_Portfolio__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Home/components/Portfolio/Portfolio */ "./src/pages/Home/components/Portfolio/Portfolio.tsx");
/* harmony import */ var _avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @avalabs/vm-module-types */ "./node_modules/@avalabs/vm-module-types/dist/index.js");
/* harmony import */ var _src_hooks_useNfts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @src/hooks/useNfts */ "./src/hooks/useNfts.ts");
/* harmony import */ var _src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @src/contexts/BalancesProvider */ "./src/contexts/BalancesProvider.tsx");
/* harmony import */ var _src_hooks_useLiveBalance__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @src/hooks/useLiveBalance */ "./src/hooks/useLiveBalance.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");




















const POLLED_BALANCES = [_avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_13__.TokenType.ERC721, _avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_13__.TokenType.ERC1155];
function Collectibles({
  listType,
  setListType,
  isHistoryLoading
}) {
  (0,_src_hooks_useLiveBalance__WEBPACK_IMPORTED_MODULE_16__.useLiveBalance)(POLLED_BALANCES);
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_17__.useTranslation)();
  const {
    balances
  } = (0,_src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_15__.useBalancesContext)();
  const nfts = (0,_src_hooks_useNfts__WEBPACK_IMPORTED_MODULE_14__.useNfts)();
  const {
    capture
  } = (0,_src_contexts_AnalyticsProvider__WEBPACK_IMPORTED_MODULE_10__.useAnalyticsContext)();
  const {
    network
  } = (0,_src_contexts_NetworkProvider__WEBPACK_IMPORTED_MODULE_11__.useNetworkContext)();
  const history = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_18__.useHistory)();
  const setCollectibleParams = (0,_hooks_useSetCollectibleParams__WEBPACK_IMPORTED_MODULE_4__.useSetCollectibleParams)();
  const {
    setNavigationHistoryData
  } = (0,_src_hooks_usePageHistory__WEBPACK_IMPORTED_MODULE_5__.usePageHistory)();
  const {
    isFunctionSupported: isManageCollectiblesSupported
  } = (0,_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_7__.useIsFunctionAvailable)(_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_7__.FunctionNames.MANAGE_COLLECTIBLES);
  const {
    getCollectibleVisibility
  } = (0,_src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_6__.useSettingsContext)();
  const visibleNfts = nfts.filter(nft => {
    return getCollectibleVisibility(nft);
  });
  const handleClick = type => {
    setListType(type);
    setNavigationHistoryData({
      listType: type
    });
  };
  const toggleManageCollectiblesPage = () => {
    if (history.location.pathname.startsWith('/manage-collectibles')) {
      history.push('/');
      return;
    }
    history.push('/manage-collectibles');
  };
  const handleItemClick = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(nft => {
    setCollectibleParams({
      nft,
      options: {
        path: '/collectible'
      }
    });
    capture('CollectibleItemClicked', {
      chainId: network?.chainId
    });
  }, [capture, network, setCollectibleParams]);
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.Stack, {
    style: {
      flexGrow: 1,
      maxHeight: 'unset',
      height: '100%'
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.Stack, {
    direction: "row",
    alignItems: "center",
    justifyContent: "space-between",
    sx: {
      my: 1,
      mr: 2
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.ToggleButtonGroup, {
    sx: {
      my: 1,
      ml: 2
    },
    exclusive: true,
    size: "small",
    color: "primary",
    disabled: isHistoryLoading && !listType,
    value: listType,
    onChange: (_, value) => handleClick(value)
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.ToggleButton, {
    value: _Home_components_Portfolio_Portfolio__WEBPACK_IMPORTED_MODULE_12__.ListType.GRID
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.GridIcon, {
    size: 16
  })), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.ToggleButton, {
    value: _Home_components_Portfolio_Portfolio__WEBPACK_IMPORTED_MODULE_12__.ListType.LIST
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.ListIcon, {
    size: 16
  }))), isManageCollectiblesSupported && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.Button, {
    variant: "text",
    size: "small",
    "data-testid": "manage-collectibles-button",
    onClick: toggleManageCollectiblesPage,
    sx: {
      cursor: 'pointer'
    }
  }, t('Manage'))), !balances.loading && !!visibleNfts?.length && /*#__PURE__*/React.createElement(_src_components_common_infiniteScroll_InfiniteScroll__WEBPACK_IMPORTED_MODULE_9__.InfiniteScroll, {
    loadMore: () => {},
    hasMore: false,
    loading: balances.loading,
    error: balances.error?.toString()
  }, listType === _Home_components_Portfolio_Portfolio__WEBPACK_IMPORTED_MODULE_12__.ListType.LIST ? /*#__PURE__*/React.createElement(_components_CollectibleList__WEBPACK_IMPORTED_MODULE_2__.CollectibleList, {
    onClick: handleItemClick
  }) : /*#__PURE__*/React.createElement(_components_CollectibleGrid__WEBPACK_IMPORTED_MODULE_1__.CollectibleGrid, {
    onClick: handleItemClick
  })), !balances.loading && visibleNfts?.length === 0 && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.Stack, {
    sx: {
      flexGrow: 1,
      pb: 9,
      width: '100%',
      alignItems: 'center',
      justifyContent: 'center'
    }
  }, /*#__PURE__*/React.createElement(_components_CollectibleListEmpty__WEBPACK_IMPORTED_MODULE_3__.CollectibleListEmpty, null)), balances.loading && /*#__PURE__*/React.createElement(_components_CollectibleSkeleton__WEBPACK_IMPORTED_MODULE_8__.CollectibleSkeleton, null), balances.error && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.Stack, {
    sx: {
      flexGrow: 1,
      pb: 9,
      width: '100%',
      alignItems: 'center',
      justifyContent: 'center'
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.Typography, {
    sx: {
      fontSize: '18px',
      height: '22px',
      fontWeight: 'fontWeightSemibold'
    }
  }, t('Error')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_19__.Typography, {
    variant: "body2",
    sx: {
      align: 'center',
      height: '17px',
      my: 1
    }
  }, t('Failed to load collectibles'))));
}

/***/ }),

/***/ "./src/pages/Collectibles/components/CollectibleGrid.tsx":
/*!***************************************************************!*\
  !*** ./src/pages/Collectibles/components/CollectibleGrid.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollectibleGrid": () => (/* binding */ CollectibleGrid)
/* harmony export */ });
/* harmony import */ var _src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @src/contexts/SettingsProvider */ "./src/contexts/SettingsProvider.tsx");
/* harmony import */ var _CollectibleMedia__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CollectibleMedia */ "./src/pages/Collectibles/components/CollectibleMedia.tsx");
/* harmony import */ var _CollectibleWrapper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CollectibleWrapper */ "./src/pages/Collectibles/components/CollectibleWrapper.tsx");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @avalabs/vm-module-types */ "./node_modules/@avalabs/vm-module-types/dist/index.js");
/* harmony import */ var _src_hooks_useNfts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @src/hooks/useNfts */ "./src/hooks/useNfts.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");






function CollectibleGrid({
  onClick
}) {
  const nfts = (0,_src_hooks_useNfts__WEBPACK_IMPORTED_MODULE_4__.useNfts)();
  const {
    getCollectibleVisibility
  } = (0,_src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_0__.useSettingsContext)();
  const nftsToShow = nfts?.filter(nft => {
    return getCollectibleVisibility(nft);
  });
  return /*#__PURE__*/React.createElement(_CollectibleWrapper__WEBPACK_IMPORTED_MODULE_2__.CollectibleWrapper, null, nftsToShow?.map(nft => {
    return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.Button, {
      sx: {
        display: 'flex',
        padding: 0
      },
      variant: "text",
      key: `${nft.address}-${nft.tokenId}`,
      onClick: () => onClick(nft),
      "data-testid": `${nft.name}-${nft.tokenId}`
    }, /*#__PURE__*/React.createElement(_CollectibleMedia__WEBPACK_IMPORTED_MODULE_1__.CollectibleMedia, {
      width: "164px",
      height: "auto",
      url: nft?.logoUri,
      hover: false,
      margin: "0 0 16px",
      showBalance: _avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_3__.TokenType.ERC1155 === nft.type,
      balance: nft.balance
    }));
  }));
}

/***/ }),

/***/ "./src/pages/Collectibles/components/CollectibleList.tsx":
/*!***************************************************************!*\
  !*** ./src/pages/Collectibles/components/CollectibleList.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollectibleList": () => (/* binding */ CollectibleList)
/* harmony export */ });
/* harmony import */ var _CollectibleMedia__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CollectibleMedia */ "./src/pages/Collectibles/components/CollectibleMedia.tsx");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _src_components_common_TokenCard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @src/components/common/TokenCard */ "./src/components/common/TokenCard.tsx");
/* harmony import */ var _src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/contexts/SettingsProvider */ "./src/contexts/SettingsProvider.tsx");
/* harmony import */ var _src_hooks_useNfts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @src/hooks/useNfts */ "./src/hooks/useNfts.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");





function CollectibleList({
  onClick
}) {
  const nfts = (0,_src_hooks_useNfts__WEBPACK_IMPORTED_MODULE_3__.useNfts)();
  const {
    getCollectibleVisibility
  } = (0,_src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_2__.useSettingsContext)();
  const nftsToShow = nfts?.filter(nft => {
    return getCollectibleVisibility(nft);
  });
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    sx: {
      px: 2
    },
    "data-testid": "collectibles-list"
  }, nftsToShow?.map(nft => {
    return /*#__PURE__*/React.createElement(_src_components_common_TokenCard__WEBPACK_IMPORTED_MODULE_1__.TokenCard, {
      name: nft.name,
      balanceInCurrency: `#${nft.tokenId}`,
      key: `${nft.address}-${nft.tokenId}`,
      onClick: () => onClick(nft)
    }, /*#__PURE__*/React.createElement(_CollectibleMedia__WEBPACK_IMPORTED_MODULE_0__.CollectibleMedia, {
      height: "32px",
      width: "auto",
      maxWidth: "32px",
      url: nft?.logoSmall,
      hover: false,
      margin: "8px 0",
      showPlayIcon: false
    }));
  }));
}

/***/ }),

/***/ "./src/pages/Collectibles/components/CollectibleListEmpty.tsx":
/*!********************************************************************!*\
  !*** ./src/pages/Collectibles/components/CollectibleListEmpty.tsx ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollectibleListEmpty": () => (/* binding */ CollectibleListEmpty)
/* harmony export */ });
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");


function CollectibleListEmpty() {
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_0__.useTranslation)();
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    sx: {
      alignItems: 'center',
      flexGrow: '1',
      rowGap: 1,
      mt: 7
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__.Typography, {
    variant: "h5"
  }, t('No Collectibles')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__.Typography, {
    variant: "body2",
    sx: {
      color: 'text.secondary'
    }
  }, t('You donâ€™t have any NFTs yet!')));
}

/***/ }),

/***/ "./src/pages/Collectibles/components/CollectibleSkeleton.tsx":
/*!*******************************************************************!*\
  !*** ./src/pages/Collectibles/components/CollectibleSkeleton.tsx ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollectibleSkeleton": () => (/* binding */ CollectibleSkeleton)
/* harmony export */ });
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _CollectibleWrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CollectibleWrapper */ "./src/pages/Collectibles/components/CollectibleWrapper.tsx");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");


function CollectibleSkeleton() {
  return /*#__PURE__*/React.createElement(_CollectibleWrapper__WEBPACK_IMPORTED_MODULE_0__.CollectibleWrapper, null, Array.from({
    length: 4
  }, (_, i) => /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__.Skeleton, {
    variant: "rectangular",
    sx: {
      width: '164px',
      height: '164px',
      mb: 2
    },
    key: i
  })), ' ');
}

/***/ }),

/***/ "./src/pages/Collectibles/components/CollectibleWrapper.tsx":
/*!******************************************************************!*\
  !*** ./src/pages/Collectibles/components/CollectibleWrapper.tsx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollectibleWrapper": () => (/* binding */ CollectibleWrapper)
/* harmony export */ });
/* harmony import */ var react_masonry_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-masonry-css */ "./node_modules/react-masonry-css/dist/react-masonry-css.module.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@mui/material/styles/styled.js");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");


const StyledMasonry = (0,_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_1__["default"])(react_masonry_css__WEBPACK_IMPORTED_MODULE_0__["default"])`
  display: flex;
  padding-bottom: 32px;

  .masonryColumn {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0 0 0 16px;

    &:last-of-type {
      align-items: flex-end;
      padding: 0 16px 0 0;
    }
  }
`;
function CollectibleWrapper({
  children
}) {
  return /*#__PURE__*/React.createElement(StyledMasonry, {
    className: "masonry",
    breakpointCols: 2,
    columnClassName: "masonryColumn",
    "data-testid": "collectibles-grid"
  }, children);
}

/***/ }),

/***/ "./src/pages/Collectibles/hooks/useSetCollectibleParams.tsx":
/*!******************************************************************!*\
  !*** ./src/pages/Collectibles/hooks/useSetCollectibleParams.tsx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useSetCollectibleParams": () => (/* binding */ useSetCollectibleParams)
/* harmony export */ });
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");

function useSetCollectibleParams() {
  const {
    pathname
  } = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_0__.useLocation)();
  const history = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_0__.useHistory)();
  return ({
    nft,
    address,
    options
  }) => {
    const pushOrReplace = options?.replace ? history.replace : history.push;
    pushOrReplace({
      pathname: options?.path ?? pathname,
      search: `?${new URLSearchParams({
        nft: nft?.address ?? '',
        tokenId: nft?.tokenId ?? '',
        address: address ?? ''
      }).toString()}`
    });
  };
}

/***/ }),

/***/ "./src/pages/DeFi/DeFi.tsx":
/*!*********************************!*\
  !*** ./src/pages/DeFi/DeFi.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeFi": () => (/* binding */ DeFi)
/* harmony export */ });
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _src_contexts_DefiProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @src/contexts/DefiProvider */ "./src/contexts/DefiProvider.tsx");
/* harmony import */ var _src_contexts_FeatureFlagsProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @src/contexts/FeatureFlagsProvider */ "./src/contexts/FeatureFlagsProvider.tsx");
/* harmony import */ var _src_components_common_FunctionIsOffline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/components/common/FunctionIsOffline */ "./src/components/common/FunctionIsOffline.tsx");
/* harmony import */ var _components_DefiProtocolListItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/DefiProtocolListItem */ "./src/pages/DeFi/components/DefiProtocolListItem.tsx");
/* harmony import */ var _components_DefiZeroState__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/DefiZeroState */ "./src/pages/DeFi/components/DefiZeroState.tsx");
/* harmony import */ var _components_DefiErrorState__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/DefiErrorState */ "./src/pages/DeFi/components/DefiErrorState.tsx");
/* harmony import */ var _src_background_services_featureFlags_models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @src/background/services/featureFlags/models */ "./src/background/services/featureFlags/models.ts");
/* harmony import */ var _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @src/hooks/useIsFunctionAvailable */ "./src/hooks/useIsFunctionAvailable.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");









function DeFi() {
  const {
    portfolio,
    hasError,
    isLoading
  } = (0,_src_contexts_DefiProvider__WEBPACK_IMPORTED_MODULE_0__.useDefiContext)();
  const {
    featureFlags
  } = (0,_src_contexts_FeatureFlagsProvider__WEBPACK_IMPORTED_MODULE_1__.useFeatureFlagContext)();
  if (!featureFlags[_src_background_services_featureFlags_models__WEBPACK_IMPORTED_MODULE_6__.FeatureGates.DEFI]) {
    return /*#__PURE__*/React.createElement(_src_components_common_FunctionIsOffline__WEBPACK_IMPORTED_MODULE_2__.FunctionIsOffline, {
      hidePageTitle: true,
      functionName: _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_7__.FunctionNames.DEFI
    });
  }
  const hasProtocols = portfolio.protocols.length > 0;
  const isProperlyLoaded = !isLoading && !hasError;
  const isZeroState = isProperlyLoaded && !hasProtocols;
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_8__.Stack, {
    sx: {
      pt: 2,
      pb: 2,
      px: 2,
      flexGrow: 1,
      width: '100%',
      alignItems: 'center'
    }
  }, isLoading && !hasProtocols &&
  /*#__PURE__*/
  // Only show the full loading screen if we have no data at all
  React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_8__.CircularProgress, {
    sx: {
      mt: 9
    },
    size: 100
  }), isZeroState && /*#__PURE__*/React.createElement(_components_DefiZeroState__WEBPACK_IMPORTED_MODULE_4__.DefiZeroState, null), hasError && /*#__PURE__*/React.createElement(_components_DefiErrorState__WEBPACK_IMPORTED_MODULE_5__.DefiErrorState, null), !hasError && hasProtocols && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_8__.Stack, {
    sx: {
      gap: 1,
      width: '100%'
    }
  }, portfolio.protocols.map(protocol => /*#__PURE__*/React.createElement(_components_DefiProtocolListItem__WEBPACK_IMPORTED_MODULE_3__.DefiProtocolListItem, {
    key: protocol.id,
    protocol: protocol
  }))));
}

/***/ }),

/***/ "./src/pages/DeFi/components/DefiErrorState.tsx":
/*!******************************************************!*\
  !*** ./src/pages/DeFi/components/DefiErrorState.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DefiErrorState": () => (/* binding */ DefiErrorState)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");



const DefiErrorState = props => {
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_1__.useTranslation)();
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.Stack, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
    sx: {
      mt: 9,
      gap: 1,
      alignItems: 'center'
    }
  }, props), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.AlertCircleIcon, {
    size: 60,
    sx: {
      mb: 2
    }
  }), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.Typography, {
    variant: "h5"
  }, t('Error!')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_2__.Typography, {
    variant: "body2",
    color: "text.secondary"
  }, t('Data currently unavailable, check back later.')));
};

/***/ }),

/***/ "./src/pages/DeFi/components/DefiProtocolListItem.tsx":
/*!************************************************************!*\
  !*** ./src/pages/DeFi/components/DefiProtocolListItem.tsx ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DefiProtocolListItem": () => (/* binding */ DefiProtocolListItem)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@mui/material/styles/useTheme.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _src_utils_extensionUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @src/utils/extensionUtils */ "./src/utils/extensionUtils.ts");
/* harmony import */ var _hooks_useConvertedCurrencyFormatter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../hooks/useConvertedCurrencyFormatter */ "./src/pages/DeFi/hooks/useConvertedCurrencyFormatter.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");





const DefiProtocolListItem = ({
  protocol,
  ...cardProps
}) => {
  const theme = (0,_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_3__["default"])();
  const history = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_4__.useHistory)();
  const formatValue = (0,_hooks_useConvertedCurrencyFormatter__WEBPACK_IMPORTED_MODULE_2__.useConvertedCurrencyFormatter)();
  const openUrl = url => (0,_src_utils_extensionUtils__WEBPACK_IMPORTED_MODULE_1__.openNewTab)({
    url
  });
  if (protocol.groups.length === 0) {
    /**
     * It's very unlikely, but technically possible that we'll get an empty protocol item
     * from the backend.
     *
     * This mechanism is useful if the user re-activates the extension after closing all
     * positions on a dApp and then lands directly on /defi/:protocolId page.
     * In such situations, we want them to see an empty details screen for that dApp.
     *
     * However if they land here, on the main DeFi page, we don't want to show
     * those protocols in the list anymore.
     */
    return null;
  }
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.Card, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
    sx: {
      width: '100%'
    }
  }, cardProps), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.CardActionArea, {
    onClick: () => history.push(`/defi/${protocol.id}`),
    "data-testid": `defi-protocol-${protocol.id}`
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.Stack, {
    direction: "row",
    sx: {
      height: 60,
      py: 1.5,
      px: 2,
      alignItems: 'center',
      gap: 2
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.Avatar, {
    src: protocol.logoUrl,
    alt: protocol.name,
    secondarySrc: protocol.chainLogoUrl,
    secondaryAvatarProps: {
      sx: {
        width: 14,
        height: 14,
        border: `1px solid ${theme.palette.grey[900]}`
      }
    },
    badgeProps: {
      // eslint-disable-next-line
      // @ts-ignore
      'data-testid': `defi-protocol-chain-${protocol.chainId}`,
      anchorOrigin: {
        vertical: 'bottom',
        horizontal: 'right'
      }
    }
  }), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.Typography, {
    variant: "h6",
    sx: {
      flexGrow: 1
    },
    "data-testid": "defi-protocol-name"
  }, protocol.name), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.Stack, {
    sx: {
      alignItems: 'flex-end'
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.Typography, {
    variant: "button",
    sx: {
      fontSize: 14
    },
    "data-testid": "defi-protocol-value"
  }, formatValue(protocol.totalUsdValue)), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.IconButton, {
    component: "a",
    size: "small",
    sx: {
      mr: -0.5
    },
    onClick: () => openUrl(protocol.siteUrl),
    "data-testid": "defi-protocol-link"
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_5__.ExternalLinkIcon, {
    size: 16
  }))))));
};

/***/ }),

/***/ "./src/pages/DeFi/components/DefiZeroState.tsx":
/*!*****************************************************!*\
  !*** ./src/pages/DeFi/components/DefiZeroState.tsx ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DefiZeroState": () => (/* binding */ DefiZeroState)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _src_utils_extensionUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/utils/extensionUtils */ "./src/utils/extensionUtils.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");





const DefiZeroState = props => {
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_3__.useTranslation)();
  const handleExploreClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => (0,_src_utils_extensionUtils__WEBPACK_IMPORTED_MODULE_2__.openNewTab)({
    url: 'https://core.app/discover/'
  }), []);
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Stack, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
    sx: {
      mt: 9,
      gap: 1,
      alignItems: 'center'
    }
  }, props), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Typography, {
    variant: "h5"
  }, t('No DeFi Transactions')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Typography, {
    variant: "body2",
    color: "text.secondary"
  }, t('Discover top dApps on Avalanche now.')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_4__.Button, {
    color: "primary",
    size: "large",
    onClick: handleExploreClick,
    sx: {
      mt: 1
    }
  }, t('Explore Ecosystem')));
};

/***/ }),

/***/ "./src/pages/DeFi/hooks/useConvertedCurrencyFormatter.ts":
/*!***************************************************************!*\
  !*** ./src/pages/DeFi/hooks/useConvertedCurrencyFormatter.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "useConvertedCurrencyFormatter": () => (/* binding */ useConvertedCurrencyFormatter)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _src_contexts_CurrenciesProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @src/contexts/CurrenciesProvider */ "./src/contexts/CurrenciesProvider.tsx");
/* harmony import */ var _src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/contexts/SettingsProvider */ "./src/contexts/SettingsProvider.tsx");
/* harmony import */ var _src_contexts_utils_getCurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @src/contexts/utils/getCurrencyFormatter */ "./src/contexts/utils/getCurrencyFormatter.ts");




const useConvertedCurrencyFormatter = (sourceCurrency = 'USD') => {
  const {
    convert,
    hasExchangeRate
  } = (0,_src_contexts_CurrenciesProvider__WEBPACK_IMPORTED_MODULE_1__.useCurrenciesContext)();
  const {
    currency: targetCurrency,
    currencyFormatter
  } = (0,_src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_2__.useSettingsContext)();
  const fallbackFormatter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_src_contexts_utils_getCurrencyFormatter__WEBPACK_IMPORTED_MODULE_3__.getCurrencyFormatter)(sourceCurrency), [sourceCurrency]);
  const canConvert = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => hasExchangeRate(sourceCurrency, targetCurrency), [sourceCurrency, targetCurrency, hasExchangeRate]);
  const needsConversion = canConvert && targetCurrency !== sourceCurrency;
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!needsConversion) {
      return fallbackFormatter;
    }
    return value => {
      const converted = convert({
        amount: value,
        from: sourceCurrency,
        to: targetCurrency
      });
      return currencyFormatter(converted);
    };
  }, [convert, currencyFormatter, fallbackFormatter, needsConversion, sourceCurrency, targetCurrency]);
};

/***/ }),

/***/ "./src/pages/Home/components/Portfolio/Portfolio.tsx":
/*!***********************************************************!*\
  !*** ./src/pages/Home/components/Portfolio/Portfolio.tsx ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ListType": () => (/* binding */ ListType),
/* harmony export */   "Portfolio": () => (/* binding */ Portfolio),
/* harmony export */   "PortfolioTabs": () => (/* binding */ PortfolioTabs)
/* harmony export */ });
/* harmony import */ var _src_contexts_AnalyticsProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @src/contexts/AnalyticsProvider */ "./src/contexts/AnalyticsProvider.tsx");
/* harmony import */ var _src_contexts_FeatureFlagsProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @src/contexts/FeatureFlagsProvider */ "./src/contexts/FeatureFlagsProvider.tsx");
/* harmony import */ var _src_pages_DeFi_DeFi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/pages/DeFi/DeFi */ "./src/pages/DeFi/DeFi.tsx");
/* harmony import */ var _Collectibles_Collectibles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../Collectibles/Collectibles */ "./src/pages/Collectibles/Collectibles.tsx");
/* harmony import */ var _NetworkWidget_NetworksWidget__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NetworkWidget/NetworksWidget */ "./src/pages/Home/components/Portfolio/NetworkWidget/NetworksWidget.tsx");
/* harmony import */ var _WalletBalances__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WalletBalances */ "./src/pages/Home/components/Portfolio/WalletBalances.tsx");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@mui/material/styles/styled.js");
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @src/hooks/useIsFunctionAvailable */ "./src/hooks/useIsFunctionAvailable.ts");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/esm/react-router.js");
/* harmony import */ var _src_hooks_usePersistedTabs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @src/hooks/usePersistedTabs */ "./src/hooks/usePersistedTabs.ts");
/* harmony import */ var _src_hooks_usePageHistory__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @src/hooks/usePageHistory */ "./src/hooks/usePageHistory.ts");
/* harmony import */ var _src_components_common_fab_FAB__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @src/components/common/fab/FAB */ "./src/components/common/fab/FAB.tsx");
/* harmony import */ var _src_background_services_featureFlags_models__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @src/background/services/featureFlags/models */ "./src/background/services/featureFlags/models.ts");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");















let PortfolioTabs = /*#__PURE__*/function (PortfolioTabs) {
  PortfolioTabs[PortfolioTabs["ASSETS"] = 0] = "ASSETS";
  PortfolioTabs[PortfolioTabs["COLLECTIBLES"] = 1] = "COLLECTIBLES";
  PortfolioTabs[PortfolioTabs["DEFI"] = 2] = "DEFI";
  return PortfolioTabs;
}({});
let ListType = /*#__PURE__*/function (ListType) {
  ListType["GRID"] = "GRID";
  ListType["LIST"] = "LIST";
  return ListType;
}({});
const functionIds = {
  [PortfolioTabs.ASSETS]: 'ASSETS',
  [PortfolioTabs.COLLECTIBLES]: 'COLLECTIBLES',
  [PortfolioTabs.DEFI]: 'DEFI'
};
const FlexScrollbars = (0,_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_12__["default"])(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.Scrollbars)`
  flex-grow: 1;
  max-height: unset;
  height: 100%;
  width: 100%;

  & > div {
    display: flex;
    flex-direction: column;
  }
`;
function Portfolio() {
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_14__.useTranslation)();
  const {
    capture
  } = (0,_src_contexts_AnalyticsProvider__WEBPACK_IMPORTED_MODULE_0__.useAnalyticsContext)();
  const {
    featureFlags
  } = (0,_src_contexts_FeatureFlagsProvider__WEBPACK_IMPORTED_MODULE_1__.useFeatureFlagContext)();
  const {
    activeTab,
    setActiveTab
  } = (0,_src_hooks_usePersistedTabs__WEBPACK_IMPORTED_MODULE_8__.usePersistedTabs)(PortfolioTabs.ASSETS);
  const {
    isReady,
    checkIsFunctionSupported
  } = (0,_src_hooks_useIsFunctionAvailable__WEBPACK_IMPORTED_MODULE_7__.useIsFunctionAvailable)();
  const [listType, setListType] = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)();
  const [hadDefiEnabled, setHadDefiEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(false);
  const {
    getPageHistoryData
  } = (0,_src_hooks_usePageHistory__WEBPACK_IMPORTED_MODULE_9__.usePageHistory)();
  const {
    listType: historyListType,
    isLoading: isHistoryLoading
  } = getPageHistoryData();
  const [isScrolling, setIsScrolling] = (0,react__WEBPACK_IMPORTED_MODULE_6__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)(() => {
    if (featureFlags[_src_background_services_featureFlags_models__WEBPACK_IMPORTED_MODULE_11__.FeatureGates.DEFI]) {
      // Never set it back to false,
      // we need to know if it was *ever* enabled in the current UI session.
      setHadDefiEnabled(true);
    }
  }, [featureFlags]);
  (0,react__WEBPACK_IMPORTED_MODULE_6__.useEffect)(() => {
    if (isHistoryLoading) {
      return;
    }
    if (historyListType) {
      setListType(historyListType);
      return;
    }
    setListType(ListType.GRID);
  }, [historyListType, isHistoryLoading, setListType]);
  const shouldShow = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)(tab => {
    if (tab === PortfolioTabs.DEFI && !hadDefiEnabled) {
      return false;
    }
    const idToCheck = functionIds[tab];
    if (!idToCheck) {
      return false;
    }
    return checkIsFunctionSupported(idToCheck);
  }, [checkIsFunctionSupported, hadDefiEnabled]);
  const handleChange = (0,react__WEBPACK_IMPORTED_MODULE_6__.useCallback)((_event, newValue) => {
    setActiveTab(newValue);
    if (newValue === PortfolioTabs.ASSETS) {
      capture('PortfolioAssetsClicked');
    } else if (newValue === PortfolioTabs.COLLECTIBLES) {
      capture('PortfolioCollectiblesClicked');
    } else if (newValue === PortfolioTabs.DEFI) {
      capture('PortfolioDefiClicked');
    }
  }, [capture, setActiveTab]);
  const tabs = (0,react__WEBPACK_IMPORTED_MODULE_6__.useMemo)(() => {
    const tabsToShow = Object.values(PortfolioTabs).filter(tab => shouldShow(tab)).map(tab => {
      const label = tab === PortfolioTabs.ASSETS ? t('Assets') : tab === PortfolioTabs.COLLECTIBLES ? t('Collectibles') : tab === PortfolioTabs.DEFI ? t('DeFi') : null;
      return {
        label,
        tab
      };
    });
    return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.Tabs, {
      onChange: handleChange,
      value: activeTab,
      size: "medium",
      variant: "fullWidth"
    }, tabsToShow.map(({
      label,
      tab
    }) => {
      return label ? /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.Tab, {
        label: label,
        value: tab,
        key: `portfolio-tab-${tab}`
      }) : null;
    }));
  }, [activeTab, handleChange, shouldShow, t]);
  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.Stack, {
    sx: {
      flexGrow: 1
    }
  }, /*#__PURE__*/React.createElement(_WalletBalances__WEBPACK_IMPORTED_MODULE_5__.WalletBalances, null), /*#__PURE__*/React.createElement(_src_components_common_fab_FAB__WEBPACK_IMPORTED_MODULE_10__.FAB, {
    isContentScrolling: isScrolling
  }), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.Stack, {
    sx: {
      flexGrow: 1
    }
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.Box, {
    sx: {
      mx: 2,
      mt: 1,
      borderBottom: 1,
      borderColor: 'divider'
    }
  }, tabs), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.Stack, {
    sx: {
      flexGrow: 1
    }
  }, /*#__PURE__*/React.createElement(FlexScrollbars, {
    onScrollStart: () => setIsScrolling(true),
    onScrollStop: () => setIsScrolling(false)
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.TabPanel, {
    value: activeTab,
    index: PortfolioTabs.ASSETS,
    sx: {
      height: '100%',
      pb: 3
    }
  }, /*#__PURE__*/React.createElement(_NetworkWidget_NetworksWidget__WEBPACK_IMPORTED_MODULE_4__.NetworksWidget, null)), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.TabPanel, {
    value: activeTab,
    index: PortfolioTabs.COLLECTIBLES,
    sx: {
      height: '100%'
    }
  }, shouldShow(PortfolioTabs.COLLECTIBLES) ? listType ? /*#__PURE__*/React.createElement(_Collectibles_Collectibles__WEBPACK_IMPORTED_MODULE_3__.Collectibles, {
    listType: listType,
    setListType: setListType,
    isHistoryLoading: isHistoryLoading
  }) : /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.CircularProgress, {
    size: 60
  }) : isReady &&
  /*#__PURE__*/
  // Only redirect when we have all the context needed to decide
  React.createElement(react_router_dom__WEBPACK_IMPORTED_MODULE_15__.Redirect, {
    to: '/'
  })), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_13__.TabPanel, {
    value: activeTab,
    index: PortfolioTabs.DEFI,
    sx: {
      height: '100%',
      pb: 3
    }
  }, /*#__PURE__*/React.createElement(_src_pages_DeFi_DeFi__WEBPACK_IMPORTED_MODULE_2__.DeFi, null))))));
}

/***/ }),

/***/ "./src/pages/Home/components/Portfolio/WalletBalances.tsx":
/*!****************************************************************!*\
  !*** ./src/pages/Home/components/Portfolio/WalletBalances.tsx ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WalletBalances": () => (/* binding */ WalletBalances)
/* harmony export */ });
/* harmony import */ var _avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @avalabs/core-k2-components */ "./node_modules/@avalabs/core-k2-components/dist/index.js");
/* harmony import */ var _avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @avalabs/vm-module-types */ "./node_modules/@avalabs/vm-module-types/dist/index.js");
/* harmony import */ var _src_components_common_ProfitAndLoss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @src/components/common/ProfitAndLoss */ "./src/components/common/ProfitAndLoss.tsx");
/* harmony import */ var _src_contexts_AccountsProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @src/contexts/AccountsProvider */ "./src/contexts/AccountsProvider.tsx");
/* harmony import */ var _src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @src/contexts/BalancesProvider */ "./src/contexts/BalancesProvider.tsx");
/* harmony import */ var _src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @src/contexts/SettingsProvider */ "./src/contexts/SettingsProvider.tsx");
/* harmony import */ var _src_hooks_useBalanceTotalInCurrency__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @src/hooks/useBalanceTotalInCurrency */ "./src/hooks/useBalanceTotalInCurrency.ts");
/* harmony import */ var _src_hooks_useLiveBalance__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @src/hooks/useLiveBalance */ "./src/hooks/useLiveBalance.ts");
/* harmony import */ var _src_hooks_useTokenPriceIsMissing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @src/hooks/useTokenPriceIsMissing */ "./src/hooks/useTokenPriceIsMissing.ts");
/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-i18next */ "./node_modules/react-i18next/dist/es/useTranslation.js");
/* provided dependency */ var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");










const POLLED_BALANCES = [_avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.NATIVE, _avalabs_vm_module_types__WEBPACK_IMPORTED_MODULE_0__.TokenType.ERC20];
function WalletBalances() {
  const {
    currency,
    currencyFormatter
  } = (0,_src_contexts_SettingsProvider__WEBPACK_IMPORTED_MODULE_4__.useSettingsContext)();
  const {
    accounts: {
      active: activeAccount
    }
  } = (0,_src_contexts_AccountsProvider__WEBPACK_IMPORTED_MODULE_2__.useAccountsContext)();
  const {
    isTokensCached,
    totalBalance
  } = (0,_src_contexts_BalancesProvider__WEBPACK_IMPORTED_MODULE_3__.useBalancesContext)();
  const {
    t
  } = (0,react_i18next__WEBPACK_IMPORTED_MODULE_8__.useTranslation)();
  const {
    favoriteNetworksMissingPrice,
    activeNetworkMissingPrice
  } = (0,_src_hooks_useTokenPriceIsMissing__WEBPACK_IMPORTED_MODULE_7__.useTokenPriceMissing)();
  const balanceTotalUSD = (0,_src_hooks_useBalanceTotalInCurrency__WEBPACK_IMPORTED_MODULE_5__.useBalanceTotalInCurrency)(activeAccount);
  const balanceTotalUSDSum = balanceTotalUSD?.sum;
  const totalBalanceSum = totalBalance?.sum || null;
  const totalBalanceChanges = totalBalance?.priceChange;
  const totalBalanceChange = totalBalance ? {
    value: totalBalanceChanges?.value,
    percentage: balanceTotalUSDSum ? totalBalance?.priceChange.value / balanceTotalUSDSum * 100 : undefined
  } : {};
  const balanceTotal = balanceTotalUSDSum !== null && balanceTotalUSDSum !== undefined ? balanceTotalUSDSum : totalBalanceSum ?? null;
  (0,_src_hooks_useLiveBalance__WEBPACK_IMPORTED_MODULE_6__.useLiveBalance)(POLLED_BALANCES); // Make sure we show the latest balances.

  return /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Stack, {
    direction: "row",
    sx: {
      justifyContent: 'center',
      alignItems: 'flex-end',
      minHeight: 5.5,
      width: '100%',
      mt: 1,
      gap: 1.25
    }
  }, balanceTotal === null ? /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Skeleton, {
    variant: "rounded",
    sx: {
      height: 37,
      width: 215
    }
  }) : /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Stack, null, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Stack, {
    sx: {
      flexDirection: 'row',
      alignItems: 'baseline',
      gap: 1.25
    }
  }, isTokensCached && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Tooltip, {
    title: t('Balances loading...'),
    placement: "bottom"
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.AlertTriangleIcon, {
    size: 19,
    sx: {
      color: 'warning.main',
      mr: 1
    }
  })), !isTokensCached && (favoriteNetworksMissingPrice || activeNetworkMissingPrice) && /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Tooltip, {
    title: t('The prices of some tokens are missing. The balance might not be accurate currently.'),
    placement: "bottom"
  }, /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.AlertTriangleIcon, {
    size: 19,
    sx: {
      color: 'warning.main',
      mr: 1
    }
  })), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Typography, {
    "data-testid": "wallet-balance",
    variant: "h3",
    sx: {
      fontWeight: 'fontWeightBold'
    }
  }, currencyFormatter(balanceTotal).replace(currency, '')), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Typography, {
    variant: "body1",
    sx: {
      opacity: '60%'
    }
  }, currency)), /*#__PURE__*/React.createElement(_avalabs_core_k2_components__WEBPACK_IMPORTED_MODULE_9__.Stack, {
    sx: {
      alignItems: 'center'
    }
  }, /*#__PURE__*/React.createElement(_src_components_common_ProfitAndLoss__WEBPACK_IMPORTED_MODULE_1__.PAndL, {
    value: totalBalanceChange.value,
    percentage: totalBalanceChange.percentage,
    size: "big",
    showPercentage: true
  }))));
}

/***/ }),

/***/ "./node_modules/react-masonry-css/dist/react-masonry-css.module.js":
/*!*************************************************************************!*\
  !*** ./node_modules/react-masonry-css/dist/react-masonry-css.module.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* provided dependency */ var console = __webpack_require__(/*! ./node_modules/console-browserify/index.js */ "./node_modules/console-browserify/index.js");


function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
const defaultProps = {
  breakpointCols: undefined,
  // optional, number or object { default: number, [key: number]: number }
  className: undefined,
  // required, string
  columnClassName: undefined,
  // optional, string
  // Any React children. Typically an array of JSX items
  children: undefined,
  // Custom attributes, however it is advised against
  // using these to prevent unintended issues and future conflicts
  // ...any other attribute, will be added to the container
  columnAttrs: undefined,
  // object, added to the columns
  // Deprecated props
  // The column property is deprecated.
  // It is an alias of the `columnAttrs` property
  column: undefined
};
const DEFAULT_COLUMNS = 2;

class Masonry extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props) {
    super(props); // Correct scope for when methods are accessed externally

    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);
    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state

    let columnCount;

    if (this.props.breakpointCols && this.props.breakpointCols.default) {
      columnCount = this.props.breakpointCols.default;
    } else {
      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;
    }

    this.state = {
      columnCount
    };
  }

  componentDidMount() {
    this.reCalculateColumnCount(); // window may not be available in some environments

    if (window) {
      window.addEventListener('resize', this.reCalculateColumnCountDebounce);
    }
  }

  componentDidUpdate() {
    this.reCalculateColumnCount();
  }

  componentWillUnmount() {
    if (window) {
      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);
    }
  }

  reCalculateColumnCountDebounce() {
    if (!window || !window.requestAnimationFrame) {
      // IE10+
      this.reCalculateColumnCount();
      return;
    }

    if (window.cancelAnimationFrame) {
      // IE10+
      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);
    }

    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {
      this.reCalculateColumnCount();
    });
  }

  reCalculateColumnCount() {
    const windowWidth = window && window.innerWidth || Infinity;
    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object

    if (typeof breakpointColsObject !== 'object') {
      breakpointColsObject = {
        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS
      };
    }

    let matchedBreakpoint = Infinity;
    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;

    for (let breakpoint in breakpointColsObject) {
      const optBreakpoint = parseInt(breakpoint);
      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;

      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {
        matchedBreakpoint = optBreakpoint;
        columns = breakpointColsObject[breakpoint];
      }
    }

    columns = Math.max(1, parseInt(columns) || 1);

    if (this.state.columnCount !== columns) {
      this.setState({
        columnCount: columns
      });
    }
  }

  itemsInColumns() {
    const currentColumnCount = this.state.columnCount;
    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array

    const items = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(this.props.children);

    for (let i = 0; i < items.length; i++) {
      const columnIndex = i % currentColumnCount;

      if (!itemsInColumns[columnIndex]) {
        itemsInColumns[columnIndex] = [];
      }

      itemsInColumns[columnIndex].push(items[i]);
    }

    return itemsInColumns;
  }

  renderColumns() {
    const {
      column,
      columnAttrs = {},
      columnClassName
    } = this.props;
    const childrenInColumns = this.itemsInColumns();
    const columnWidth = `${100 / childrenInColumns.length}%`;
    let className = columnClassName;

    if (className && typeof className !== 'string') {
      this.logDeprecated('The property "columnClassName" requires a string'); // This is a deprecated default and will be removed soon.

      if (typeof className === 'undefined') {
        className = 'my-masonry-grid_column';
      }
    }

    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {
      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {
        width: columnWidth
      }),
      className
    });

    return childrenInColumns.map((items, i) => {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", _extends({}, columnAttributes, {
        key: i
      }), items);
    });
  }

  logDeprecated(message) {
    console.error('[Masonry]', message);
  }

  render() {
    const _this$props = this.props,
          {
      // ignored
      children,
      breakpointCols,
      columnClassName,
      columnAttrs,
      column,
      // used
      className
    } = _this$props,
          rest = _objectWithoutProperties(_this$props, ["children", "breakpointCols", "columnClassName", "columnAttrs", "column", "className"]);

    let classNameOutput = className;

    if (typeof className !== 'string') {
      this.logDeprecated('The property "className" requires a string'); // This is a deprecated default and will be removed soon.

      if (typeof className === 'undefined') {
        classNameOutput = 'my-masonry-grid';
      }
    }

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", _extends({}, rest, {
      className: classNameOutput
    }), this.renderColumns());
  }

}

Masonry.defaultProps = defaultProps;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Masonry);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2F2YWxhYnNfY29yZS11dGlscy1zZGtfZXNtX2JuVG9CaWdfanMtbm9kZV9tb2R1bGVzX2F2YWxhYnNfY29yZS11dGlscy1zZGtfZXNtX3RyLWFhNDMyNS5idW5kbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNCLGtCQUFrQixRQUFRLDZDQUFDLFlBQVksV0FBVywrQ0FBQyxzQkFBMkM7Ozs7Ozs7Ozs7Ozs7OztBQ0FwSCxvQkFBb0IsaUJBQWlCLEdBQUcsY0FBYyxFQUErQjs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDQWhEO0FBQ2E7QUFRM0MsTUFBTUUsT0FBTyxHQUFHQSxDQUFDO0VBQUVDLFFBQVE7RUFBRUMsSUFBSTtFQUFFQztBQUF3QixDQUFDLEtBQUs7RUFDdEUsSUFBSUYsUUFBUSxDQUFDRyxNQUFNLEtBQUssQ0FBQyxFQUFFO0lBQ3pCLE1BQU0sSUFBSUMsS0FBSyxDQUFDLHFDQUFxQyxDQUFDO0VBQ3hEO0VBRUEsb0JBQ0VDLEtBQUEsQ0FBQUMsYUFBQSxDQUFDUiw0REFBRztJQUNGUyxFQUFFLEVBQUU7TUFDRkMsUUFBUSxFQUFFLFVBQVU7TUFDcEJDLEtBQUssRUFBRVIsSUFBSTtNQUNYUyxNQUFNLEVBQUVULElBQUk7TUFDWlUsZUFBZSxFQUFFLFNBQVM7TUFDMUJDLFNBQVMsRUFBRVYsU0FBUyxHQUFHLFlBQVksR0FBRyxpQkFBaUI7TUFDdkRXLFVBQVUsRUFBRSwyQkFBMkI7TUFDdkNDLGNBQWMsRUFBRTtJQUNsQjtFQUFFLGdCQUVEakIsbURBQVksQ0FBQ0csUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFO0lBQ3pCQyxJQUFJO0lBQ0pNLEVBQUUsRUFBRTtNQUNGSSxlQUFlLEVBQUUsU0FBUztNQUMxQkMsU0FBUyxFQUFFLGlCQUFpQjtNQUM1QkosUUFBUSxFQUFFLFVBQVU7TUFDcEJPLGtCQUFrQixFQUFFLFFBQVE7TUFDNUJDLE1BQU0sRUFBRSxDQUFDO0lBQ1g7RUFDRixDQUFDLENBQUMsZUFFRG5CLG1E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QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLDBEQUEwRDs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQSwwREFBMEQ7O0FBRTFELGtCQUFrQixtREFBc0I7O0FBRXhDLG9CQUFvQixrQkFBa0I7QUFDdEM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxNQUFNO0FBQ047QUFDQSwyQkFBMkIsK0JBQStCO0FBQzFEOztBQUVBO0FBQ0EsOEVBQThFOztBQUU5RTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5RUFBeUUsMkJBQTJCO0FBQ3BHLDJDQUEyQyx3QkFBd0I7QUFDbkU7QUFDQSxPQUFPO0FBQ1A7QUFDQSxLQUFLOztBQUVMO0FBQ0EsMEJBQTBCLGdEQUFtQixtQkFBbUI7QUFDaEU7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0EsSUFBSSxPQUFPO0FBQ1g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjs7QUFFQTs7QUFFQTtBQUNBLHdFQUF3RTs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCLGdEQUFtQixtQkFBbUI7QUFDOUQ7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7O0FBRUE7O0FBRUEsaUVBQWUsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXZhbGFuY2hlLWV4dGVuc2lvbi8uL25vZGVfbW9kdWxlcy9AYXZhbGFicy9jb3JlLXV0aWxzLXNkay9lc20vYm5Ub0JpZy5qcyIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL0BhdmFsYWJzL2NvcmUtdXRpbHMtc2RrL2VzbS90cnVuYXRlQWRkcmVzcy5qcyIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL0ZsaXBwZXIudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvY29tcG9uZW50cy9jb21tb24vRnVuY3Rpb25Jc09mZmxpbmUudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvY29tcG9uZW50cy9jb21tb24vVG9rZW5DYXJkLnRzeCIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vc3JjL2NvbXBvbmVudHMvY29tbW9uL2ZhYi9GQUIudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvY29tcG9uZW50cy9jb21tb24vaW5maW5pdGVTY3JvbGwvSW5maW5pdGVTY3JvbGwudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvaG9va3MvdXNlQmFsYW5jZVRvdGFsSW5DdXJyZW5jeS50cyIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vc3JjL2hvb2tzL3VzZU5mdHMudHMiLCJ3ZWJwYWNrOi8vYXZhbGFuY2hlLWV4dGVuc2lvbi8uL3NyYy9wYWdlcy9Db2xsZWN0aWJsZXMvQ29sbGVjdGlibGVzLnRzeCIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vc3JjL3BhZ2VzL0NvbGxlY3RpYmxlcy9jb21wb25lbnRzL0NvbGxlY3RpYmxlR3JpZC50c3giLCJ3ZWJwYWNrOi8vYXZhbGFuY2hlLWV4dGVuc2lvbi8uL3NyYy9wYWdlcy9Db2xsZWN0aWJsZXMvY29tcG9uZW50cy9Db2xsZWN0aWJsZUxpc3QudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvcGFnZXMvQ29sbGVjdGlibGVzL2NvbXBvbmVudHMvQ29sbGVjdGlibGVMaXN0RW1wdHkudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvcGFnZXMvQ29sbGVjdGlibGVzL2NvbXBvbmVudHMvQ29sbGVjdGlibGVTa2VsZXRvbi50c3giLCJ3ZWJwYWNrOi8vYXZhbGFuY2hlLWV4dGVuc2lvbi8uL3NyYy9wYWdlcy9Db2xsZWN0aWJsZXMvY29tcG9uZW50cy9Db2xsZWN0aWJsZVdyYXBwZXIudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvcGFnZXMvQ29sbGVjdGlibGVzL2hvb2tzL3VzZVNldENvbGxlY3RpYmxlUGFyYW1zLnRzeCIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vc3JjL3BhZ2VzL0RlRmkvRGVGaS50c3giLCJ3ZWJwYWNrOi8vYXZhbGFuY2hlLWV4dGVuc2lvbi8uL3NyYy9wYWdlcy9EZUZpL2NvbXBvbmVudHMvRGVmaUVycm9yU3RhdGUudHN4Iiwid2VicGFjazovL2F2YWxhbmNoZS1leHRlbnNpb24vLi9zcmMvcGFnZXMvRGVGaS9jb21wb25lbnRzL0RlZmlQcm90b2NvbExpc3RJdGVtLnRzeCIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vc3JjL3BhZ2VzL0RlRmkvY29tcG9uZW50cy9EZWZpWmVyb1N0YXRlLnRzeCIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vc3JjL3BhZ2VzL0RlRmkvaG9va3MvdXNlQ29udmVydGVkQ3VycmVuY3lGb3JtYXR0ZXIudHMiLCJ3ZWJwYWNrOi8vYXZhbGFuY2hlLWV4dGVuc2lvbi8uL3NyYy9wYWdlcy9Ib21lL2NvbXBvbmVudHMvUG9ydGZvbGlvL1BvcnRmb2xpby50c3giLCJ3ZWJwYWNrOi8vYXZhbGFuY2hlLWV4dGVuc2lvbi8uL3NyYy9wYWdlcy9Ib21lL2NvbXBvbmVudHMvUG9ydGZvbGlvL1dhbGxldEJhbGFuY2VzLnRzeCIsIndlYnBhY2s6Ly9hdmFsYW5jaGUtZXh0ZW5zaW9uLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1hc29ucnktY3NzL2Rpc3QvcmVhY3QtbWFzb25yeS1jc3MubW9kdWxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBvIGZyb21cImJpZy5qc1wiO2Z1bmN0aW9uIHQodCxuPTApe2NvbnN0IHI9bygxMCkucG93KG4pO3JldHVybiBuZXcgbyh0LnRvU3RyaW5nKCkpLmRpdihyKX1leHBvcnR7dCBhcyBiblRvQmlnfTtcbiIsImNvbnN0IHM9KHMsdD02KT0+YCR7cy5zdWJzdHJpbmcoMCx0KX3igKYke3Muc2xpY2UoLXQvMil9YDtleHBvcnR7cyBhcyB0cnVuY2F0ZUFkZHJlc3N9O1xuIiwiaW1wb3J0IHsgY2xvbmVFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQm94IH0gZnJvbSAnQGF2YWxhYnMvY29yZS1rMi1jb21wb25lbnRzJztcblxudHlwZSBGbGlwcGVyUHJvcHMgPSB7XG4gIHNpemU6IG51bWJlcjtcbiAgaXNGbGlwcGVkOiBib29sZWFuO1xuICBjaGlsZHJlbjogW1JlYWN0LlJlYWN0RWxlbWVudCwgUmVhY3QuUmVhY3RFbGVtZW50XTtcbn07XG5cbmV4cG9ydCBjb25zdCBGbGlwcGVyID0gKHsgY2hpbGRyZW4sIHNpemUsIGlzRmxpcHBlZCB9OiBGbGlwcGVyUHJvcHMpID0+IHtcbiAgaWYgKGNoaWxkcmVuLmxlbmd0aCAhPT0gMikge1xuICAgIHRocm93IG5ldyBFcnJvcignRmxpcHBlciBleHBlY3RzIDIgaWNvbnMgYXMgY2hpbGRyZW4nKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPEJveFxuICAgICAgc3g9e3tcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgICBoZWlnaHQ6IHNpemUsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2luaGVyaXQnLFxuICAgICAgICB0cmFuc2Zvcm06IGlzRmxpcHBlZCA/ICdyb3RhdGVYKDApJyA6ICdyb3RhdGVYKDE4MGRlZyknLFxuICAgICAgICB0cmFuc2l0aW9uOiAndHJhbnNmb3JtIC4ycyBlYXNlLWluLW91dCcsXG4gICAgICAgIHRyYW5zZm9ybVN0eWxlOiAncHJlc2VydmUtM2QnLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2xvbmVFbGVtZW50KGNoaWxkcmVuWzBdLCB7XG4gICAgICAgIHNpemUsXG4gICAgICAgIHN4OiB7XG4gICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnaW5oZXJpdCcsXG4gICAgICAgICAgdHJhbnNmb3JtOiAncm90YXRlWCgxODBkZWcpJyxcbiAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICBiYWNrZmFjZVZpc2liaWxpdHk6ICdoaWRkZW4nLFxuICAgICAgICAgIHpJbmRleDogLTEsXG4gICAgICAgIH0sXG4gICAgICB9KX1cblxuICAgICAge2Nsb25lRWxlbWVudChjaGlsZHJlblsxXSwge1xuICAgICAgICBzaXplLFxuICAgICAgICBzeDoge1xuICAgICAgICAgIGJhY2tncm91bmQ6ICdpbmhlcml0JyxcbiAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICBiYWNrZmFjZVZpc2liaWxpdHk6ICdoaWRkZW4nLFxuICAgICAgICAgIHpJbmRleDogMSxcbiAgICAgICAgfSxcbiAgICAgIH0pfVxuICAgIDwvQm94PlxuICApO1xufTtcbiIsImltcG9ydCB7IFByb3BzV2l0aENoaWxkcmVuIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUGFnZVRpdGxlLCBQYWdlVGl0bGVWYXJpYW50IH0gZnJvbSAnLi9QYWdlVGl0bGUnO1xuaW1wb3J0IHsgdCBhcyB0cmFuc2xhdGUgfSBmcm9tICdpMThuZXh0JztcbmltcG9ydCB7XG4gIEFsZXJ0Q2lyY2xlSWNvbixcbiAgU3RhY2ssXG4gIFR5cG9ncmFwaHksXG59IGZyb20gJ0BhdmFsYWJzL2NvcmUtazItY29tcG9uZW50cyc7XG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnO1xuaW1wb3J0IHsgRnVuY3Rpb25OYW1lcyB9IGZyb20gJ0BzcmMvaG9va3MvdXNlSXNGdW5jdGlvbkF2YWlsYWJsZSc7XG5cbmludGVyZmFjZSBGdW5jdGlvbklzT2ZmbGluZVByb3BzIHtcbiAgZnVuY3Rpb25OYW1lOiBGdW5jdGlvbk5hbWVzO1xuICBoaWRlUGFnZVRpdGxlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRyYW5zbGF0ZWRGdW5jdGlvbk5hbWUobmFtZTogRnVuY3Rpb25OYW1lcykge1xuICBjb25zdCB0cmFuc2xhdGlvbnMgPSB7XG4gICAgW0Z1bmN0aW9uTmFtZXMuQlJJREdFXTogdHJhbnNsYXRlKCdCcmlkZ2UnKSxcbiAgICBbRnVuY3Rpb25OYW1lcy5TV0FQXTogdHJhbnNsYXRlKCdTd2FwJyksXG4gICAgW0Z1bmN0aW9uTmFtZXMuU0VORF06IHRyYW5zbGF0ZSgnU2VuZCcpLFxuICAgIFtGdW5jdGlvbk5hbWVzLkJVWV06IHRyYW5zbGF0ZSgnQnV5JyksXG4gICAgW0Z1bmN0aW9uTmFtZXMuREVGSV06IHRyYW5zbGF0ZSgnRGVGaScpLFxuICAgIFtGdW5jdGlvbk5hbWVzLktFWVNUT05FXTogdHJhbnNsYXRlKCdLZXlzdG9uZScpLFxuICAgIFtGdW5jdGlvbk5hbWVzLlRPS0VOX0RFVEFJTFNdOiB0cmFuc2xhdGUoJ1Rva2VuIERldGFpbHMnKSxcbiAgfTtcblxuICByZXR1cm4gdHJhbnNsYXRpb25zW25hbWVdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gRnVuY3Rpb25Jc09mZmxpbmUoe1xuICBmdW5jdGlvbk5hbWUsXG4gIGhpZGVQYWdlVGl0bGUsXG4gIGNoaWxkcmVuLFxufTogUHJvcHNXaXRoQ2hpbGRyZW48RnVuY3Rpb25Jc09mZmxpbmVQcm9wcz4pIHtcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpO1xuXG4gIHJldHVybiAoXG4gICAgPFN0YWNrIHN4PXt7IGhlaWdodDogJzEwMCUnLCB3aWR0aDogJzEwMCUnIH19PlxuICAgICAgeyFoaWRlUGFnZVRpdGxlICYmIChcbiAgICAgICAgPFBhZ2VUaXRsZSB2YXJpYW50PXtQYWdlVGl0bGVWYXJpYW50LlBSSU1BUll9Pnt0KCdTb3JyeScpfTwvUGFnZVRpdGxlPlxuICAgICAgKX1cbiAgICAgIDxTdGFja1xuICAgICAgICBzeD17eyBhbGlnbkl0ZW1zOiAnY2VudGVyJywganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLCBmbGV4R3JvdzogMSB9fVxuICAgICAgPlxuICAgICAgICA8QWxlcnRDaXJjbGVJY29uIHNpemU9ezcyfSBzeD17eyBtYjogMywgbXQ6IC05IH19IC8+XG4gICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNVwiIHN4PXt7IG1iOiAxIH19PlxuICAgICAgICAgIHt0KCdGZWF0dXJlIERpc2FibGVkJyl9XG4gICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgPFR5cG9ncmFwaHlcbiAgICAgICAgICBzaXplPXsxNn1cbiAgICAgICAgICBhbGlnbj1cImNlbnRlclwiXG4gICAgICAgICAgaGVpZ2h0PVwiMjRweFwiXG4gICAgICAgICAgc3g9e3sgY29sb3I6ICd0ZXh0LnNlY29uZGFyeScgfX1cbiAgICAgICAgPlxuICAgICAgICAgIHt0KCd7e2Z1bmN0aW9uTmFtZX19IGlzIGN1cnJlbnRseSB1bmF2YWlsYWJsZS4nLCB7XG4gICAgICAgICAgICBmdW5jdGlvbk5hbWU6XG4gICAgICAgICAgICAgIGdldFRyYW5zbGF0ZWRGdW5jdGlvbk5hbWUoZnVuY3Rpb25OYW1lKSA/PyB0KCdUaGlzIEZlYXR1cmUnKSxcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICA8VHlwb2dyYXBoeSBzeD17eyBjb2xvcjogJ3RleHQuc2Vjb25kYXJ5JyB9fT5cbiAgICAgICAgICB7dCgnUGxlYXNlIGNoZWNrIGJhY2sgbGF0ZXIgYW5kIHRyeSBhZ2Fpbi4nKX1cbiAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L1N0YWNrPlxuICAgIDwvU3RhY2s+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBQcm9wc1dpdGhDaGlsZHJlbiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IENhcmQsIFN0YWNrLCBUeXBvZ3JhcGh5IH0gZnJvbSAnQGF2YWxhYnMvY29yZS1rMi1jb21wb25lbnRzJztcblxuaW50ZXJmYWNlIFRva2VuQ2FyZFByb3BzIHtcbiAgbmFtZTogc3RyaW5nO1xuICBiYWxhbmNlRGlzcGxheVZhbHVlPzogc3RyaW5nIHwgbnVtYmVyO1xuICBiYWxhbmNlSW5DdXJyZW5jeT86IHN0cmluZztcbiAgb25DbGljaz8oKTogdm9pZDtcbn1cblxuLy8gVE9ETzogVGhpcyBjb21wb25lbnQgaXMgdGhlIGJlZ2lubmluZyBvZiB0aGUgVG9rZW5DYXJkIGZyb20gUmVhY3QgQ29tcG9uZW50cyBrMiBtaWdyYXRpb24sIGl0IHNob3VsZCBiZSBjb250aW51ZWQgaW4gYW5vdGhlciB0aWNrZXQgaWUuOiAjQ1AtNDM3MSBtaWdyYXRlIFN3YXAgdG8gSzJcblxuZXhwb3J0IGZ1bmN0aW9uIFRva2VuQ2FyZCh7XG4gIG5hbWUsXG4gIG9uQ2xpY2ssXG4gIGJhbGFuY2VJbkN1cnJlbmN5LFxuICBjaGlsZHJlbixcbn06IFByb3BzV2l0aENoaWxkcmVuPFRva2VuQ2FyZFByb3BzPikge1xuICByZXR1cm4gKFxuICAgIDxDYXJkXG4gICAgICBzeD17e1xuICAgICAgICBweTogMSxcbiAgICAgICAgcHg6IDIsXG4gICAgICAgIGJvcmRlclJhZGl1czogMSxcbiAgICAgICAgbWI6IDEsXG4gICAgICAgIGN1cnNvcjogYCR7KCkgPT4gKG9uQ2xpY2sgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcpfWAsXG4gICAgICB9fVxuICAgICAgb25DbGljaz17KCkgPT4gb25DbGljayAmJiBvbkNsaWNrKCl9XG4gICAgICBzdHlsZT17eyBjdXJzb3I6IG9uQ2xpY2sgPyAncG9pbnRlcicgOiAnZGVmYXVsdCcgfX1cbiAgICA+XG4gICAgICA8U3RhY2tcbiAgICAgICAgc3g9e3tcbiAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICB9fVxuICAgICAgICBkYXRhLXRlc3RpZD17YCR7bmFtZX0tJHtiYWxhbmNlSW5DdXJyZW5jeX1gfVxuICAgICAgPlxuICAgICAgICA8U3RhY2sgc3g9e3sgZmxleERpcmVjdGlvbjogJ3JvdycgfX0+e2NoaWxkcmVufTwvU3RhY2s+XG5cbiAgICAgICAgPFN0YWNrXG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgICAgIG1sOiAyLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICA8VHlwb2dyYXBoeSB2YXJpYW49XCJib2R5MlwiPntuYW1lfTwvVHlwb2dyYXBoeT5cbiAgICAgICAgICB7YmFsYW5jZUluQ3VycmVuY3kgJiYgKFxuICAgICAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFuPVwiYm9keTJcIj57YmFsYW5jZUluQ3VycmVuY3l9PC9UeXBvZ3JhcGh5PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvU3RhY2s+XG4gICAgICA8L1N0YWNrPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn1cbiIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUhpc3RvcnkgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XG5pbXBvcnQge1xuICBTdGFjayxcbiAgVHlwb2dyYXBoeSxcbiAgc3R5bGVkLFxuICBCYWNrZHJvcCxcbiAgUVJDb2RlSWNvbixcbiAgU3dhcEljb24sXG4gIEJ1eUljb24sXG4gIEJyaWRnZUljb24sXG4gIEFycm93VXBSaWdodEljb24sXG4gIHVzZVRoZW1lLFxuICBCdXR0b24sXG4gIExpZ2h0bmluZ0ljb24sXG4gIFBvcHBlcixcbiAgR3JvdyxcbiAgQ29sbGFwc2UsXG4gIFhJY29uLFxuICBJY29uQnV0dG9uLFxufSBmcm9tICdAYXZhbGFicy9jb3JlLWsyLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQge1xuICBGdW5jdGlvbk5hbWVzLFxuICB1c2VJc0Z1bmN0aW9uQXZhaWxhYmxlLFxufSBmcm9tICdAc3JjL2hvb2tzL3VzZUlzRnVuY3Rpb25BdmFpbGFibGUnO1xuaW1wb3J0IHsgdXNlQW5hbHl0aWNzQ29udGV4dCB9IGZyb20gJ0BzcmMvY29udGV4dHMvQW5hbHl0aWNzUHJvdmlkZXInO1xuaW1wb3J0IHsgZ2V0Q29yZVdlYlVybCB9IGZyb20gJ0BzcmMvdXRpbHMvZ2V0Q29yZVdlYlVybCc7XG5pbXBvcnQgeyBGbGlwcGVyIH0gZnJvbSAnLi4vRmxpcHBlcic7XG5cbmNvbnN0IEFjdGlvbkJ1dHRvbldyYXBwZXIgPSBzdHlsZWQoU3RhY2spYFxuICBwYWRkaW5nOiAwIDhweDtcbiAgbWFyZ2luOiA4cHggMDtcbiAgYm9yZGVyLXJhZGl1czogMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDRweDtcbiAgd2lkdGg6IDEwMCU7XG5cbiAgLmJ1dHRvbjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3R0b206IC0xOHB4O1xuICAgIGhlaWdodDogMThweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gICY6bGFzdC1vZi10eXBlIHtcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCBNZW51ID0gc3R5bGVkKFN0YWNrLCB7XG4gIHNob3VsZEZvcndhcmRQcm9wOiAocHJvcCkgPT4gcHJvcCAhPT0gJ2lzT3BlbicsXG59KTx7IGlzT3BlbjogYm9vbGVhbiB9PmBcbiAgYm9yZGVyLXJhZGl1czogNDBweDtcbiAgd2lkdGg6ICR7KHsgaXNPcGVuIH0pID0+IChpc09wZW4gPyAnODBweCcgOiAnNDBweCcpfTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDEwMCU7XG4gIHJpZ2h0OiAkeyh7IGlzT3BlbiB9KSA9PiAoaXNPcGVuID8gMCA6ICcyMHB4Jyl9O1xuICBtYXJnaW46IDAgMCAxNnB4O1xuICBiYWNrZ3JvdW5kOiAkeyh7IHRoZW1lLCBpc09wZW4gfSkgPT5cbiAgICBpc09wZW4gPyB0aGVtZS5wYWxldHRlLmJhY2tncm91bmQucGFwZXIgOiAndHJhbnNwYXJlbnQnfTtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2Utb3V0O1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b207XG4gIHBhZGRpbmc6IDhweCAwIDEycHg7XG4gIHotaW5kZXg6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuekluZGV4LmZhYn07XG5gO1xuXG5jb25zdCBCdXR0b25UZXh0ID0gc3R5bGVkKCdzcGFuJywge1xuICBzaG91bGRGb3J3YXJkUHJvcDogKHByb3ApID0+IHByb3AgIT09ICdpc0V4cGFuZGVkJyxcbn0pPHsgaXNFeHBhbmRlZCB9PmBcbiAgY29sb3I6ICR7KHsgaXNFeHBhbmRlZCB9KSA9PiAoaXNFeHBhbmRlZCA/ICdpbmhlcml0JyA6ICcjZmZmJyl9O1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGVhc2UtaW4tb3V0O1xuICBwYWRkaW5nLWxlZnQ6ICR7KHsgdGhlbWUgfSkgPT4gdGhlbWUuc3BhY2luZygxKX07XG5gO1xuXG5jb25zdCBBY3Rpb25CdXR0b24gPSAoeyBpY29uLCB0ZXh0LCAuLi5yZXN0IH0pID0+IChcbiAgPEFjdGlvbkJ1dHRvbldyYXBwZXJcbiAgICBkYXRhLXRlc3RpZD17YCR7dGV4dC50b0xvd2VyQ2FzZSgpfS1hY3Rpb24tYnV0dG9uYH1cbiAgICB7Li4ucmVzdH1cbiAgPlxuICAgIDxJY29uQnV0dG9uXG4gICAgICBjb2xvcj1cInByaW1hcnlcIlxuICAgICAgdmFyaWFudD1cImNvbnRhaW5lZFwiXG4gICAgICBzaXplPVwibGFyZ2VcIlxuICAgICAgY2xhc3NOYW1lPVwiYnV0dG9uXCJcbiAgICA+XG4gICAgICB7aWNvbn1cbiAgICA8L0ljb25CdXR0b24+XG5cbiAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiY2FwdGlvblwiPnt0ZXh0fTwvVHlwb2dyYXBoeT5cbiAgPC9BY3Rpb25CdXR0b25XcmFwcGVyPlxuKTtcblxuZXhwb3J0IGZ1bmN0aW9uIEZBQih7IGlzQ29udGVudFNjcm9sbGluZyB9OiB7IGlzQ29udGVudFNjcm9sbGluZzogYm9vbGVhbiB9KSB7XG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XG4gIGNvbnN0IGhpc3RvcnkgPSB1c2VIaXN0b3J5KCk7XG4gIGNvbnN0IHsgY2hlY2tJc0Z1bmN0aW9uU3VwcG9ydGVkIH0gPSB1c2VJc0Z1bmN0aW9uQXZhaWxhYmxlKCk7XG4gIGNvbnN0IHsgY2FwdHVyZSB9ID0gdXNlQW5hbHl0aWNzQ29udGV4dCgpO1xuICBjb25zdCB7IHQgfSA9IHVzZVRyYW5zbGF0aW9uKCk7XG4gIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKTtcbiAgY29uc3QgZmFiUmVmID0gdXNlUmVmPEhUTUxCdXR0b25FbGVtZW50PihudWxsKTtcbiAgY29uc3QgZmFkZVRpbWVyID0gdXNlUmVmPFJldHVyblR5cGU8dHlwZW9mIHNldFRpbWVvdXQ+PigpO1xuICBjb25zdCBbaXNFeHBhbmRlZCwgc2V0SXNFeHBhbmRlZF0gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICBjb25zdCBGQUJNZW51SXRlbXMgPSBbXG4gICAge1xuICAgICAgdGV4dDogdCgnU2VuZCcpLFxuICAgICAgcm91dGU6ICcvc2VuZCcsXG4gICAgICBuYW1lOiBGdW5jdGlvbk5hbWVzLlNFTkQsXG4gICAgICBpY29uOiAoXG4gICAgICAgIDxBcnJvd1VwUmlnaHRJY29uXG4gICAgICAgICAgc2l6ZT17MjR9XG4gICAgICAgICAgc3g9e3sgY29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLmJsYWNrIH19XG4gICAgICAgIC8+XG4gICAgICApLFxuICAgIH0sXG4gICAge1xuICAgICAgdGV4dDogdCgnUmVjZWl2ZScpLFxuICAgICAgcm91dGU6ICcvcmVjZWl2ZScsXG4gICAgICBuYW1lOiBGdW5jdGlvbk5hbWVzLlJFQ0VJVkUsXG4gICAgICBpY29uOiA8UVJDb2RlSWNvbiBzaXplPXsyNH0gc3g9e3sgY29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLmJsYWNrIH19IC8+LFxuICAgIH0sXG4gICAge1xuICAgICAgdGV4dDogdCgnU3dhcCcpLFxuICAgICAgcm91dGU6ICcvc3dhcCcsXG4gICAgICBuYW1lOiBGdW5jdGlvbk5hbWVzLlNXQVAsXG4gICAgICBpY29uOiA8U3dhcEljb24gc2l6ZT17MjR9IHN4PXt7IGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi5ibGFjayB9fSAvPixcbiAgICB9LFxuICAgIHtcbiAgICAgIHRleHQ6IHQoJ0J1eScpLFxuICAgICAgbmFtZTogRnVuY3Rpb25OYW1lcy5CVVksXG4gICAgICBpY29uOiA8QnV5SWNvbiBzaXplPXsyNH0gc3g9e3sgY29sb3I6IHRoZW1lLnBhbGV0dGUuY29tbW9uLmJsYWNrIH19IC8+LFxuICAgICAgb25jbGljazogKCkgPT5cbiAgICAgICAgd2luZG93Lm9wZW4oYCR7Z2V0Q29yZVdlYlVybCgpfS9idXlgLCAnX2JsYW5rJywgJ25vcmVmZXJyZXInKSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHRleHQ6IHQoJ0JyaWRnZScpLFxuICAgICAgcm91dGU6ICcvYnJpZGdlJyxcbiAgICAgIG5hbWU6IEZ1bmN0aW9uTmFtZXMuQlJJREdFLFxuICAgICAgaWNvbjogPEJyaWRnZUljb24gc2l6ZT17MjR9IHN4PXt7IGNvbG9yOiB0aGVtZS5wYWxldHRlLmNvbW1vbi5ibGFjayB9fSAvPixcbiAgICB9LFxuICBdLmZpbHRlcigoeyBuYW1lIH0pID0+IGNoZWNrSXNGdW5jdGlvblN1cHBvcnRlZChuYW1lKSk7XG5cbiAgY29uc3QgZmFiVGV4dCA9IGlzT3BlbiA/IHQoJ0Nsb3NlJykgOiB0KCdBY3Rpb25zJyk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNDb250ZW50U2Nyb2xsaW5nKSB7XG4gICAgICAvLyBXaGVuIHRoZSB1c2VyIHN0YXJ0cyBzY3JvbGxpbmcsIHdlIGhpZGUgdGhlIGFjdGlvbiBidXR0b24uXG4gICAgICAvLyBXZSBhbHNvIGRlbGF5IGl0IGEgbGl0dGxlIGJpdCB0byBwcmV2ZW50IGl0IGZyb20gaGlkaW5nXG4gICAgICAvLyB3aGVuIHRoZSB1c2VyIHNjcm9sbHMganVzdCBhIGxpdHRsZSBiaXQsIG9yIHRoZSBzY3JvbGxhYmxlXG4gICAgICAvLyBhcmVhIGlzIHNob3J0LlxuICAgICAgZmFkZVRpbWVyLmN1cnJlbnQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgc2V0SXNFeHBhbmRlZChmYWxzZSk7XG4gICAgICB9LCA0MDApO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBXZSBhbHNvIHdhaXQgYSBsaXR0bGUgYml0IGJlZm9yZSBzaG93aW5nIGl0IGJhY2sgYWdhaW4uXG4gICAgICAvLyBUaGlzIHByZXZlbnRzIGl0IGZyb20gcG9wcGluZyB1cCB0b28gZmFzdCB3aGVuIHRoZSB1c2VyIHNjcm9sbHNcbiAgICAgIC8vIGp1c3QgYSB0aW55IGJpdCBhdCBhIHRpbWU6IHNjcm9sbCAtPiBxdWljayBwYXVzZSAtPiBzY3JvbGwgYWdhaW4uXG4gICAgICBmYWRlVGltZXIuY3VycmVudCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRJc0V4cGFuZGVkKHRydWUpO1xuICAgICAgfSwgMjAwKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgaWYgKGZhZGVUaW1lci5jdXJyZW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KGZhZGVUaW1lci5jdXJyZW50KTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbaXNDb250ZW50U2Nyb2xsaW5nXSk7XG5cbiAgaWYgKCFGQUJNZW51SXRlbXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8QmFja2Ryb3BcbiAgICAgICAgb3Blbj17aXNPcGVufVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgY2FwdHVyZSgnRkFCQ2xvc2VkJyk7XG4gICAgICAgICAgc2V0SXNPcGVuKGZhbHNlKTtcbiAgICAgICAgfX1cbiAgICAgICAgc3g9e3sgekluZGV4OiB0aGVtZS56SW5kZXguZmFiIH19XG4gICAgICAvPlxuICAgICAgPEdyb3cgaW49e2lzRXhwYW5kZWR9PlxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgcmVmPXtmYWJSZWZ9XG4gICAgICAgICAgc2l6ZT1cInhsYXJnZVwiXG4gICAgICAgICAgZGF0YS10ZXN0aWQ9XCJhY3Rpb24tbWVudS1idXR0b25cIlxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIGNhcHR1cmUoaXNPcGVuID8gJ0ZBQkNsb3NlZCcgOiAnRkFCT3BlbmVkJyk7XG4gICAgICAgICAgICBzZXRJc09wZW4oIWlzT3Blbik7XG4gICAgICAgICAgfX1cbiAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgcDogMixcbiAgICAgICAgICAgIGhlaWdodDogNTYsXG4gICAgICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgICAgICAgIHpJbmRleDogdGhlbWUuekluZGV4LmZhYixcbiAgICAgICAgICAgIGJvdHRvbTogdGhlbWUuc3BhY2luZygyKSxcbiAgICAgICAgICAgIHJpZ2h0OiB0aGVtZS5zcGFjaW5nKDIpLFxuICAgICAgICAgICAgJzphY3RpdmUnOiB7XG4gICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNhMGEwYTAnLCAvLyBCeSBkZWZhdWx0LCB0aGUgYnV0dG9ucyBpbiBhY3RpdmUgc3RhdGUgaGF2ZSBhIHNlbWktdHJhbnNwYXJlbnQgYmFja2dyb3VuZCAtIHdlIGRvbid0IHdhbnQgdGhhdCBoZXJlLlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPEZsaXBwZXIgc2l6ZT17MjR9IGlzRmxpcHBlZD17IWlzT3Blbn0+XG4gICAgICAgICAgICA8WEljb24gLz5cbiAgICAgICAgICAgIDxMaWdodG5pbmdJY29uIC8+XG4gICAgICAgICAgPC9GbGlwcGVyPlxuICAgICAgICAgIDxDb2xsYXBzZSBvcmllbnRhdGlvbj1cImhvcml6b250YWxcIiBpbj17aXNFeHBhbmRlZH0gdW5tb3VudE9uRXhpdD5cbiAgICAgICAgICAgIDxCdXR0b25UZXh0IGlzRXhwYW5kZWQ9e2lzRXhwYW5kZWR9PntmYWJUZXh0fTwvQnV0dG9uVGV4dD5cbiAgICAgICAgICA8L0NvbGxhcHNlPlxuICAgICAgICAgIDxQb3BwZXJcbiAgICAgICAgICAgIG9wZW49e2lzT3Blbn1cbiAgICAgICAgICAgIGFuY2hvckVsPXtmYWJSZWYuY3VycmVudH1cbiAgICAgICAgICAgIHBsYWNlbWVudD1cInRvcC1lbmRcIlxuICAgICAgICAgICAgdHJhbnNpdGlvblxuICAgICAgICAgICAgc3g9e3sgekluZGV4OiB0aGVtZS56SW5kZXguZmFiIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgeyh7IFRyYW5zaXRpb25Qcm9wcyB9KSA9PiAoXG4gICAgICAgICAgICAgIDxHcm93IHsuLi5UcmFuc2l0aW9uUHJvcHN9IHRpbWVvdXQ9ezI1MH0+XG4gICAgICAgICAgICAgICAgPE1lbnUgaXNPcGVuPXtpc09wZW59PlxuICAgICAgICAgICAgICAgICAge2lzT3BlbiAmJlxuICAgICAgICAgICAgICAgICAgICBGQUJNZW51SXRlbXMubWFwKCh7IHRleHQsIHJvdXRlLCBpY29uLCBuYW1lLCBvbmNsaWNrIH0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAoIWNoZWNrSXNGdW5jdGlvblN1cHBvcnRlZChuYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8QWN0aW9uQnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17dGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17dGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj17aWNvbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhcHR1cmUoYEZBQkl0ZW1TZWxlY3RlZF8ke25hbWV9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25jbGljaz8uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyb3V0ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnB1c2gocm91dGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8L01lbnU+XG4gICAgICAgICAgICAgIDwvR3Jvdz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9Qb3BwZXI+XG4gICAgICAgIDwvQnV0dG9uPlxuICAgICAgPC9Hcm93PlxuICAgIDwvPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JztcbmltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIENpcmN1bGFyUHJvZ3Jlc3MsXG4gIFN0YWNrLFxuICBUeXBvZ3JhcGh5LFxufSBmcm9tICdAYXZhbGFicy9jb3JlLWsyLWNvbXBvbmVudHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEluZmluaXRlU2Nyb2xsUHJvcHMge1xuICBsb2FkTW9yZTogKCkgPT4gdm9pZDtcbiAgaGFzTW9yZTogYm9vbGVhbjtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgZXJyb3I/OiBzdHJpbmc7XG4gIGNoaWxkcmVuPzogSlNYLkVsZW1lbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBJbmZpbml0ZVNjcm9sbCh7XG4gIGxvYWRNb3JlLFxuICBoYXNNb3JlLFxuICBsb2FkaW5nLFxuICBlcnJvcixcbiAgY2hpbGRyZW4sXG59OiBJbmZpbml0ZVNjcm9sbFByb3BzKSB7XG4gIGNvbnN0IGxvYWRlciA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpO1xuXG4gIGNvbnN0IGxvYWRNb3JlSGFuZGxlciA9IHVzZUNhbGxiYWNrKFxuICAgIChlbnRyaWVzKSA9PiB7XG4gICAgICBjb25zdCB0YXJnZXQgPSBlbnRyaWVzWzBdO1xuXG4gICAgICBpZiAodGFyZ2V0LmlzSW50ZXJzZWN0aW5nICYmICFsb2FkaW5nICYmIGhhc01vcmUpIHtcbiAgICAgICAgbG9hZE1vcmUoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtsb2FkaW5nLCBoYXNNb3JlLCBsb2FkTW9yZV0sXG4gICk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBvcHRpb24gPSB7XG4gICAgICByb290OiBudWxsLFxuICAgICAgcm9vdE1hcmdpbjogJzBweCcsXG4gICAgICB0aHJlc2hvbGQ6IDAsXG4gICAgfTtcbiAgICBjb25zdCBsb2FkZXJWYWx1ZSA9IGxvYWRlci5jdXJyZW50O1xuICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGxvYWRNb3JlSGFuZGxlciwgb3B0aW9uKTtcbiAgICBpZiAobG9hZGVyVmFsdWUgJiYgb2JzZXJ2ZXIpIHtcbiAgICAgIG9ic2VydmVyLm9ic2VydmUobG9hZGVyVmFsdWUpO1xuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBpZiAobG9hZGVyVmFsdWUgJiYgb2JzZXJ2ZXIpIHtcbiAgICAgICAgb2JzZXJ2ZXIudW5vYnNlcnZlKGxvYWRlclZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbbG9hZE1vcmVIYW5kbGVyXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge2NoaWxkcmVufVxuICAgICAge2xvYWRpbmcgJiYgKFxuICAgICAgICA8U3RhY2sgc3g9e3sgcGI6IDIsIHdpZHRoOiAxLCBhbGlnbkl0ZW1zOiAnY2VudGVyJyB9fT5cbiAgICAgICAgICA8Q2lyY3VsYXJQcm9ncmVzcyAvPlxuICAgICAgICA8L1N0YWNrPlxuICAgICAgKX1cbiAgICAgIHtlcnJvciAmJiA8VHlwb2dyYXBoeSB2YXJpYW50PVwiYm9keTFcIj57dCgnRXJyb3IhJyl9PC9UeXBvZ3JhcGh5Pn1cbiAgICAgIDxTdGFjayBzeD17eyBwYjogOSB9fSByZWY9e2xvYWRlcn0gLz5cbiAgICA8Lz5cbiAgKTtcbn1cbiIsImltcG9ydCB7IEFjY291bnQgfSBmcm9tICdAc3JjL2JhY2tncm91bmQvc2VydmljZXMvYWNjb3VudHMvbW9kZWxzJztcbmltcG9ydCB7IHVzZUJhbGFuY2VzQ29udGV4dCB9IGZyb20gJ0BzcmMvY29udGV4dHMvQmFsYW5jZXNQcm92aWRlcic7XG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlQmFsYW5jZVRvdGFsSW5DdXJyZW5jeShhY2NvdW50PzogQWNjb3VudCkge1xuICBjb25zdCB7IGdldFRvdGFsQmFsYW5jZSB9ID0gdXNlQmFsYW5jZXNDb250ZXh0KCk7XG5cbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICghYWNjb3VudD8uYWRkcmVzc0MpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiBnZXRUb3RhbEJhbGFuY2UoYWNjb3VudC5hZGRyZXNzQyk7XG4gIH0sIFthY2NvdW50Py5hZGRyZXNzQywgZ2V0VG90YWxCYWxhbmNlXSk7XG59XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlQmFsYW5jZXNDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9CYWxhbmNlc1Byb3ZpZGVyJztcbmltcG9ydCB7IHVzZUFjY291bnRzQ29udGV4dCB9IGZyb20gJ0BzcmMvY29udGV4dHMvQWNjb3VudHNQcm92aWRlcic7XG5pbXBvcnQgeyB1c2VOZXR3b3JrQ29udGV4dCB9IGZyb20gJ0BzcmMvY29udGV4dHMvTmV0d29ya1Byb3ZpZGVyJztcbmltcG9ydCB7IGdldEFkZHJlc3NGb3JDaGFpbiB9IGZyb20gJ0BzcmMvdXRpbHMvZ2V0QWRkcmVzc0ZvckNoYWluJztcbmltcG9ydCB7IE5mdFRva2VuV2l0aEJhbGFuY2UgfSBmcm9tICdAYXZhbGFicy92bS1tb2R1bGUtdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgdXNlTmZ0cyA9ICgpID0+IHtcbiAgY29uc3QgeyBiYWxhbmNlcyB9ID0gdXNlQmFsYW5jZXNDb250ZXh0KCk7XG4gIGNvbnN0IHtcbiAgICBhY2NvdW50czogeyBhY3RpdmU6IGFjdGl2ZUFjY291bnQgfSxcbiAgfSA9IHVzZUFjY291bnRzQ29udGV4dCgpO1xuICBjb25zdCB7IG5ldHdvcmsgfSA9IHVzZU5ldHdvcmtDb250ZXh0KCk7XG5cbiAgcmV0dXJuIHVzZU1lbW88TmZ0VG9rZW5XaXRoQmFsYW5jZVtdPigoKSA9PiB7XG4gICAgaWYgKCFuZXR3b3JrIHx8ICFiYWxhbmNlcy5uZnRzIHx8ICFhY3RpdmVBY2NvdW50KSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGNvbnN0IHVzZXJBZGRyZXNzID0gZ2V0QWRkcmVzc0ZvckNoYWluKG5ldHdvcmssIGFjdGl2ZUFjY291bnQpO1xuXG4gICAgaWYgKCF1c2VyQWRkcmVzcykge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cblxuICAgIHJldHVybiBPYmplY3QudmFsdWVzKGJhbGFuY2VzLm5mdHM/LltuZXR3b3JrLmNoYWluSWRdPy5bdXNlckFkZHJlc3NdID8/IHt9KTtcbiAgfSwgW25ldHdvcmssIGJhbGFuY2VzLm5mdHMsIGFjdGl2ZUFjY291bnRdKTtcbn07XG4iLCJpbXBvcnQgeyBEaXNwYXRjaCwgU2V0U3RhdGVBY3Rpb24sIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JztcbmltcG9ydCB7XG4gIEdyaWRJY29uLFxuICBMaXN0SWNvbixcbiAgVHlwb2dyYXBoeSxcbiAgVG9nZ2xlQnV0dG9uLFxuICBUb2dnbGVCdXR0b25Hcm91cCxcbiAgU3RhY2ssXG4gIEJ1dHRvbixcbn0gZnJvbSAnQGF2YWxhYnMvY29yZS1rMi1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgQ29sbGVjdGlibGVHcmlkIH0gZnJvbSAnLi9jb21wb25lbnRzL0NvbGxlY3RpYmxlR3JpZCc7XG5pbXBvcnQgeyBDb2xsZWN0aWJsZUxpc3QgfSBmcm9tICcuL2NvbXBvbmVudHMvQ29sbGVjdGlibGVMaXN0JztcbmltcG9ydCB7IENvbGxlY3RpYmxlTGlzdEVtcHR5IH0gZnJvbSAnLi9jb21wb25lbnRzL0NvbGxlY3RpYmxlTGlzdEVtcHR5JztcbmltcG9ydCB7IHVzZVNldENvbGxlY3RpYmxlUGFyYW1zIH0gZnJvbSAnLi9ob29rcy91c2VTZXRDb2xsZWN0aWJsZVBhcmFtcyc7XG5pbXBvcnQgeyB1c2VQYWdlSGlzdG9yeSB9IGZyb20gJ0BzcmMvaG9va3MvdXNlUGFnZUhpc3RvcnknO1xuaW1wb3J0IHsgdXNlU2V0dGluZ3NDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9TZXR0aW5nc1Byb3ZpZGVyJztcbmltcG9ydCB7XG4gIEZ1bmN0aW9uTmFtZXMsXG4gIHVzZUlzRnVuY3Rpb25BdmFpbGFibGUsXG59IGZyb20gJ0BzcmMvaG9va3MvdXNlSXNGdW5jdGlvbkF2YWlsYWJsZSc7XG5pbXBvcnQgeyB1c2VIaXN0b3J5IH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBDb2xsZWN0aWJsZVNrZWxldG9uIH0gZnJvbSAnLi9jb21wb25lbnRzL0NvbGxlY3RpYmxlU2tlbGV0b24nO1xuaW1wb3J0IHsgSW5maW5pdGVTY3JvbGwgfSBmcm9tICdAc3JjL2NvbXBvbmVudHMvY29tbW9uL2luZmluaXRlU2Nyb2xsL0luZmluaXRlU2Nyb2xsJztcbmltcG9ydCB7IHVzZUFuYWx5dGljc0NvbnRleHQgfSBmcm9tICdAc3JjL2NvbnRleHRzL0FuYWx5dGljc1Byb3ZpZGVyJztcbmltcG9ydCB7IHVzZU5ldHdvcmtDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9OZXR3b3JrUHJvdmlkZXInO1xuaW1wb3J0IHsgTGlzdFR5cGUgfSBmcm9tICcuLi9Ib21lL2NvbXBvbmVudHMvUG9ydGZvbGlvL1BvcnRmb2xpbyc7XG5pbXBvcnQgeyBOZnRUb2tlbldpdGhCYWxhbmNlLCBUb2tlblR5cGUgfSBmcm9tICdAYXZhbGFicy92bS1tb2R1bGUtdHlwZXMnO1xuaW1wb3J0IHsgdXNlTmZ0cyB9IGZyb20gJ0BzcmMvaG9va3MvdXNlTmZ0cyc7XG5pbXBvcnQgeyB1c2VCYWxhbmNlc0NvbnRleHQgfSBmcm9tICdAc3JjL2NvbnRleHRzL0JhbGFuY2VzUHJvdmlkZXInO1xuaW1wb3J0IHsgdXNlTGl2ZUJhbGFuY2UgfSBmcm9tICdAc3JjL2hvb2tzL3VzZUxpdmVCYWxhbmNlJztcblxuaW50ZXJmYWNlIENvbGxlY3RpYmxlc1Byb3BzIHtcbiAgbGlzdFR5cGU6IExpc3RUeXBlO1xuICBzZXRMaXN0VHlwZTogRGlzcGF0Y2g8U2V0U3RhdGVBY3Rpb248TGlzdFR5cGUgfCB1bmRlZmluZWQ+PjtcbiAgaXNIaXN0b3J5TG9hZGluZzogYm9vbGVhbjtcbn1cblxuY29uc3QgUE9MTEVEX0JBTEFOQ0VTID0gW1Rva2VuVHlwZS5FUkM3MjEsIFRva2VuVHlwZS5FUkMxMTU1XTtcblxuZXhwb3J0IGZ1bmN0aW9uIENvbGxlY3RpYmxlcyh7XG4gIGxpc3RUeXBlLFxuICBzZXRMaXN0VHlwZSxcbiAgaXNIaXN0b3J5TG9hZGluZyxcbn06IENvbGxlY3RpYmxlc1Byb3BzKSB7XG4gIHVzZUxpdmVCYWxhbmNlKFBPTExFRF9CQUxBTkNFUyk7XG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcbiAgY29uc3QgeyBiYWxhbmNlcyB9ID0gdXNlQmFsYW5jZXNDb250ZXh0KCk7XG4gIGNvbnN0IG5mdHMgPSB1c2VOZnRzKCk7XG4gIGNvbnN0IHsgY2FwdHVyZSB9ID0gdXNlQW5hbHl0aWNzQ29udGV4dCgpO1xuICBjb25zdCB7IG5ldHdvcmsgfSA9IHVzZU5ldHdvcmtDb250ZXh0KCk7XG4gIGNvbnN0IGhpc3RvcnkgPSB1c2VIaXN0b3J5KCk7XG4gIGNvbnN0IHNldENvbGxlY3RpYmxlUGFyYW1zID0gdXNlU2V0Q29sbGVjdGlibGVQYXJhbXMoKTtcbiAgY29uc3QgeyBzZXROYXZpZ2F0aW9uSGlzdG9yeURhdGEgfSA9IHVzZVBhZ2VIaXN0b3J5KCk7XG4gIGNvbnN0IHsgaXNGdW5jdGlvblN1cHBvcnRlZDogaXNNYW5hZ2VDb2xsZWN0aWJsZXNTdXBwb3J0ZWQgfSA9XG4gICAgdXNlSXNGdW5jdGlvbkF2YWlsYWJsZShGdW5jdGlvbk5hbWVzLk1BTkFHRV9DT0xMRUNUSUJMRVMpO1xuICBjb25zdCB7IGdldENvbGxlY3RpYmxlVmlzaWJpbGl0eSB9ID0gdXNlU2V0dGluZ3NDb250ZXh0KCk7XG4gIGNvbnN0IHZpc2libGVOZnRzID0gbmZ0cy5maWx0ZXIoKG5mdCkgPT4ge1xuICAgIHJldHVybiBnZXRDb2xsZWN0aWJsZVZpc2liaWxpdHkobmZ0KTtcbiAgfSk7XG5cbiAgY29uc3QgaGFuZGxlQ2xpY2sgPSAodHlwZTogTGlzdFR5cGUpID0+IHtcbiAgICBzZXRMaXN0VHlwZSh0eXBlKTtcbiAgICBzZXROYXZpZ2F0aW9uSGlzdG9yeURhdGEoeyBsaXN0VHlwZTogdHlwZSB9KTtcbiAgfTtcblxuICBjb25zdCB0b2dnbGVNYW5hZ2VDb2xsZWN0aWJsZXNQYWdlID0gKCkgPT4ge1xuICAgIGlmIChoaXN0b3J5LmxvY2F0aW9uLnBhdGhuYW1lLnN0YXJ0c1dpdGgoJy9tYW5hZ2UtY29sbGVjdGlibGVzJykpIHtcbiAgICAgIGhpc3RvcnkucHVzaCgnLycpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBoaXN0b3J5LnB1c2goJy9tYW5hZ2UtY29sbGVjdGlibGVzJyk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlSXRlbUNsaWNrID0gdXNlQ2FsbGJhY2soXG4gICAgKG5mdDogTmZ0VG9rZW5XaXRoQmFsYW5jZSkgPT4ge1xuICAgICAgc2V0Q29sbGVjdGlibGVQYXJhbXMoe1xuICAgICAgICBuZnQsXG4gICAgICAgIG9wdGlvbnM6IHsgcGF0aDogJy9jb2xsZWN0aWJsZScgfSxcbiAgICAgIH0pO1xuXG4gICAgICBjYXB0dXJlKCdDb2xsZWN0aWJsZUl0ZW1DbGlja2VkJywge1xuICAgICAgICBjaGFpbklkOiBuZXR3b3JrPy5jaGFpbklkLFxuICAgICAgfSk7XG4gICAgfSxcbiAgICBbY2FwdHVyZSwgbmV0d29yaywgc2V0Q29sbGVjdGlibGVQYXJhbXNdLFxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPFN0YWNrIHN0eWxlPXt7IGZsZXhHcm93OiAxLCBtYXhIZWlnaHQ6ICd1bnNldCcsIGhlaWdodDogJzEwMCUnIH19PlxuICAgICAgPFN0YWNrXG4gICAgICAgIGRpcmVjdGlvbj1cInJvd1wiXG4gICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIlxuICAgICAgICBzeD17eyBteTogMSwgbXI6IDIgfX1cbiAgICAgID5cbiAgICAgICAgPFRvZ2dsZUJ1dHRvbkdyb3VwXG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIG15OiAxLFxuICAgICAgICAgICAgbWw6IDIsXG4gICAgICAgICAgfX1cbiAgICAgICAgICBleGNsdXNpdmVcbiAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgIGNvbG9yPVwicHJpbWFyeVwiXG4gICAgICAgICAgZGlzYWJsZWQ9e2lzSGlzdG9yeUxvYWRpbmcgJiYgIWxpc3RUeXBlfVxuICAgICAgICAgIHZhbHVlPXtsaXN0VHlwZX1cbiAgICAgICAgICBvbkNoYW5nZT17KF8sIHZhbHVlKSA9PiBoYW5kbGVDbGljayh2YWx1ZSl9XG4gICAgICAgID5cbiAgICAgICAgICA8VG9nZ2xlQnV0dG9uIHZhbHVlPXtMaXN0VHlwZS5HUklEfT5cbiAgICAgICAgICAgIDxHcmlkSWNvbiBzaXplPXsxNn0gLz5cbiAgICAgICAgICA8L1RvZ2dsZUJ1dHRvbj5cbiAgICAgICAgICA8VG9nZ2xlQnV0dG9uIHZhbHVlPXtMaXN0VHlwZS5MSVNUfT5cbiAgICAgICAgICAgIDxMaXN0SWNvbiBzaXplPXsxNn0gLz5cbiAgICAgICAgICA8L1RvZ2dsZUJ1dHRvbj5cbiAgICAgICAgPC9Ub2dnbGVCdXR0b25Hcm91cD5cbiAgICAgICAge2lzTWFuYWdlQ29sbGVjdGlibGVzU3VwcG9ydGVkICYmIChcbiAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICB2YXJpYW50PVwidGV4dFwiXG4gICAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgICAgZGF0YS10ZXN0aWQ9XCJtYW5hZ2UtY29sbGVjdGlibGVzLWJ1dHRvblwiXG4gICAgICAgICAgICBvbkNsaWNrPXt0b2dnbGVNYW5hZ2VDb2xsZWN0aWJsZXNQYWdlfVxuICAgICAgICAgICAgc3g9e3sgY3Vyc29yOiAncG9pbnRlcicgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dCgnTWFuYWdlJyl9XG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICl9XG4gICAgICA8L1N0YWNrPlxuICAgICAgeyFiYWxhbmNlcy5sb2FkaW5nICYmICEhdmlzaWJsZU5mdHM/Lmxlbmd0aCAmJiAoXG4gICAgICAgIDxJbmZpbml0ZVNjcm9sbFxuICAgICAgICAgIGxvYWRNb3JlPXsoKSA9PiB7fX1cbiAgICAgICAgICBoYXNNb3JlPXtmYWxzZX1cbiAgICAgICAgICBsb2FkaW5nPXtiYWxhbmNlcy5sb2FkaW5nfVxuICAgICAgICAgIGVycm9yPXtiYWxhbmNlcy5lcnJvcj8udG9TdHJpbmcoKX1cbiAgICAgICAgPlxuICAgICAgICAgIHtsaXN0VHlwZSA9PT0gTGlzdFR5cGUuTElTVCA/IChcbiAgICAgICAgICAgIDxDb2xsZWN0aWJsZUxpc3Qgb25DbGljaz17aGFuZGxlSXRlbUNsaWNrfSAvPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8Q29sbGVjdGlibGVHcmlkIG9uQ2xpY2s9e2hhbmRsZUl0ZW1DbGlja30gLz5cbiAgICAgICAgICApfVxuICAgICAgICA8L0luZmluaXRlU2Nyb2xsPlxuICAgICAgKX1cbiAgICAgIHshYmFsYW5jZXMubG9hZGluZyAmJiB2aXNpYmxlTmZ0cz8ubGVuZ3RoID09PSAwICYmIChcbiAgICAgICAgPFN0YWNrXG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIGZsZXhHcm93OiAxLFxuICAgICAgICAgICAgcGI6IDksXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxDb2xsZWN0aWJsZUxpc3RFbXB0eSAvPlxuICAgICAgICA8L1N0YWNrPlxuICAgICAgKX1cbiAgICAgIHtiYWxhbmNlcy5sb2FkaW5nICYmIDxDb2xsZWN0aWJsZVNrZWxldG9uIC8+fVxuICAgICAge2JhbGFuY2VzLmVycm9yICYmIChcbiAgICAgICAgPFN0YWNrXG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIGZsZXhHcm93OiAxLFxuICAgICAgICAgICAgcGI6IDksXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxUeXBvZ3JhcGh5XG4gICAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgICBmb250U2l6ZTogJzE4cHgnLFxuICAgICAgICAgICAgICBoZWlnaHQ6ICcyMnB4JyxcbiAgICAgICAgICAgICAgZm9udFdlaWdodDogJ2ZvbnRXZWlnaHRTZW1pYm9sZCcsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHt0KCdFcnJvcicpfVxuICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICA8VHlwb2dyYXBoeVxuICAgICAgICAgICAgdmFyaWFudD1cImJvZHkyXCJcbiAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgIGFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgaGVpZ2h0OiAnMTdweCcsXG4gICAgICAgICAgICAgIG15OiAxLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7dCgnRmFpbGVkIHRvIGxvYWQgY29sbGVjdGlibGVzJyl9XG4gICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICA8L1N0YWNrPlxuICAgICAgKX1cbiAgICA8L1N0YWNrPlxuICApO1xufVxuIiwiaW1wb3J0IHsgdXNlU2V0dGluZ3NDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9TZXR0aW5nc1Byb3ZpZGVyJztcbmltcG9ydCB7IENvbGxlY3RpYmxlTWVkaWEgfSBmcm9tICcuL0NvbGxlY3RpYmxlTWVkaWEnO1xuaW1wb3J0IHsgQ29sbGVjdGlibGVXcmFwcGVyIH0gZnJvbSAnLi9Db2xsZWN0aWJsZVdyYXBwZXInO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQGF2YWxhYnMvY29yZS1rMi1jb21wb25lbnRzJztcbmltcG9ydCB7IE5mdFRva2VuV2l0aEJhbGFuY2UsIFRva2VuVHlwZSB9IGZyb20gJ0BhdmFsYWJzL3ZtLW1vZHVsZS10eXBlcyc7XG5pbXBvcnQgeyB1c2VOZnRzIH0gZnJvbSAnQHNyYy9ob29rcy91c2VOZnRzJztcblxuZXhwb3J0IGZ1bmN0aW9uIENvbGxlY3RpYmxlR3JpZCh7XG4gIG9uQ2xpY2ssXG59OiB7XG4gIG9uQ2xpY2s6IChuZnQ6IE5mdFRva2VuV2l0aEJhbGFuY2UpID0+IHZvaWQ7XG59KSB7XG4gIGNvbnN0IG5mdHMgPSB1c2VOZnRzKCk7XG4gIGNvbnN0IHsgZ2V0Q29sbGVjdGlibGVWaXNpYmlsaXR5IH0gPSB1c2VTZXR0aW5nc0NvbnRleHQoKTtcbiAgY29uc3QgbmZ0c1RvU2hvdyA9IG5mdHM/LmZpbHRlcigobmZ0KSA9PiB7XG4gICAgcmV0dXJuIGdldENvbGxlY3RpYmxlVmlzaWJpbGl0eShuZnQpO1xuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxDb2xsZWN0aWJsZVdyYXBwZXI+XG4gICAgICB7bmZ0c1RvU2hvdz8ubWFwKChuZnQpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICBzeD17eyBkaXNwbGF5OiAnZmxleCcsIHBhZGRpbmc6IDAgfX1cbiAgICAgICAgICAgIHZhcmlhbnQ9XCJ0ZXh0XCJcbiAgICAgICAgICAgIGtleT17YCR7bmZ0LmFkZHJlc3N9LSR7bmZ0LnRva2VuSWR9YH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uQ2xpY2sobmZ0KX1cbiAgICAgICAgICAgIGRhdGEtdGVzdGlkPXtgJHtuZnQubmFtZX0tJHtuZnQudG9rZW5JZH1gfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxDb2xsZWN0aWJsZU1lZGlhXG4gICAgICAgICAgICAgIHdpZHRoPVwiMTY0cHhcIlxuICAgICAgICAgICAgICBoZWlnaHQ9XCJhdXRvXCJcbiAgICAgICAgICAgICAgdXJsPXtuZnQ/LmxvZ29Vcml9XG4gICAgICAgICAgICAgIGhvdmVyPXtmYWxzZX1cbiAgICAgICAgICAgICAgbWFyZ2luPVwiMCAwIDE2cHhcIlxuICAgICAgICAgICAgICBzaG93QmFsYW5jZT17VG9rZW5UeXBlLkVSQzExNTUgPT09IG5mdC50eXBlfVxuICAgICAgICAgICAgICBiYWxhbmNlPXtuZnQuYmFsYW5jZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICk7XG4gICAgICB9KX1cbiAgICA8L0NvbGxlY3RpYmxlV3JhcHBlcj5cbiAgKTtcbn1cbiIsImltcG9ydCB7IENvbGxlY3RpYmxlTWVkaWEgfSBmcm9tICcuL0NvbGxlY3RpYmxlTWVkaWEnO1xuaW1wb3J0IHsgU3RhY2sgfSBmcm9tICdAYXZhbGFicy9jb3JlLWsyLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgVG9rZW5DYXJkIH0gZnJvbSAnQHNyYy9jb21wb25lbnRzL2NvbW1vbi9Ub2tlbkNhcmQnO1xuaW1wb3J0IHsgdXNlU2V0dGluZ3NDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9TZXR0aW5nc1Byb3ZpZGVyJztcbmltcG9ydCB7IE5mdFRva2VuV2l0aEJhbGFuY2UgfSBmcm9tICdAYXZhbGFicy92bS1tb2R1bGUtdHlwZXMnO1xuaW1wb3J0IHsgdXNlTmZ0cyB9IGZyb20gJ0BzcmMvaG9va3MvdXNlTmZ0cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBDb2xsZWN0aWJsZUxpc3Qoe1xuICBvbkNsaWNrLFxufToge1xuICBvbkNsaWNrOiAobmZ0OiBOZnRUb2tlbldpdGhCYWxhbmNlKSA9PiB2b2lkO1xufSkge1xuICBjb25zdCBuZnRzID0gdXNlTmZ0cygpO1xuICBjb25zdCB7IGdldENvbGxlY3RpYmxlVmlzaWJpbGl0eSB9ID0gdXNlU2V0dGluZ3NDb250ZXh0KCk7XG4gIGNvbnN0IG5mdHNUb1Nob3cgPSBuZnRzPy5maWx0ZXIoKG5mdCkgPT4ge1xuICAgIHJldHVybiBnZXRDb2xsZWN0aWJsZVZpc2liaWxpdHkobmZ0KTtcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8U3RhY2sgc3g9e3sgcHg6IDIgfX0gZGF0YS10ZXN0aWQ9XCJjb2xsZWN0aWJsZXMtbGlzdFwiPlxuICAgICAge25mdHNUb1Nob3c/Lm1hcCgobmZ0KSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPFRva2VuQ2FyZFxuICAgICAgICAgICAgbmFtZT17bmZ0Lm5hbWV9XG4gICAgICAgICAgICBiYWxhbmNlSW5DdXJyZW5jeT17YCMke25mdC50b2tlbklkfWB9XG4gICAgICAgICAgICBrZXk9e2Ake25mdC5hZGRyZXNzfS0ke25mdC50b2tlbklkfWB9XG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvbkNsaWNrKG5mdCl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPENvbGxlY3RpYmxlTWVkaWFcbiAgICAgICAgICAgICAgaGVpZ2h0PVwiMzJweFwiXG4gICAgICAgICAgICAgIHdpZHRoPVwiYXV0b1wiXG4gICAgICAgICAgICAgIG1heFdpZHRoPVwiMzJweFwiXG4gICAgICAgICAgICAgIHVybD17bmZ0Py5sb2dvU21hbGx9XG4gICAgICAgICAgICAgIGhvdmVyPXtmYWxzZX1cbiAgICAgICAgICAgICAgbWFyZ2luPVwiOHB4IDBcIlxuICAgICAgICAgICAgICBzaG93UGxheUljb249e2ZhbHNlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L1Rva2VuQ2FyZD5cbiAgICAgICAgKTtcbiAgICAgIH0pfVxuICAgIDwvU3RhY2s+XG4gICk7XG59XG4iLCJpbXBvcnQgeyBUeXBvZ3JhcGh5LCBTdGFjayB9IGZyb20gJ0BhdmFsYWJzL2NvcmUtazItY29tcG9uZW50cyc7XG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnO1xuXG5leHBvcnQgZnVuY3Rpb24gQ29sbGVjdGlibGVMaXN0RW1wdHkoKSB7XG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcbiAgcmV0dXJuIChcbiAgICA8U3RhY2tcbiAgICAgIHN4PXt7XG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBmbGV4R3JvdzogJzEnLFxuICAgICAgICByb3dHYXA6IDEsXG4gICAgICAgIG10OiA3LFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiaDVcIj57dCgnTm8gQ29sbGVjdGlibGVzJyl9PC9UeXBvZ3JhcGh5PlxuICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImJvZHkyXCIgc3g9e3sgY29sb3I6ICd0ZXh0LnNlY29uZGFyeScgfX0+XG4gICAgICAgIHt0KCdZb3UgZG9u4oCZdCBoYXZlIGFueSBORlRzIHlldCEnKX1cbiAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICA8L1N0YWNrPlxuICApO1xufVxuIiwiaW1wb3J0IHsgU2tlbGV0b24gfSBmcm9tICdAYXZhbGFicy9jb3JlLWsyLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQ29sbGVjdGlibGVXcmFwcGVyIH0gZnJvbSAnLi9Db2xsZWN0aWJsZVdyYXBwZXInO1xuXG5leHBvcnQgZnVuY3Rpb24gQ29sbGVjdGlibGVTa2VsZXRvbigpIHtcbiAgcmV0dXJuIChcbiAgICA8Q29sbGVjdGlibGVXcmFwcGVyPlxuICAgICAge0FycmF5LmZyb20oeyBsZW5ndGg6IDQgfSwgKF86IHVua25vd24sIGk6IG51bWJlcikgPT4gKFxuICAgICAgICA8U2tlbGV0b25cbiAgICAgICAgICB2YXJpYW50PVwicmVjdGFuZ3VsYXJcIlxuICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICB3aWR0aDogJzE2NHB4JyxcbiAgICAgICAgICAgIGhlaWdodDogJzE2NHB4JyxcbiAgICAgICAgICAgIG1iOiAyLFxuICAgICAgICAgIH19XG4gICAgICAgICAga2V5PXtpfVxuICAgICAgICAvPlxuICAgICAgKSl9eycgJ31cbiAgICA8L0NvbGxlY3RpYmxlV3JhcHBlcj5cbiAgKTtcbn1cbiIsImltcG9ydCB7IFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNYXNvbnJ5IGZyb20gJ3JlYWN0LW1hc29ucnktY3NzJztcbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gJ0BhdmFsYWJzL2NvcmUtazItY29tcG9uZW50cyc7XG5cbmNvbnN0IFN0eWxlZE1hc29ucnkgPSBzdHlsZWQoTWFzb25yeSlgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIHBhZGRpbmctYm90dG9tOiAzMnB4O1xuXG4gIC5tYXNvbnJ5Q29sdW1uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgcGFkZGluZzogMCAwIDAgMTZweDtcblxuICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAgICAgIHBhZGRpbmc6IDAgMTZweCAwIDA7XG4gICAgfVxuICB9XG5gO1xuXG5leHBvcnQgZnVuY3Rpb24gQ29sbGVjdGlibGVXcmFwcGVyKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8U3R5bGVkTWFzb25yeVxuICAgICAgY2xhc3NOYW1lPVwibWFzb25yeVwiXG4gICAgICBicmVha3BvaW50Q29scz17Mn1cbiAgICAgIGNvbHVtbkNsYXNzTmFtZT1cIm1hc29ucnlDb2x1bW5cIlxuICAgICAgZGF0YS10ZXN0aWQ9XCJjb2xsZWN0aWJsZXMtZ3JpZFwiXG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvU3R5bGVkTWFzb25yeT5cbiAgKTtcbn1cbiIsImltcG9ydCB7IE5mdFRva2VuV2l0aEJhbGFuY2UgfSBmcm9tICdAYXZhbGFicy92bS1tb2R1bGUtdHlwZXMnO1xuaW1wb3J0IHsgdXNlSGlzdG9yeSwgdXNlTG9jYXRpb24gfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcblxudHlwZSBTZXRDb2xsZWN0aWJsZVBhcmFtcyA9IHtcbiAgbmZ0PzogTmZ0VG9rZW5XaXRoQmFsYW5jZTtcbiAgYWRkcmVzcz86IHN0cmluZztcbiAgb3B0aW9ucz86IHtcbiAgICBwYXRoPzogc3RyaW5nO1xuICAgIHJlcGxhY2U/OiBib29sZWFuO1xuICB9O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVNldENvbGxlY3RpYmxlUGFyYW1zKCkge1xuICBjb25zdCB7IHBhdGhuYW1lIH0gPSB1c2VMb2NhdGlvbigpO1xuICBjb25zdCBoaXN0b3J5ID0gdXNlSGlzdG9yeSgpO1xuXG4gIHJldHVybiAoeyBuZnQsIGFkZHJlc3MsIG9wdGlvbnMgfTogU2V0Q29sbGVjdGlibGVQYXJhbXMpID0+IHtcbiAgICBjb25zdCBwdXNoT3JSZXBsYWNlID0gb3B0aW9ucz8ucmVwbGFjZSA/IGhpc3RvcnkucmVwbGFjZSA6IGhpc3RvcnkucHVzaDtcbiAgICBwdXNoT3JSZXBsYWNlKHtcbiAgICAgIHBhdGhuYW1lOiBvcHRpb25zPy5wYXRoID8/IHBhdGhuYW1lLFxuICAgICAgc2VhcmNoOiBgPyR7bmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgICAgIG5mdDogbmZ0Py5hZGRyZXNzID8/ICcnLFxuICAgICAgICB0b2tlbklkOiBuZnQ/LnRva2VuSWQgPz8gJycsXG4gICAgICAgIGFkZHJlc3M6IGFkZHJlc3MgPz8gJycsXG4gICAgICB9KS50b1N0cmluZygpfWAsXG4gICAgfSk7XG4gIH07XG59XG4iLCJpbXBvcnQgeyBDaXJjdWxhclByb2dyZXNzLCBTdGFjayB9IGZyb20gJ0BhdmFsYWJzL2NvcmUtazItY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IHVzZURlZmlDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9EZWZpUHJvdmlkZXInO1xuaW1wb3J0IHsgdXNlRmVhdHVyZUZsYWdDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9GZWF0dXJlRmxhZ3NQcm92aWRlcic7XG5pbXBvcnQgeyBGdW5jdGlvbklzT2ZmbGluZSB9IGZyb20gJ0BzcmMvY29tcG9uZW50cy9jb21tb24vRnVuY3Rpb25Jc09mZmxpbmUnO1xuXG5pbXBvcnQgeyBEZWZpUHJvdG9jb2xMaXN0SXRlbSB9IGZyb20gJy4vY29tcG9uZW50cy9EZWZpUHJvdG9jb2xMaXN0SXRlbSc7XG5pbXBvcnQgeyBEZWZpWmVyb1N0YXRlIH0gZnJvbSAnLi9jb21wb25lbnRzL0RlZmlaZXJvU3RhdGUnO1xuaW1wb3J0IHsgRGVmaUVycm9yU3RhdGUgfSBmcm9tICcuL2NvbXBvbmVudHMvRGVmaUVycm9yU3RhdGUnO1xuaW1wb3J0IHsgRmVhdHVyZUdhdGVzIH0gZnJvbSAnQHNyYy9iYWNrZ3JvdW5kL3NlcnZpY2VzL2ZlYXR1cmVGbGFncy9tb2RlbHMnO1xuaW1wb3J0IHsgRnVuY3Rpb25OYW1lcyB9IGZyb20gJ0BzcmMvaG9va3MvdXNlSXNGdW5jdGlvbkF2YWlsYWJsZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBEZUZpKCkge1xuICBjb25zdCB7IHBvcnRmb2xpbywgaGFzRXJyb3IsIGlzTG9hZGluZyB9ID0gdXNlRGVmaUNvbnRleHQoKTtcbiAgY29uc3QgeyBmZWF0dXJlRmxhZ3MgfSA9IHVzZUZlYXR1cmVGbGFnQ29udGV4dCgpO1xuXG4gIGlmICghZmVhdHVyZUZsYWdzW0ZlYXR1cmVHYXRlcy5ERUZJXSkge1xuICAgIHJldHVybiAoXG4gICAgICA8RnVuY3Rpb25Jc09mZmxpbmUgaGlkZVBhZ2VUaXRsZSBmdW5jdGlvbk5hbWU9e0Z1bmN0aW9uTmFtZXMuREVGSX0gLz5cbiAgICApO1xuICB9XG5cbiAgY29uc3QgaGFzUHJvdG9jb2xzID0gcG9ydGZvbGlvLnByb3RvY29scy5sZW5ndGggPiAwO1xuICBjb25zdCBpc1Byb3Blcmx5TG9hZGVkID0gIWlzTG9hZGluZyAmJiAhaGFzRXJyb3I7XG4gIGNvbnN0IGlzWmVyb1N0YXRlID0gaXNQcm9wZXJseUxvYWRlZCAmJiAhaGFzUHJvdG9jb2xzO1xuXG4gIHJldHVybiAoXG4gICAgPFN0YWNrXG4gICAgICBzeD17e1xuICAgICAgICBwdDogMixcbiAgICAgICAgcGI6IDIsXG4gICAgICAgIHB4OiAyLFxuICAgICAgICBmbGV4R3JvdzogMSxcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtpc0xvYWRpbmcgJiYgIWhhc1Byb3RvY29scyAmJiAoXG4gICAgICAgIC8vIE9ubHkgc2hvdyB0aGUgZnVsbCBsb2FkaW5nIHNjcmVlbiBpZiB3ZSBoYXZlIG5vIGRhdGEgYXQgYWxsXG4gICAgICAgIDxDaXJjdWxhclByb2dyZXNzIHN4PXt7IG10OiA5IH19IHNpemU9ezEwMH0gLz5cbiAgICAgICl9XG4gICAgICB7aXNaZXJvU3RhdGUgJiYgPERlZmlaZXJvU3RhdGUgLz59XG4gICAgICB7aGFzRXJyb3IgJiYgPERlZmlFcnJvclN0YXRlIC8+fVxuICAgICAgeyFoYXNFcnJvciAmJiBoYXNQcm90b2NvbHMgJiYgKFxuICAgICAgICA8U3RhY2sgc3g9e3sgZ2FwOiAxLCB3aWR0aDogJzEwMCUnIH19PlxuICAgICAgICAgIHtwb3J0Zm9saW8ucHJvdG9jb2xzLm1hcCgocHJvdG9jb2wpID0+IChcbiAgICAgICAgICAgIDxEZWZpUHJvdG9jb2xMaXN0SXRlbSBrZXk9e3Byb3RvY29sLmlkfSBwcm90b2NvbD17cHJvdG9jb2x9IC8+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvU3RhY2s+XG4gICAgICApfVxuICAgIDwvU3RhY2s+XG4gICk7XG59XG4iLCJpbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnO1xuaW1wb3J0IHtcbiAgQWxlcnRDaXJjbGVJY29uLFxuICBTdGFjayxcbiAgU3RhY2tQcm9wcyxcbiAgVHlwb2dyYXBoeSxcbn0gZnJvbSAnQGF2YWxhYnMvY29yZS1rMi1jb21wb25lbnRzJztcblxuZXhwb3J0IGNvbnN0IERlZmlFcnJvclN0YXRlID0gKHByb3BzOiBTdGFja1Byb3BzKSA9PiB7XG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcblxuICByZXR1cm4gKFxuICAgIDxTdGFjayBzeD17eyBtdDogOSwgZ2FwOiAxLCBhbGlnbkl0ZW1zOiAnY2VudGVyJyB9fSB7Li4ucHJvcHN9PlxuICAgICAgPEFsZXJ0Q2lyY2xlSWNvbiBzaXplPXs2MH0gc3g9e3sgbWI6IDIgfX0gLz5cbiAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNVwiPnt0KCdFcnJvciEnKX08L1R5cG9ncmFwaHk+XG4gICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiYm9keTJcIiBjb2xvcj1cInRleHQuc2Vjb25kYXJ5XCI+XG4gICAgICAgIHt0KCdEYXRhIGN1cnJlbnRseSB1bmF2YWlsYWJsZSwgY2hlY2sgYmFjayBsYXRlci4nKX1cbiAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICA8L1N0YWNrPlxuICApO1xufTtcbiIsImltcG9ydCB7IHVzZUhpc3RvcnkgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7XG4gIEF2YXRhcixcbiAgQ2FyZCxcbiAgQ2FyZEFjdGlvbkFyZWEsXG4gIENhcmRQcm9wcyxcbiAgRXh0ZXJuYWxMaW5rSWNvbixcbiAgSWNvbkJ1dHRvbixcbiAgU3RhY2ssXG4gIFR5cG9ncmFwaHksXG4gIHVzZVRoZW1lLFxufSBmcm9tICdAYXZhbGFicy9jb3JlLWsyLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBEZWZpUHJvdG9jb2wgfSBmcm9tICdAc3JjL2JhY2tncm91bmQvc2VydmljZXMvZGVmaS9tb2RlbHMnO1xuaW1wb3J0IHsgb3Blbk5ld1RhYiB9IGZyb20gJ0BzcmMvdXRpbHMvZXh0ZW5zaW9uVXRpbHMnO1xuXG5pbXBvcnQgeyB1c2VDb252ZXJ0ZWRDdXJyZW5jeUZvcm1hdHRlciB9IGZyb20gJy4uL2hvb2tzL3VzZUNvbnZlcnRlZEN1cnJlbmN5Rm9ybWF0dGVyJztcblxudHlwZSBEZWZpUHJvdG9jb2xMaXN0SXRlbVByb3BzID0gQ2FyZFByb3BzICYge1xuICBwcm90b2NvbDogRGVmaVByb3RvY29sO1xufTtcblxuZXhwb3J0IGNvbnN0IERlZmlQcm90b2NvbExpc3RJdGVtID0gKHtcbiAgcHJvdG9jb2wsXG4gIC4uLmNhcmRQcm9wc1xufTogRGVmaVByb3RvY29sTGlzdEl0ZW1Qcm9wcykgPT4ge1xuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IGhpc3RvcnkgPSB1c2VIaXN0b3J5KCk7XG4gIGNvbnN0IGZvcm1hdFZhbHVlID0gdXNlQ29udmVydGVkQ3VycmVuY3lGb3JtYXR0ZXIoKTtcblxuICBjb25zdCBvcGVuVXJsID0gKHVybCkgPT4gb3Blbk5ld1RhYih7IHVybCB9KTtcblxuICBpZiAocHJvdG9jb2wuZ3JvdXBzLmxlbmd0aCA9PT0gMCkge1xuICAgIC8qKlxuICAgICAqIEl0J3MgdmVyeSB1bmxpa2VseSwgYnV0IHRlY2huaWNhbGx5IHBvc3NpYmxlIHRoYXQgd2UnbGwgZ2V0IGFuIGVtcHR5IHByb3RvY29sIGl0ZW1cbiAgICAgKiBmcm9tIHRoZSBiYWNrZW5kLlxuICAgICAqXG4gICAgICogVGhpcyBtZWNoYW5pc20gaXMgdXNlZnVsIGlmIHRoZSB1c2VyIHJlLWFjdGl2YXRlcyB0aGUgZXh0ZW5zaW9uIGFmdGVyIGNsb3NpbmcgYWxsXG4gICAgICogcG9zaXRpb25zIG9uIGEgZEFwcCBhbmQgdGhlbiBsYW5kcyBkaXJlY3RseSBvbiAvZGVmaS86cHJvdG9jb2xJZCBwYWdlLlxuICAgICAqIEluIHN1Y2ggc2l0dWF0aW9ucywgd2Ugd2FudCB0aGVtIHRvIHNlZSBhbiBlbXB0eSBkZXRhaWxzIHNjcmVlbiBmb3IgdGhhdCBkQXBwLlxuICAgICAqXG4gICAgICogSG93ZXZlciBpZiB0aGV5IGxhbmQgaGVyZSwgb24gdGhlIG1haW4gRGVGaSBwYWdlLCB3ZSBkb24ndCB3YW50IHRvIHNob3dcbiAgICAgKiB0aG9zZSBwcm90b2NvbHMgaW4gdGhlIGxpc3QgYW55bW9yZS5cbiAgICAgKi9cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPENhcmQgc3g9e3sgd2lkdGg6ICcxMDAlJyB9fSB7Li4uY2FyZFByb3BzfT5cbiAgICAgIDxDYXJkQWN0aW9uQXJlYVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBoaXN0b3J5LnB1c2goYC9kZWZpLyR7cHJvdG9jb2wuaWR9YCl9XG4gICAgICAgIGRhdGEtdGVzdGlkPXtgZGVmaS1wcm90b2NvbC0ke3Byb3RvY29sLmlkfWB9XG4gICAgICA+XG4gICAgICAgIDxTdGFja1xuICAgICAgICAgIGRpcmVjdGlvbj1cInJvd1wiXG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIGhlaWdodDogNjAsXG4gICAgICAgICAgICBweTogMS41LFxuICAgICAgICAgICAgcHg6IDIsXG4gICAgICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgICAgIGdhcDogMixcbiAgICAgICAgICB9fVxuICAgICAgICA+XG4gICAgICAgICAgPEF2YXRhclxuICAgICAgICAgICAgc3JjPXtwcm90b2NvbC5sb2dvVXJsfVxuICAgICAgICAgICAgYWx0PXtwcm90b2NvbC5uYW1lfVxuICAgICAgICAgICAgc2Vjb25kYXJ5U3JjPXtwcm90b2NvbC5jaGFpbkxvZ29Vcmx9XG4gICAgICAgICAgICBzZWNvbmRhcnlBdmF0YXJQcm9wcz17e1xuICAgICAgICAgICAgICBzeDoge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxNCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDE0LFxuICAgICAgICAgICAgICAgIGJvcmRlcjogYDFweCBzb2xpZCAke3RoZW1lLnBhbGV0dGUuZ3JleVs5MDBdfWAsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgYmFkZ2VQcm9wcz17e1xuICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAnZGF0YS10ZXN0aWQnOiBgZGVmaS1wcm90b2NvbC1jaGFpbi0ke3Byb3RvY29sLmNoYWluSWR9YCxcbiAgICAgICAgICAgICAgYW5jaG9yT3JpZ2luOiB7IHZlcnRpY2FsOiAnYm90dG9tJywgaG9yaXpvbnRhbDogJ3JpZ2h0JyB9LFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxUeXBvZ3JhcGh5XG4gICAgICAgICAgICB2YXJpYW50PVwiaDZcIlxuICAgICAgICAgICAgc3g9e3sgZmxleEdyb3c6IDEgfX1cbiAgICAgICAgICAgIGRhdGEtdGVzdGlkPVwiZGVmaS1wcm90b2NvbC1uYW1lXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7cHJvdG9jb2wubmFtZX1cbiAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgPFN0YWNrIHN4PXt7IGFsaWduSXRlbXM6ICdmbGV4LWVuZCcgfX0+XG4gICAgICAgICAgICA8VHlwb2dyYXBoeVxuICAgICAgICAgICAgICB2YXJpYW50PVwiYnV0dG9uXCJcbiAgICAgICAgICAgICAgc3g9e3sgZm9udFNpemU6IDE0IH19XG4gICAgICAgICAgICAgIGRhdGEtdGVzdGlkPVwiZGVmaS1wcm90b2NvbC12YWx1ZVwiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtmb3JtYXRWYWx1ZShwcm90b2NvbC50b3RhbFVzZFZhbHVlKX1cbiAgICAgICAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgICAgICAgIDxJY29uQnV0dG9uXG4gICAgICAgICAgICAgIGNvbXBvbmVudD1cImFcIlxuICAgICAgICAgICAgICBzaXplPVwic21hbGxcIlxuICAgICAgICAgICAgICBzeD17eyBtcjogLTAuNSB9fVxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvcGVuVXJsKHByb3RvY29sLnNpdGVVcmwpfVxuICAgICAgICAgICAgICBkYXRhLXRlc3RpZD1cImRlZmktcHJvdG9jb2wtbGlua1wiXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxFeHRlcm5hbExpbmtJY29uIHNpemU9ezE2fSAvPlxuICAgICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgIDwvU3RhY2s+XG4gICAgICA8L0NhcmRBY3Rpb25BcmVhPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn07XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XG5pbXBvcnQge1xuICBCdXR0b24sXG4gIFN0YWNrLFxuICBTdGFja1Byb3BzLFxuICBUeXBvZ3JhcGh5LFxufSBmcm9tICdAYXZhbGFicy9jb3JlLWsyLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBvcGVuTmV3VGFiIH0gZnJvbSAnQHNyYy91dGlscy9leHRlbnNpb25VdGlscyc7XG5cbmV4cG9ydCBjb25zdCBEZWZpWmVyb1N0YXRlID0gKHByb3BzOiBTdGFja1Byb3BzKSA9PiB7XG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcblxuICBjb25zdCBoYW5kbGVFeHBsb3JlQ2xpY2sgPSB1c2VDYWxsYmFjayhcbiAgICAoKSA9PlxuICAgICAgb3Blbk5ld1RhYih7XG4gICAgICAgIHVybDogJ2h0dHBzOi8vY29yZS5hcHAvZGlzY292ZXIvJyxcbiAgICAgIH0pLFxuICAgIFtdLFxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPFN0YWNrIHN4PXt7IG10OiA5LCBnYXA6IDEsIGFsaWduSXRlbXM6ICdjZW50ZXInIH19IHsuLi5wcm9wc30+XG4gICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiaDVcIj57dCgnTm8gRGVGaSBUcmFuc2FjdGlvbnMnKX08L1R5cG9ncmFwaHk+XG4gICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiYm9keTJcIiBjb2xvcj1cInRleHQuc2Vjb25kYXJ5XCI+XG4gICAgICAgIHt0KCdEaXNjb3ZlciB0b3AgZEFwcHMgb24gQXZhbGFuY2hlIG5vdy4nKX1cbiAgICAgIDwvVHlwb2dyYXBoeT5cbiAgICAgIDxCdXR0b25cbiAgICAgICAgY29sb3I9XCJwcmltYXJ5XCJcbiAgICAgICAgc2l6ZT1cImxhcmdlXCJcbiAgICAgICAgb25DbGljaz17aGFuZGxlRXhwbG9yZUNsaWNrfVxuICAgICAgICBzeD17eyBtdDogMSB9fVxuICAgICAgPlxuICAgICAgICB7dCgnRXhwbG9yZSBFY29zeXN0ZW0nKX1cbiAgICAgIDwvQnV0dG9uPlxuICAgIDwvU3RhY2s+XG4gICk7XG59O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHsgdXNlQ3VycmVuY2llc0NvbnRleHQgfSBmcm9tICdAc3JjL2NvbnRleHRzL0N1cnJlbmNpZXNQcm92aWRlcic7XG5pbXBvcnQgeyB1c2VTZXR0aW5nc0NvbnRleHQgfSBmcm9tICdAc3JjL2NvbnRleHRzL1NldHRpbmdzUHJvdmlkZXInO1xuaW1wb3J0IHsgZ2V0Q3VycmVuY3lGb3JtYXR0ZXIgfSBmcm9tICdAc3JjL2NvbnRleHRzL3V0aWxzL2dldEN1cnJlbmN5Rm9ybWF0dGVyJztcblxudHlwZSBDdXJyZW5jeUNvbnZlcnRlciA9ICh2YWx1ZTogbnVtYmVyKSA9PiBzdHJpbmc7XG5cbmV4cG9ydCBjb25zdCB1c2VDb252ZXJ0ZWRDdXJyZW5jeUZvcm1hdHRlciA9IChcbiAgc291cmNlQ3VycmVuY3kgPSAnVVNEJyxcbik6IEN1cnJlbmN5Q29udmVydGVyID0+IHtcbiAgY29uc3QgeyBjb252ZXJ0LCBoYXNFeGNoYW5nZVJhdGUgfSA9IHVzZUN1cnJlbmNpZXNDb250ZXh0KCk7XG4gIGNvbnN0IHsgY3VycmVuY3k6IHRhcmdldEN1cnJlbmN5LCBjdXJyZW5jeUZvcm1hdHRlciB9ID0gdXNlU2V0dGluZ3NDb250ZXh0KCk7XG4gIGNvbnN0IGZhbGxiYWNrRm9ybWF0dGVyID0gdXNlTWVtbyhcbiAgICAoKSA9PiBnZXRDdXJyZW5jeUZvcm1hdHRlcihzb3VyY2VDdXJyZW5jeSksXG4gICAgW3NvdXJjZUN1cnJlbmN5XSxcbiAgKTtcbiAgY29uc3QgY2FuQ29udmVydCA9IHVzZU1lbW8oXG4gICAgKCkgPT4gaGFzRXhjaGFuZ2VSYXRlKHNvdXJjZUN1cnJlbmN5LCB0YXJnZXRDdXJyZW5jeSksXG4gICAgW3NvdXJjZUN1cnJlbmN5LCB0YXJnZXRDdXJyZW5jeSwgaGFzRXhjaGFuZ2VSYXRlXSxcbiAgKTtcbiAgY29uc3QgbmVlZHNDb252ZXJzaW9uID0gY2FuQ29udmVydCAmJiB0YXJnZXRDdXJyZW5jeSAhPT0gc291cmNlQ3VycmVuY3k7XG5cbiAgcmV0dXJuIHVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICghbmVlZHNDb252ZXJzaW9uKSB7XG4gICAgICByZXR1cm4gZmFsbGJhY2tGb3JtYXR0ZXI7XG4gICAgfVxuXG4gICAgcmV0dXJuICh2YWx1ZTogbnVtYmVyKSA9PiB7XG4gICAgICBjb25zdCBjb252ZXJ0ZWQgPSBjb252ZXJ0KHtcbiAgICAgICAgYW1vdW50OiB2YWx1ZSxcbiAgICAgICAgZnJvbTogc291cmNlQ3VycmVuY3ksXG4gICAgICAgIHRvOiB0YXJnZXRDdXJyZW5jeSxcbiAgICAgIH0pIGFzIG51bWJlcjtcblxuICAgICAgcmV0dXJuIGN1cnJlbmN5Rm9ybWF0dGVyKGNvbnZlcnRlZCk7XG4gICAgfTtcbiAgfSwgW1xuICAgIGNvbnZlcnQsXG4gICAgY3VycmVuY3lGb3JtYXR0ZXIsXG4gICAgZmFsbGJhY2tGb3JtYXR0ZXIsXG4gICAgbmVlZHNDb252ZXJzaW9uLFxuICAgIHNvdXJjZUN1cnJlbmN5LFxuICAgIHRhcmdldEN1cnJlbmN5LFxuICBdKTtcbn07XG4iLCJpbXBvcnQgeyB1c2VBbmFseXRpY3NDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9BbmFseXRpY3NQcm92aWRlcic7XG5pbXBvcnQgeyB1c2VGZWF0dXJlRmxhZ0NvbnRleHQgfSBmcm9tICdAc3JjL2NvbnRleHRzL0ZlYXR1cmVGbGFnc1Byb3ZpZGVyJztcbmltcG9ydCB7IERlRmkgfSBmcm9tICdAc3JjL3BhZ2VzL0RlRmkvRGVGaSc7XG5pbXBvcnQgeyBDb2xsZWN0aWJsZXMgfSBmcm9tICcuLi8uLi8uLi9Db2xsZWN0aWJsZXMvQ29sbGVjdGlibGVzJztcbmltcG9ydCB7IE5ldHdvcmtzV2lkZ2V0IH0gZnJvbSAnLi9OZXR3b3JrV2lkZ2V0L05ldHdvcmtzV2lkZ2V0JztcbmltcG9ydCB7IFdhbGxldEJhbGFuY2VzIH0gZnJvbSAnLi9XYWxsZXRCYWxhbmNlcyc7XG5pbXBvcnQgeyB1c2VUcmFuc2xhdGlvbiB9IGZyb20gJ3JlYWN0LWkxOG5leHQnO1xuaW1wb3J0IHtcbiAgQm94LFxuICBDaXJjdWxhclByb2dyZXNzLFxuICBTY3JvbGxiYXJzLFxuICBTdGFjayxcbiAgVGFiLFxuICBUYWJQYW5lbCxcbiAgVGFicyxcbiAgc3R5bGVkLFxufSBmcm9tICdAYXZhbGFicy9jb3JlLWsyLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VJc0Z1bmN0aW9uQXZhaWxhYmxlIH0gZnJvbSAnQHNyYy9ob29rcy91c2VJc0Z1bmN0aW9uQXZhaWxhYmxlJztcbmltcG9ydCB7IFJlZGlyZWN0IH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyB1c2VQZXJzaXN0ZWRUYWJzIH0gZnJvbSAnQHNyYy9ob29rcy91c2VQZXJzaXN0ZWRUYWJzJztcbmltcG9ydCB7IHVzZVBhZ2VIaXN0b3J5IH0gZnJvbSAnQHNyYy9ob29rcy91c2VQYWdlSGlzdG9yeSc7XG5pbXBvcnQgeyBGQUIgfSBmcm9tICdAc3JjL2NvbXBvbmVudHMvY29tbW9uL2ZhYi9GQUInO1xuaW1wb3J0IHsgRmVhdHVyZUdhdGVzIH0gZnJvbSAnQHNyYy9iYWNrZ3JvdW5kL3NlcnZpY2VzL2ZlYXR1cmVGbGFncy9tb2RlbHMnO1xuXG5leHBvcnQgZW51bSBQb3J0Zm9saW9UYWJzIHtcbiAgQVNTRVRTLFxuICBDT0xMRUNUSUJMRVMsXG4gIERFRkksXG59XG5cbmV4cG9ydCBlbnVtIExpc3RUeXBlIHtcbiAgR1JJRCA9ICdHUklEJyxcbiAgTElTVCA9ICdMSVNUJyxcbn1cblxuY29uc3QgZnVuY3Rpb25JZHMgPSB7XG4gIFtQb3J0Zm9saW9UYWJzLkFTU0VUU106ICdBU1NFVFMnLFxuICBbUG9ydGZvbGlvVGFicy5DT0xMRUNUSUJMRVNdOiAnQ09MTEVDVElCTEVTJyxcbiAgW1BvcnRmb2xpb1RhYnMuREVGSV06ICdERUZJJyxcbn07XG5cbmNvbnN0IEZsZXhTY3JvbGxiYXJzID0gc3R5bGVkKFNjcm9sbGJhcnMpYFxuICBmbGV4LWdyb3c6IDE7XG4gIG1heC1oZWlnaHQ6IHVuc2V0O1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuXG4gICYgPiBkaXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgfVxuYDtcblxuZXhwb3J0IGZ1bmN0aW9uIFBvcnRmb2xpbygpIHtcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbigpO1xuICBjb25zdCB7IGNhcHR1cmUgfSA9IHVzZUFuYWx5dGljc0NvbnRleHQoKTtcbiAgY29uc3QgeyBmZWF0dXJlRmxhZ3MgfSA9IHVzZUZlYXR1cmVGbGFnQ29udGV4dCgpO1xuICBjb25zdCB7IGFjdGl2ZVRhYiwgc2V0QWN0aXZlVGFiIH0gPSB1c2VQZXJzaXN0ZWRUYWJzKFBvcnRmb2xpb1RhYnMuQVNTRVRTKTtcbiAgY29uc3QgeyBpc1JlYWR5LCBjaGVja0lzRnVuY3Rpb25TdXBwb3J0ZWQgfSA9IHVzZUlzRnVuY3Rpb25BdmFpbGFibGUoKTtcbiAgY29uc3QgW2xpc3RUeXBlLCBzZXRMaXN0VHlwZV0gPSB1c2VTdGF0ZTxMaXN0VHlwZT4oKTtcbiAgY29uc3QgW2hhZERlZmlFbmFibGVkLCBzZXRIYWREZWZpRW5hYmxlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IHsgZ2V0UGFnZUhpc3RvcnlEYXRhIH0gPSB1c2VQYWdlSGlzdG9yeSgpO1xuXG4gIGNvbnN0IHtcbiAgICBsaXN0VHlwZTogaGlzdG9yeUxpc3RUeXBlLFxuICAgIGlzTG9hZGluZzogaXNIaXN0b3J5TG9hZGluZyxcbiAgfTogeyBsaXN0VHlwZT86IExpc3RUeXBlOyBpc0xvYWRpbmc6IGJvb2xlYW4gfSA9IGdldFBhZ2VIaXN0b3J5RGF0YSgpO1xuICBjb25zdCBbaXNTY3JvbGxpbmcsIHNldElzU2Nyb2xsaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChmZWF0dXJlRmxhZ3NbRmVhdHVyZUdhdGVzLkRFRkldKSB7XG4gICAgICAvLyBOZXZlciBzZXQgaXQgYmFjayB0byBmYWxzZSxcbiAgICAgIC8vIHdlIG5lZWQgdG8ga25vdyBpZiBpdCB3YXMgKmV2ZXIqIGVuYWJsZWQgaW4gdGhlIGN1cnJlbnQgVUkgc2Vzc2lvbi5cbiAgICAgIHNldEhhZERlZmlFbmFibGVkKHRydWUpO1xuICAgIH1cbiAgfSwgW2ZlYXR1cmVGbGFnc10pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzSGlzdG9yeUxvYWRpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGhpc3RvcnlMaXN0VHlwZSkge1xuICAgICAgc2V0TGlzdFR5cGUoaGlzdG9yeUxpc3RUeXBlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc2V0TGlzdFR5cGUoTGlzdFR5cGUuR1JJRCk7XG4gIH0sIFtoaXN0b3J5TGlzdFR5cGUsIGlzSGlzdG9yeUxvYWRpbmcsIHNldExpc3RUeXBlXSk7XG5cbiAgY29uc3Qgc2hvdWxkU2hvdyA9IHVzZUNhbGxiYWNrKFxuICAgICh0YWIpID0+IHtcbiAgICAgIGlmICh0YWIgPT09IFBvcnRmb2xpb1RhYnMuREVGSSAmJiAhaGFkRGVmaUVuYWJsZWQpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBpZFRvQ2hlY2sgPSBmdW5jdGlvbklkc1t0YWJdO1xuXG4gICAgICBpZiAoIWlkVG9DaGVjaykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjaGVja0lzRnVuY3Rpb25TdXBwb3J0ZWQoaWRUb0NoZWNrKTtcbiAgICB9LFxuICAgIFtjaGVja0lzRnVuY3Rpb25TdXBwb3J0ZWQsIGhhZERlZmlFbmFibGVkXSxcbiAgKTtcblxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSB1c2VDYWxsYmFjayhcbiAgICAoX2V2ZW50OiBSZWFjdC5TeW50aGV0aWNFdmVudCwgbmV3VmFsdWU6IG51bWJlcikgPT4ge1xuICAgICAgc2V0QWN0aXZlVGFiKG5ld1ZhbHVlKTtcbiAgICAgIGlmIChuZXdWYWx1ZSA9PT0gUG9ydGZvbGlvVGFicy5BU1NFVFMpIHtcbiAgICAgICAgY2FwdHVyZSgnUG9ydGZvbGlvQXNzZXRzQ2xpY2tlZCcpO1xuICAgICAgfSBlbHNlIGlmIChuZXdWYWx1ZSA9PT0gUG9ydGZvbGlvVGFicy5DT0xMRUNUSUJMRVMpIHtcbiAgICAgICAgY2FwdHVyZSgnUG9ydGZvbGlvQ29sbGVjdGlibGVzQ2xpY2tlZCcpO1xuICAgICAgfSBlbHNlIGlmIChuZXdWYWx1ZSA9PT0gUG9ydGZvbGlvVGFicy5ERUZJKSB7XG4gICAgICAgIGNhcHR1cmUoJ1BvcnRmb2xpb0RlZmlDbGlja2VkJyk7XG4gICAgICB9XG4gICAgfSxcbiAgICBbY2FwdHVyZSwgc2V0QWN0aXZlVGFiXSxcbiAgKTtcblxuICBjb25zdCB0YWJzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgY29uc3QgdGFic1RvU2hvdyA9IE9iamVjdC52YWx1ZXMoUG9ydGZvbGlvVGFicylcbiAgICAgIC5maWx0ZXIoKHRhYikgPT4gc2hvdWxkU2hvdyh0YWIpKVxuICAgICAgLm1hcCgodGFiKSA9PiB7XG4gICAgICAgIGNvbnN0IGxhYmVsID1cbiAgICAgICAgICB0YWIgPT09IFBvcnRmb2xpb1RhYnMuQVNTRVRTXG4gICAgICAgICAgICA/IHQoJ0Fzc2V0cycpXG4gICAgICAgICAgICA6IHRhYiA9PT0gUG9ydGZvbGlvVGFicy5DT0xMRUNUSUJMRVNcbiAgICAgICAgICAgICAgPyB0KCdDb2xsZWN0aWJsZXMnKVxuICAgICAgICAgICAgICA6IHRhYiA9PT0gUG9ydGZvbGlvVGFicy5ERUZJXG4gICAgICAgICAgICAgICAgPyB0KCdEZUZpJylcbiAgICAgICAgICAgICAgICA6IG51bGw7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbGFiZWwsXG4gICAgICAgICAgdGFiLFxuICAgICAgICB9O1xuICAgICAgfSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRhYnNcbiAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgICAgdmFsdWU9e2FjdGl2ZVRhYn1cbiAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgIHZhcmlhbnQ9XCJmdWxsV2lkdGhcIlxuICAgICAgPlxuICAgICAgICB7dGFic1RvU2hvdy5tYXAoKHsgbGFiZWwsIHRhYiB9KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGxhYmVsID8gKFxuICAgICAgICAgICAgPFRhYiBsYWJlbD17bGFiZWx9IHZhbHVlPXt0YWJ9IGtleT17YHBvcnRmb2xpby10YWItJHt0YWJ9YH0gLz5cbiAgICAgICAgICApIDogbnVsbDtcbiAgICAgICAgfSl9XG4gICAgICA8L1RhYnM+XG4gICAgKTtcbiAgfSwgW2FjdGl2ZVRhYiwgaGFuZGxlQ2hhbmdlLCBzaG91bGRTaG93LCB0XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8U3RhY2sgc3g9e3sgZmxleEdyb3c6IDEgfX0+XG4gICAgICA8V2FsbGV0QmFsYW5jZXMgLz5cbiAgICAgIDxGQUIgaXNDb250ZW50U2Nyb2xsaW5nPXtpc1Njcm9sbGluZ30gLz5cbiAgICAgIDxTdGFjayBzeD17eyBmbGV4R3JvdzogMSB9fT5cbiAgICAgICAgPEJveCBzeD17eyBteDogMiwgbXQ6IDEsIGJvcmRlckJvdHRvbTogMSwgYm9yZGVyQ29sb3I6ICdkaXZpZGVyJyB9fT5cbiAgICAgICAgICB7dGFic31cbiAgICAgICAgPC9Cb3g+XG4gICAgICAgIDxTdGFjayBzeD17eyBmbGV4R3JvdzogMSB9fT5cbiAgICAgICAgICA8RmxleFNjcm9sbGJhcnNcbiAgICAgICAgICAgIG9uU2Nyb2xsU3RhcnQ9eygpID0+IHNldElzU2Nyb2xsaW5nKHRydWUpfVxuICAgICAgICAgICAgb25TY3JvbGxTdG9wPXsoKSA9PiBzZXRJc1Njcm9sbGluZyhmYWxzZSl9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPFRhYlBhbmVsXG4gICAgICAgICAgICAgIHZhbHVlPXthY3RpdmVUYWJ9XG4gICAgICAgICAgICAgIGluZGV4PXtQb3J0Zm9saW9UYWJzLkFTU0VUU31cbiAgICAgICAgICAgICAgc3g9e3sgaGVpZ2h0OiAnMTAwJScsIHBiOiAzIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxOZXR3b3Jrc1dpZGdldCAvPlxuICAgICAgICAgICAgPC9UYWJQYW5lbD5cblxuICAgICAgICAgICAgPFRhYlBhbmVsXG4gICAgICAgICAgICAgIHZhbHVlPXthY3RpdmVUYWJ9XG4gICAgICAgICAgICAgIGluZGV4PXtQb3J0Zm9saW9UYWJzLkNPTExFQ1RJQkxFU31cbiAgICAgICAgICAgICAgc3g9e3sgaGVpZ2h0OiAnMTAwJScgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAge3Nob3VsZFNob3coUG9ydGZvbGlvVGFicy5DT0xMRUNUSUJMRVMpID8gKFxuICAgICAgICAgICAgICAgIGxpc3RUeXBlID8gKFxuICAgICAgICAgICAgICAgICAgPENvbGxlY3RpYmxlc1xuICAgICAgICAgICAgICAgICAgICBsaXN0VHlwZT17bGlzdFR5cGV9XG4gICAgICAgICAgICAgICAgICAgIHNldExpc3RUeXBlPXtzZXRMaXN0VHlwZX1cbiAgICAgICAgICAgICAgICAgICAgaXNIaXN0b3J5TG9hZGluZz17aXNIaXN0b3J5TG9hZGluZ31cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgIDxDaXJjdWxhclByb2dyZXNzIHNpemU9ezYwfSAvPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICBpc1JlYWR5ICYmICggLy8gT25seSByZWRpcmVjdCB3aGVuIHdlIGhhdmUgYWxsIHRoZSBjb250ZXh0IG5lZWRlZCB0byBkZWNpZGVcbiAgICAgICAgICAgICAgICAgIDxSZWRpcmVjdCB0bz17Jy8nfSAvPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvVGFiUGFuZWw+XG5cbiAgICAgICAgICAgIDxUYWJQYW5lbFxuICAgICAgICAgICAgICB2YWx1ZT17YWN0aXZlVGFifVxuICAgICAgICAgICAgICBpbmRleD17UG9ydGZvbGlvVGFicy5ERUZJfVxuICAgICAgICAgICAgICBzeD17eyBoZWlnaHQ6ICcxMDAlJywgcGI6IDMgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgPERlRmkgLz5cbiAgICAgICAgICAgIDwvVGFiUGFuZWw+XG4gICAgICAgICAgPC9GbGV4U2Nyb2xsYmFycz5cbiAgICAgICAgPC9TdGFjaz5cbiAgICAgIDwvU3RhY2s+XG4gICAgPC9TdGFjaz5cbiAgKTtcbn1cbiIsImltcG9ydCB7XG4gIEFsZXJ0VHJpYW5nbGVJY29uLFxuICBTdGFjayxcbiAgVG9vbHRpcCxcbiAgVHlwb2dyYXBoeSxcbiAgU2tlbGV0b24sXG59IGZyb20gJ0BhdmFsYWJzL2NvcmUtazItY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUb2tlblR5cGUgfSBmcm9tICdAYXZhbGFicy92bS1tb2R1bGUtdHlwZXMnO1xuaW1wb3J0IHsgUEFuZEwgfSBmcm9tICdAc3JjL2NvbXBvbmVudHMvY29tbW9uL1Byb2ZpdEFuZExvc3MnO1xuaW1wb3J0IHsgdXNlQWNjb3VudHNDb250ZXh0IH0gZnJvbSAnQHNyYy9jb250ZXh0cy9BY2NvdW50c1Byb3ZpZGVyJztcbmltcG9ydCB7IHVzZUJhbGFuY2VzQ29udGV4dCB9IGZyb20gJ0BzcmMvY29udGV4dHMvQmFsYW5jZXNQcm92aWRlcic7XG5pbXBvcnQgeyB1c2VTZXR0aW5nc0NvbnRleHQgfSBmcm9tICdAc3JjL2NvbnRleHRzL1NldHRpbmdzUHJvdmlkZXInO1xuaW1wb3J0IHsgdXNlQmFsYW5jZVRvdGFsSW5DdXJyZW5jeSB9IGZyb20gJ0BzcmMvaG9va3MvdXNlQmFsYW5jZVRvdGFsSW5DdXJyZW5jeSc7XG5pbXBvcnQgeyB1c2VMaXZlQmFsYW5jZSB9IGZyb20gJ0BzcmMvaG9va3MvdXNlTGl2ZUJhbGFuY2UnO1xuaW1wb3J0IHsgdXNlVG9rZW5QcmljZU1pc3NpbmcgfSBmcm9tICdAc3JjL2hvb2tzL3VzZVRva2VuUHJpY2VJc01pc3NpbmcnO1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0JztcblxuY29uc3QgUE9MTEVEX0JBTEFOQ0VTID0gW1Rva2VuVHlwZS5OQVRJVkUsIFRva2VuVHlwZS5FUkMyMF07XG5cbmV4cG9ydCBmdW5jdGlvbiBXYWxsZXRCYWxhbmNlcygpIHtcbiAgY29uc3QgeyBjdXJyZW5jeSwgY3VycmVuY3lGb3JtYXR0ZXIgfSA9IHVzZVNldHRpbmdzQ29udGV4dCgpO1xuICBjb25zdCB7XG4gICAgYWNjb3VudHM6IHsgYWN0aXZlOiBhY3RpdmVBY2NvdW50IH0sXG4gIH0gPSB1c2VBY2NvdW50c0NvbnRleHQoKTtcblxuICBjb25zdCB7IGlzVG9rZW5zQ2FjaGVkLCB0b3RhbEJhbGFuY2UgfSA9IHVzZUJhbGFuY2VzQ29udGV4dCgpO1xuXG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oKTtcbiAgY29uc3QgeyBmYXZvcml0ZU5ldHdvcmtzTWlzc2luZ1ByaWNlLCBhY3RpdmVOZXR3b3JrTWlzc2luZ1ByaWNlIH0gPVxuICAgIHVzZVRva2VuUHJpY2VNaXNzaW5nKCk7XG5cbiAgY29uc3QgYmFsYW5jZVRvdGFsVVNEID0gdXNlQmFsYW5jZVRvdGFsSW5DdXJyZW5jeShhY3RpdmVBY2NvdW50KTtcblxuICBjb25zdCBiYWxhbmNlVG90YWxVU0RTdW0gPSBiYWxhbmNlVG90YWxVU0Q/LnN1bTtcblxuICBjb25zdCB0b3RhbEJhbGFuY2VTdW0gPSB0b3RhbEJhbGFuY2U/LnN1bSB8fCBudWxsO1xuICBjb25zdCB0b3RhbEJhbGFuY2VDaGFuZ2VzID0gdG90YWxCYWxhbmNlPy5wcmljZUNoYW5nZTtcblxuICBjb25zdCB0b3RhbEJhbGFuY2VDaGFuZ2UgPSB0b3RhbEJhbGFuY2VcbiAgICA/IHtcbiAgICAgICAgdmFsdWU6IHRvdGFsQmFsYW5jZUNoYW5nZXM/LnZhbHVlLFxuICAgICAgICBwZXJjZW50YWdlOiBiYWxhbmNlVG90YWxVU0RTdW1cbiAgICAgICAgICA/ICh0b3RhbEJhbGFuY2U/LnByaWNlQ2hhbmdlLnZhbHVlIC8gYmFsYW5jZVRvdGFsVVNEU3VtKSAqIDEwMFxuICAgICAgICAgIDogdW5kZWZpbmVkLFxuICAgICAgfVxuICAgIDoge307XG5cbiAgY29uc3QgYmFsYW5jZVRvdGFsID1cbiAgICBiYWxhbmNlVG90YWxVU0RTdW0gIT09IG51bGwgJiYgYmFsYW5jZVRvdGFsVVNEU3VtICE9PSB1bmRlZmluZWRcbiAgICAgID8gYmFsYW5jZVRvdGFsVVNEU3VtXG4gICAgICA6ICh0b3RhbEJhbGFuY2VTdW0gPz8gbnVsbCk7XG5cbiAgdXNlTGl2ZUJhbGFuY2UoUE9MTEVEX0JBTEFOQ0VTKTsgLy8gTWFrZSBzdXJlIHdlIHNob3cgdGhlIGxhdGVzdCBiYWxhbmNlcy5cblxuICByZXR1cm4gKFxuICAgIDxTdGFja1xuICAgICAgZGlyZWN0aW9uPVwicm93XCJcbiAgICAgIHN4PXt7XG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2ZsZXgtZW5kJyxcbiAgICAgICAgbWluSGVpZ2h0OiA1LjUsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIG10OiAxLFxuICAgICAgICBnYXA6IDEuMjUsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtiYWxhbmNlVG90YWwgPT09IG51bGwgPyAoXG4gICAgICAgIDxTa2VsZXRvblxuICAgICAgICAgIHZhcmlhbnQ9XCJyb3VuZGVkXCJcbiAgICAgICAgICBzeD17e1xuICAgICAgICAgICAgaGVpZ2h0OiAzNyxcbiAgICAgICAgICAgIHdpZHRoOiAyMTUsXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDxTdGFjaz5cbiAgICAgICAgICA8U3RhY2tcbiAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgICAgICAgICAgICBhbGlnbkl0ZW1zOiAnYmFzZWxpbmUnLFxuICAgICAgICAgICAgICBnYXA6IDEuMjUsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtpc1Rva2Vuc0NhY2hlZCAmJiAoXG4gICAgICAgICAgICAgIDxUb29sdGlwIHRpdGxlPXt0KCdCYWxhbmNlcyBsb2FkaW5nLi4uJyl9IHBsYWNlbWVudD1cImJvdHRvbVwiPlxuICAgICAgICAgICAgICAgIDxBbGVydFRyaWFuZ2xlSWNvblxuICAgICAgICAgICAgICAgICAgc2l6ZT17MTl9XG4gICAgICAgICAgICAgICAgICBzeD17eyBjb2xvcjogJ3dhcm5pbmcubWFpbicsIG1yOiAxIH19XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIHshaXNUb2tlbnNDYWNoZWQgJiZcbiAgICAgICAgICAgICAgKGZhdm9yaXRlTmV0d29ya3NNaXNzaW5nUHJpY2UgfHwgYWN0aXZlTmV0d29ya01pc3NpbmdQcmljZSkgJiYgKFxuICAgICAgICAgICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgICAgICAgICB0aXRsZT17dChcbiAgICAgICAgICAgICAgICAgICAgJ1RoZSBwcmljZXMgb2Ygc29tZSB0b2tlbnMgYXJlIG1pc3NpbmcuIFRoZSBiYWxhbmNlIG1pZ2h0IG5vdCBiZSBhY2N1cmF0ZSBjdXJyZW50bHkuJyxcbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICBwbGFjZW1lbnQ9XCJib3R0b21cIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxBbGVydFRyaWFuZ2xlSWNvblxuICAgICAgICAgICAgICAgICAgICBzaXplPXsxOX1cbiAgICAgICAgICAgICAgICAgICAgc3g9e3sgY29sb3I6ICd3YXJuaW5nLm1haW4nLCBtcjogMSB9fVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8VHlwb2dyYXBoeVxuICAgICAgICAgICAgICBkYXRhLXRlc3RpZD1cIndhbGxldC1iYWxhbmNlXCJcbiAgICAgICAgICAgICAgdmFyaWFudD1cImgzXCJcbiAgICAgICAgICAgICAgc3g9e3sgZm9udFdlaWdodDogJ2ZvbnRXZWlnaHRCb2xkJyB9fVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICB7Y3VycmVuY3lGb3JtYXR0ZXIoYmFsYW5jZVRvdGFsKS5yZXBsYWNlKGN1cnJlbmN5LCAnJyl9XG4gICAgICAgICAgICA8L1R5cG9ncmFwaHk+XG4gICAgICAgICAgICA8VHlwb2dyYXBoeSB2YXJpYW50PVwiYm9keTFcIiBzeD17eyBvcGFjaXR5OiAnNjAlJyB9fT5cbiAgICAgICAgICAgICAge2N1cnJlbmN5fVxuICAgICAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICAgIDwvU3RhY2s+XG4gICAgICAgICAgPFN0YWNrIHN4PXt7IGFsaWduSXRlbXM6ICdjZW50ZXInIH19PlxuICAgICAgICAgICAgPFBBbmRMXG4gICAgICAgICAgICAgIHZhbHVlPXt0b3RhbEJhbGFuY2VDaGFuZ2UudmFsdWV9XG4gICAgICAgICAgICAgIHBlcmNlbnRhZ2U9e3RvdGFsQmFsYW5jZUNoYW5nZS5wZXJjZW50YWdlfVxuICAgICAgICAgICAgICBzaXplPVwiYmlnXCJcbiAgICAgICAgICAgICAgc2hvd1BlcmNlbnRhZ2VcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgPC9TdGFjaz5cbiAgICAgICl9XG4gICAgPC9TdGFjaz5cbiAgKTtcbn1cbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7IHZhciBrZXksIGk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpOyBmb3IgKGkgPSAwOyBpIDwgc291cmNlU3ltYm9sS2V5cy5sZW5ndGg7IGkrKykgeyBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldOyBpZiAoZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDApIGNvbnRpbnVlOyBpZiAoIU9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzb3VyY2UsIGtleSkpIGNvbnRpbnVlOyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7IGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9OyB2YXIgdGFyZ2V0ID0ge307IHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTsgdmFyIGtleSwgaTsgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHsga2V5ID0gc291cmNlS2V5c1tpXTsgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkgeyBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07IHJldHVybiBfZXh0ZW5kcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuY29uc3QgZGVmYXVsdFByb3BzID0ge1xuICBicmVha3BvaW50Q29sczogdW5kZWZpbmVkLFxuICAvLyBvcHRpb25hbCwgbnVtYmVyIG9yIG9iamVjdCB7IGRlZmF1bHQ6IG51bWJlciwgW2tleTogbnVtYmVyXTogbnVtYmVyIH1cbiAgY2xhc3NOYW1lOiB1bmRlZmluZWQsXG4gIC8vIHJlcXVpcmVkLCBzdHJpbmdcbiAgY29sdW1uQ2xhc3NOYW1lOiB1bmRlZmluZWQsXG4gIC8vIG9wdGlvbmFsLCBzdHJpbmdcbiAgLy8gQW55IFJlYWN0IGNoaWxkcmVuLiBUeXBpY2FsbHkgYW4gYXJyYXkgb2YgSlNYIGl0ZW1zXG4gIGNoaWxkcmVuOiB1bmRlZmluZWQsXG4gIC8vIEN1c3RvbSBhdHRyaWJ1dGVzLCBob3dldmVyIGl0IGlzIGFkdmlzZWQgYWdhaW5zdFxuICAvLyB1c2luZyB0aGVzZSB0byBwcmV2ZW50IHVuaW50ZW5kZWQgaXNzdWVzIGFuZCBmdXR1cmUgY29uZmxpY3RzXG4gIC8vIC4uLmFueSBvdGhlciBhdHRyaWJ1dGUsIHdpbGwgYmUgYWRkZWQgdG8gdGhlIGNvbnRhaW5lclxuICBjb2x1bW5BdHRyczogdW5kZWZpbmVkLFxuICAvLyBvYmplY3QsIGFkZGVkIHRvIHRoZSBjb2x1bW5zXG4gIC8vIERlcHJlY2F0ZWQgcHJvcHNcbiAgLy8gVGhlIGNvbHVtbiBwcm9wZXJ0eSBpcyBkZXByZWNhdGVkLlxuICAvLyBJdCBpcyBhbiBhbGlhcyBvZiB0aGUgYGNvbHVtbkF0dHJzYCBwcm9wZXJ0eVxuICBjb2x1bW46IHVuZGVmaW5lZFxufTtcbmNvbnN0IERFRkFVTFRfQ09MVU1OUyA9IDI7XG5cbmNsYXNzIE1hc29ucnkgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTsgLy8gQ29ycmVjdCBzY29wZSBmb3Igd2hlbiBtZXRob2RzIGFyZSBhY2Nlc3NlZCBleHRlcm5hbGx5XG5cbiAgICB0aGlzLnJlQ2FsY3VsYXRlQ29sdW1uQ291bnQgPSB0aGlzLnJlQ2FsY3VsYXRlQ29sdW1uQ291bnQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnJlQ2FsY3VsYXRlQ29sdW1uQ291bnREZWJvdW5jZSA9IHRoaXMucmVDYWxjdWxhdGVDb2x1bW5Db3VudERlYm91bmNlLmJpbmQodGhpcyk7IC8vIGRlZmF1bHQgc3RhdGVcblxuICAgIGxldCBjb2x1bW5Db3VudDtcblxuICAgIGlmICh0aGlzLnByb3BzLmJyZWFrcG9pbnRDb2xzICYmIHRoaXMucHJvcHMuYnJlYWtwb2ludENvbHMuZGVmYXVsdCkge1xuICAgICAgY29sdW1uQ291bnQgPSB0aGlzLnByb3BzLmJyZWFrcG9pbnRDb2xzLmRlZmF1bHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbHVtbkNvdW50ID0gcGFyc2VJbnQodGhpcy5wcm9wcy5icmVha3BvaW50Q29scykgfHwgREVGQVVMVF9DT0xVTU5TO1xuICAgIH1cblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBjb2x1bW5Db3VudFxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnJlQ2FsY3VsYXRlQ29sdW1uQ291bnQoKTsgLy8gd2luZG93IG1heSBub3QgYmUgYXZhaWxhYmxlIGluIHNvbWUgZW52aXJvbm1lbnRzXG5cbiAgICBpZiAod2luZG93KSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5yZUNhbGN1bGF0ZUNvbHVtbkNvdW50RGVib3VuY2UpO1xuICAgIH1cbiAgfVxuXG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICB0aGlzLnJlQ2FsY3VsYXRlQ29sdW1uQ291bnQoKTtcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIGlmICh3aW5kb3cpIHtcbiAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnJlQ2FsY3VsYXRlQ29sdW1uQ291bnREZWJvdW5jZSk7XG4gICAgfVxuICB9XG5cbiAgcmVDYWxjdWxhdGVDb2x1bW5Db3VudERlYm91bmNlKCkge1xuICAgIGlmICghd2luZG93IHx8ICF3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKSB7XG4gICAgICAvLyBJRTEwK1xuICAgICAgdGhpcy5yZUNhbGN1bGF0ZUNvbHVtbkNvdW50KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSkge1xuICAgICAgLy8gSUUxMCtcbiAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLl9sYXN0UmVjYWxjdWxhdGVBbmltYXRpb25GcmFtZSk7XG4gICAgfVxuXG4gICAgdGhpcy5fbGFzdFJlY2FsY3VsYXRlQW5pbWF0aW9uRnJhbWUgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgIHRoaXMucmVDYWxjdWxhdGVDb2x1bW5Db3VudCgpO1xuICAgIH0pO1xuICB9XG5cbiAgcmVDYWxjdWxhdGVDb2x1bW5Db3VudCgpIHtcbiAgICBjb25zdCB3aW5kb3dXaWR0aCA9IHdpbmRvdyAmJiB3aW5kb3cuaW5uZXJXaWR0aCB8fCBJbmZpbml0eTtcbiAgICBsZXQgYnJlYWtwb2ludENvbHNPYmplY3QgPSB0aGlzLnByb3BzLmJyZWFrcG9pbnRDb2xzOyAvLyBBbGxvdyBwYXNzaW5nIGEgc2luZ2xlIG51bWJlciB0byBgYnJlYWtwb2ludENvbHNgIGluc3RlYWQgb2YgYW4gb2JqZWN0XG5cbiAgICBpZiAodHlwZW9mIGJyZWFrcG9pbnRDb2xzT2JqZWN0ICE9PSAnb2JqZWN0Jykge1xuICAgICAgYnJlYWtwb2ludENvbHNPYmplY3QgPSB7XG4gICAgICAgIGRlZmF1bHQ6IHBhcnNlSW50KGJyZWFrcG9pbnRDb2xzT2JqZWN0KSB8fCBERUZBVUxUX0NPTFVNTlNcbiAgICAgIH07XG4gICAgfVxuXG4gICAgbGV0IG1hdGNoZWRCcmVha3BvaW50ID0gSW5maW5pdHk7XG4gICAgbGV0IGNvbHVtbnMgPSBicmVha3BvaW50Q29sc09iamVjdC5kZWZhdWx0IHx8IERFRkFVTFRfQ09MVU1OUztcblxuICAgIGZvciAobGV0IGJyZWFrcG9pbnQgaW4gYnJlYWtwb2ludENvbHNPYmplY3QpIHtcbiAgICAgIGNvbnN0IG9wdEJyZWFrcG9pbnQgPSBwYXJzZUludChicmVha3BvaW50KTtcbiAgICAgIGNvbnN0IGlzQ3VycmVudEJyZWFrcG9pbnQgPSBvcHRCcmVha3BvaW50ID4gMCAmJiB3aW5kb3dXaWR0aCA8PSBvcHRCcmVha3BvaW50O1xuXG4gICAgICBpZiAoaXNDdXJyZW50QnJlYWtwb2ludCAmJiBvcHRCcmVha3BvaW50IDwgbWF0Y2hlZEJyZWFrcG9pbnQpIHtcbiAgICAgICAgbWF0Y2hlZEJyZWFrcG9pbnQgPSBvcHRCcmVha3BvaW50O1xuICAgICAgICBjb2x1bW5zID0gYnJlYWtwb2ludENvbHNPYmplY3RbYnJlYWtwb2ludF07XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29sdW1ucyA9IE1hdGgubWF4KDEsIHBhcnNlSW50KGNvbHVtbnMpIHx8IDEpO1xuXG4gICAgaWYgKHRoaXMuc3RhdGUuY29sdW1uQ291bnQgIT09IGNvbHVtbnMpIHtcbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBjb2x1bW5Db3VudDogY29sdW1uc1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgaXRlbXNJbkNvbHVtbnMoKSB7XG4gICAgY29uc3QgY3VycmVudENvbHVtbkNvdW50ID0gdGhpcy5zdGF0ZS5jb2x1bW5Db3VudDtcbiAgICBjb25zdCBpdGVtc0luQ29sdW1ucyA9IG5ldyBBcnJheShjdXJyZW50Q29sdW1uQ291bnQpOyAvLyBGb3JjZSBjaGlsZHJlbiB0byBiZSBoYW5kbGVkIGFzIGFuIGFycmF5XG5cbiAgICBjb25zdCBpdGVtcyA9IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkodGhpcy5wcm9wcy5jaGlsZHJlbik7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBjb2x1bW5JbmRleCA9IGkgJSBjdXJyZW50Q29sdW1uQ291bnQ7XG5cbiAgICAgIGlmICghaXRlbXNJbkNvbHVtbnNbY29sdW1uSW5kZXhdKSB7XG4gICAgICAgIGl0ZW1zSW5Db2x1bW5zW2NvbHVtbkluZGV4XSA9IFtdO1xuICAgICAgfVxuXG4gICAgICBpdGVtc0luQ29sdW1uc1tjb2x1bW5JbmRleF0ucHVzaChpdGVtc1tpXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGl0ZW1zSW5Db2x1bW5zO1xuICB9XG5cbiAgcmVuZGVyQ29sdW1ucygpIHtcbiAgICBjb25zdCB7XG4gICAgICBjb2x1bW4sXG4gICAgICBjb2x1bW5BdHRycyA9IHt9LFxuICAgICAgY29sdW1uQ2xhc3NOYW1lXG4gICAgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgY2hpbGRyZW5JbkNvbHVtbnMgPSB0aGlzLml0ZW1zSW5Db2x1bW5zKCk7XG4gICAgY29uc3QgY29sdW1uV2lkdGggPSBgJHsxMDAgLyBjaGlsZHJlbkluQ29sdW1ucy5sZW5ndGh9JWA7XG4gICAgbGV0IGNsYXNzTmFtZSA9IGNvbHVtbkNsYXNzTmFtZTtcblxuICAgIGlmIChjbGFzc05hbWUgJiYgdHlwZW9mIGNsYXNzTmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMubG9nRGVwcmVjYXRlZCgnVGhlIHByb3BlcnR5IFwiY29sdW1uQ2xhc3NOYW1lXCIgcmVxdWlyZXMgYSBzdHJpbmcnKTsgLy8gVGhpcyBpcyBhIGRlcHJlY2F0ZWQgZGVmYXVsdCBhbmQgd2lsbCBiZSByZW1vdmVkIHNvb24uXG5cbiAgICAgIGlmICh0eXBlb2YgY2xhc3NOYW1lID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjbGFzc05hbWUgPSAnbXktbWFzb25yeS1ncmlkX2NvbHVtbic7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgY29sdW1uQXR0cmlidXRlcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjb2x1bW4pLCBjb2x1bW5BdHRycyksIHt9LCB7XG4gICAgICBzdHlsZTogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjb2x1bW5BdHRycy5zdHlsZSksIHt9LCB7XG4gICAgICAgIHdpZHRoOiBjb2x1bW5XaWR0aFxuICAgICAgfSksXG4gICAgICBjbGFzc05hbWVcbiAgICB9KTtcblxuICAgIHJldHVybiBjaGlsZHJlbkluQ29sdW1ucy5tYXAoKGl0ZW1zLCBpKSA9PiB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgX2V4dGVuZHMoe30sIGNvbHVtbkF0dHJpYnV0ZXMsIHtcbiAgICAgICAga2V5OiBpXG4gICAgICB9KSwgaXRlbXMpO1xuICAgIH0pO1xuICB9XG5cbiAgbG9nRGVwcmVjYXRlZChtZXNzYWdlKSB7XG4gICAgY29uc29sZS5lcnJvcignW01hc29ucnldJywgbWVzc2FnZSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIHtcbiAgICAgIC8vIGlnbm9yZWRcbiAgICAgIGNoaWxkcmVuLFxuICAgICAgYnJlYWtwb2ludENvbHMsXG4gICAgICBjb2x1bW5DbGFzc05hbWUsXG4gICAgICBjb2x1bW5BdHRycyxcbiAgICAgIGNvbHVtbixcbiAgICAgIC8vIHVzZWRcbiAgICAgIGNsYXNzTmFtZVxuICAgIH0gPSBfdGhpcyRwcm9wcyxcbiAgICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF90aGlzJHByb3BzLCBbXCJjaGlsZHJlblwiLCBcImJyZWFrcG9pbnRDb2xzXCIsIFwiY29sdW1uQ2xhc3NOYW1lXCIsIFwiY29sdW1uQXR0cnNcIiwgXCJjb2x1bW5cIiwgXCJjbGFzc05hbWVcIl0pO1xuXG4gICAgbGV0IGNsYXNzTmFtZU91dHB1dCA9IGNsYXNzTmFtZTtcblxuICAgIGlmICh0eXBlb2YgY2xhc3NOYW1lICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5sb2dEZXByZWNhdGVkKCdUaGUgcHJvcGVydHkgXCJjbGFzc05hbWVcIiByZXF1aXJlcyBhIHN0cmluZycpOyAvLyBUaGlzIGlzIGEgZGVwcmVjYXRlZCBkZWZhdWx0IGFuZCB3aWxsIGJlIHJlbW92ZWQgc29vbi5cblxuICAgICAgaWYgKHR5cGVvZiBjbGFzc05hbWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNsYXNzTmFtZU91dHB1dCA9ICdteS1tYXNvbnJ5LWdyaWQnO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBfZXh0ZW5kcyh7fSwgcmVzdCwge1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVPdXRwdXRcbiAgICB9KSwgdGhpcy5yZW5kZXJDb2x1bW5zKCkpO1xuICB9XG5cbn1cblxuTWFzb25yeS5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IE1hc29ucnk7XG4iXSwibmFtZXMiOlsiY2xvbmVFbGVtZW50IiwiQm94IiwiRmxpcHBlciIsImNoaWxkcmVuIiwic2l6ZSIsImlzRmxpcHBlZCIsImxlbmd0aCIsIkVycm9yIiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50Iiwic3giLCJwb3NpdGlvbiIsIndpZHRoIiwiaGVpZ2h0IiwiYmFja2dyb3VuZENvbG9yIiwidHJhbnNmb3JtIiwidHJhbnNpdGlvbiIsInRyYW5zZm9ybVN0eWxlIiwiYmFja2ZhY2VWaXNpYmlsaXR5IiwiekluZGV4IiwiYmFja2dyb3VuZCIsIlBhZ2VUaXRsZSIsIlBhZ2VUaXRsZVZhcmlhbnQiLCJ0IiwidHJhbnNsYXRlIiwiQWxlcnRDaXJjbGVJY29uIiwiU3RhY2siLCJUeXBvZ3JhcGh5IiwidXNlVHJhbnNsYXRpb24iLCJGdW5jdGlvbk5hbWVzIiwiZ2V0VHJhbnNsYXRlZEZ1bmN0aW9uTmFtZSIsIm5hbWUiLCJ0cmFuc2xhdGlvbnMiLCJCUklER0UiLCJTV0FQIiwiU0VORCIsIkJVWSIsIkRFRkkiLCJLRVlTVE9ORSIsIlRPS0VOX0RFVEFJTFMiLCJGdW5jdGlvbklzT2ZmbGluZSIsImZ1bmN0aW9uTmFtZSIsImhpZGVQYWdlVGl0bGUiLCJ2YXJpYW50IiwiUFJJTUFSWSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImZsZXhHcm93IiwibWIiLCJtdCIsImFsaWduIiwiY29sb3IiLCJDYXJkIiwiVG9rZW5DYXJkIiwib25DbGljayIsImJhbGFuY2VJbkN1cnJlbmN5IiwicHkiLCJweCIsImJvcmRlclJhZGl1cyIsImN1cnNvciIsInN0eWxlIiwiZmxleERpcmVjdGlvbiIsIm1sIiwidmFyaWFuIiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VIaXN0b3J5Iiwic3R5bGVkIiwiQmFja2Ryb3AiLCJRUkNvZGVJY29uIiwiU3dhcEljb24iLCJCdXlJY29uIiwiQnJpZGdlSWNvbiIsIkFycm93VXBSaWdodEljb24iLCJ1c2VUaGVtZSIsIkJ1dHRvbiIsIkxpZ2h0bmluZ0ljb24iLCJQb3BwZXIiLCJHcm93IiwiQ29sbGFwc2UiLCJYSWNvbiIsIkljb25CdXR0b24iLCJ1c2VJc0Z1bmN0aW9uQXZhaWxhYmxlIiwidXNlQW5hbHl0aWNzQ29udGV4dCIsImdldENvcmVXZWJVcmwiLCJBY3Rpb25CdXR0b25XcmFwcGVyIiwiTWVudSIsInNob3VsZEZvcndhcmRQcm9wIiwicHJvcCIsImlzT3BlbiIsInRoZW1lIiwicGFsZXR0ZSIsInBhcGVyIiwiZmFiIiwiQnV0dG9uVGV4dCIsImlzRXhwYW5kZWQiLCJzcGFjaW5nIiwiQWN0aW9uQnV0dG9uIiwiaWNvbiIsInRleHQiLCJyZXN0IiwiX2V4dGVuZHMiLCJ0b0xvd2VyQ2FzZSIsImNsYXNzTmFtZSIsIkZBQiIsImlzQ29udGVudFNjcm9sbGluZyIsInNldElzT3BlbiIsImhpc3RvcnkiLCJjaGVja0lzRnVuY3Rpb25TdXBwb3J0ZWQiLCJjYXB0dXJlIiwiZmFiUmVmIiwiZmFkZVRpbWVyIiwic2V0SXNFeHBhbmRlZCIsIkZBQk1lbnVJdGVtcyIsInJvdXRlIiwiY29tbW9uIiwiYmxhY2siLCJSRUNFSVZFIiwib25jbGljayIsIndpbmRvdyIsIm9wZW4iLCJmaWx0ZXIiLCJmYWJUZXh0IiwiY3VycmVudCIsInNldFRpbWVvdXQiLCJ1bmRlZmluZWQiLCJjbGVhclRpbWVvdXQiLCJGcmFnbWVudCIsImluIiwicmVmIiwicCIsImJvdHRvbSIsInJpZ2h0Iiwib3JpZW50YXRpb24iLCJ1bm1vdW50T25FeGl0IiwiYW5jaG9yRWwiLCJwbGFjZW1lbnQiLCJUcmFuc2l0aW9uUHJvcHMiLCJ0aW1lb3V0IiwibWFwIiwia2V5IiwicHVzaCIsInVzZUNhbGxiYWNrIiwiQ2lyY3VsYXJQcm9ncmVzcyIsIkluZmluaXRlU2Nyb2xsIiwibG9hZE1vcmUiLCJoYXNNb3JlIiwibG9hZGluZyIsImVycm9yIiwibG9hZGVyIiwibG9hZE1vcmVIYW5kbGVyIiwiZW50cmllcyIsInRhcmdldCIsImlzSW50ZXJzZWN0aW5nIiwib3B0aW9uIiwicm9vdCIsInJvb3RNYXJnaW4iLCJ0aHJlc2hvbGQiLCJsb2FkZXJWYWx1ZSIsIm9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJvYnNlcnZlIiwidW5vYnNlcnZlIiwicGIiLCJ1c2VCYWxhbmNlc0NvbnRleHQiLCJ1c2VNZW1vIiwidXNlQmFsYW5jZVRvdGFsSW5DdXJyZW5jeSIsImFjY291bnQiLCJnZXRUb3RhbEJhbGFuY2UiLCJhZGRyZXNzQyIsInVzZUFjY291bnRzQ29udGV4dCIsInVzZU5ldHdvcmtDb250ZXh0IiwiZ2V0QWRkcmVzc0ZvckNoYWluIiwidXNlTmZ0cyIsImJhbGFuY2VzIiwiYWNjb3VudHMiLCJhY3RpdmUiLCJhY3RpdmVBY2NvdW50IiwibmV0d29yayIsIm5mdHMiLCJ1c2VyQWRkcmVzcyIsIk9iamVjdCIsInZhbHVlcyIsImNoYWluSWQiLCJHcmlkSWNvbiIsIkxpc3RJY29uIiwiVG9nZ2xlQnV0dG9uIiwiVG9nZ2xlQnV0dG9uR3JvdXAiLCJDb2xsZWN0aWJsZUdyaWQiLCJDb2xsZWN0aWJsZUxpc3QiLCJDb2xsZWN0aWJsZUxpc3RFbXB0eSIsInVzZVNldENvbGxlY3RpYmxlUGFyYW1zIiwidXNlUGFnZUhpc3RvcnkiLCJ1c2VTZXR0aW5nc0NvbnRleHQiLCJDb2xsZWN0aWJsZVNrZWxldG9uIiwiTGlzdFR5cGUiLCJUb2tlblR5cGUiLCJ1c2VMaXZlQmFsYW5jZSIsIlBPTExFRF9CQUxBTkNFUyIsIkVSQzcyMSIsIkVSQzExNTUiLCJDb2xsZWN0aWJsZXMiLCJsaXN0VHlwZSIsInNldExpc3RUeXBlIiwiaXNIaXN0b3J5TG9hZGluZyIsInNldENvbGxlY3RpYmxlUGFyYW1zIiwic2V0TmF2aWdhdGlvbkhpc3RvcnlEYXRhIiwiaXNGdW5jdGlvblN1cHBvcnRlZCIsImlzTWFuYWdlQ29sbGVjdGlibGVzU3VwcG9ydGVkIiwiTUFOQUdFX0NPTExFQ1RJQkxFUyIsImdldENvbGxlY3RpYmxlVmlzaWJpbGl0eSIsInZpc2libGVOZnRzIiwibmZ0IiwiaGFuZGxlQ2xpY2siLCJ0eXBlIiwidG9nZ2xlTWFuYWdlQ29sbGVjdGlibGVzUGFnZSIsImxvY2F0aW9uIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwiaGFuZGxlSXRlbUNsaWNrIiwib3B0aW9ucyIsInBhdGgiLCJtYXhIZWlnaHQiLCJkaXJlY3Rpb24iLCJteSIsIm1yIiwiZXhjbHVzaXZlIiwiZGlzYWJsZWQiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiXyIsIkdSSUQiLCJMSVNUIiwidG9TdHJpbmciLCJmb250U2l6ZSIsImZvbnRXZWlnaHQiLCJDb2xsZWN0aWJsZU1lZGlhIiwiQ29sbGVjdGlibGVXcmFwcGVyIiwibmZ0c1RvU2hvdyIsImRpc3BsYXkiLCJwYWRkaW5nIiwiYWRkcmVzcyIsInRva2VuSWQiLCJ1cmwiLCJsb2dvVXJpIiwiaG92ZXIiLCJtYXJnaW4iLCJzaG93QmFsYW5jZSIsImJhbGFuY2UiLCJtYXhXaWR0aCIsImxvZ29TbWFsbCIsInNob3dQbGF5SWNvbiIsInJvd0dhcCIsIlNrZWxldG9uIiwiQXJyYXkiLCJmcm9tIiwiaSIsIk1hc29ucnkiLCJTdHlsZWRNYXNvbnJ5IiwiYnJlYWtwb2ludENvbHMiLCJjb2x1bW5DbGFzc05hbWUiLCJ1c2VMb2NhdGlvbiIsInB1c2hPclJlcGxhY2UiLCJyZXBsYWNlIiwic2VhcmNoIiwiVVJMU2VhcmNoUGFyYW1zIiwidXNlRGVmaUNvbnRleHQiLCJ1c2VGZWF0dXJlRmxhZ0NvbnRleHQiLCJEZWZpUHJvdG9jb2xMaXN0SXRlbSIsIkRlZmlaZXJvU3RhdGUiLCJEZWZpRXJyb3JTdGF0ZSIsIkZlYXR1cmVHYXRlcyIsIkRlRmkiLCJwb3J0Zm9saW8iLCJoYXNFcnJvciIsImlzTG9hZGluZyIsImZlYXR1cmVGbGFncyIsImhhc1Byb3RvY29scyIsInByb3RvY29scyIsImlzUHJvcGVybHlMb2FkZWQiLCJpc1plcm9TdGF0ZSIsInB0IiwiZ2FwIiwicHJvdG9jb2wiLCJpZCIsInByb3BzIiwiQXZhdGFyIiwiQ2FyZEFjdGlvbkFyZWEiLCJFeHRlcm5hbExpbmtJY29uIiwib3Blbk5ld1RhYiIsInVzZUNvbnZlcnRlZEN1cnJlbmN5Rm9ybWF0dGVyIiwiY2FyZFByb3BzIiwiZm9ybWF0VmFsdWUiLCJvcGVuVXJsIiwiZ3JvdXBzIiwic3JjIiwibG9nb1VybCIsImFsdCIsInNlY29uZGFyeVNyYyIsImNoYWluTG9nb1VybCIsInNlY29uZGFyeUF2YXRhclByb3BzIiwiYm9yZGVyIiwiZ3JleSIsImJhZGdlUHJvcHMiLCJhbmNob3JPcmlnaW4iLCJ2ZXJ0aWNhbCIsImhvcml6b250YWwiLCJ0b3RhbFVzZFZhbHVlIiwiY29tcG9uZW50Iiwic2l0ZVVybCIsImhhbmRsZUV4cGxvcmVDbGljayIsInVzZUN1cnJlbmNpZXNDb250ZXh0IiwiZ2V0Q3VycmVuY3lGb3JtYXR0ZXIiLCJzb3VyY2VDdXJyZW5jeSIsImNvbnZlcnQiLCJoYXNFeGNoYW5nZVJhdGUiLCJjdXJyZW5jeSIsInRhcmdldEN1cnJlbmN5IiwiY3VycmVuY3lGb3JtYXR0ZXIiLCJmYWxsYmFja0Zvcm1hdHRlciIsImNhbkNvbnZlcnQiLCJuZWVkc0NvbnZlcnNpb24iLCJjb252ZXJ0ZWQiLCJhbW91bnQiLCJ0byIsIk5ldHdvcmtzV2lkZ2V0IiwiV2FsbGV0QmFsYW5jZXMiLCJTY3JvbGxiYXJzIiwiVGFiIiwiVGFiUGFuZWwiLCJUYWJzIiwiUmVkaXJlY3QiLCJ1c2VQZXJzaXN0ZWRUYWJzIiwiUG9ydGZvbGlvVGFicyIsImZ1bmN0aW9uSWRzIiwiQVNTRVRTIiwiQ09MTEVDVElCTEVTIiwiRmxleFNjcm9sbGJhcnMiLCJQb3J0Zm9saW8iLCJhY3RpdmVUYWIiLCJzZXRBY3RpdmVUYWIiLCJpc1JlYWR5IiwiaGFkRGVmaUVuYWJsZWQiLCJzZXRIYWREZWZpRW5hYmxlZCIsImdldFBhZ2VIaXN0b3J5RGF0YSIsImhpc3RvcnlMaXN0VHlwZSIsImlzU2Nyb2xsaW5nIiwic2V0SXNTY3JvbGxpbmciLCJzaG91bGRTaG93IiwidGFiIiwiaWRUb0NoZWNrIiwiaGFuZGxlQ2hhbmdlIiwiX2V2ZW50IiwibmV3VmFsdWUiLCJ0YWJzIiwidGFic1RvU2hvdyIsImxhYmVsIiwibXgiLCJib3JkZXJCb3R0b20iLCJib3JkZXJDb2xvciIsIm9uU2Nyb2xsU3RhcnQiLCJvblNjcm9sbFN0b3AiLCJpbmRleCIsIkFsZXJ0VHJpYW5nbGVJY29uIiwiVG9vbHRpcCIsIlBBbmRMIiwidXNlVG9rZW5QcmljZU1pc3NpbmciLCJOQVRJVkUiLCJFUkMyMCIsImlzVG9rZW5zQ2FjaGVkIiwidG90YWxCYWxhbmNlIiwiZmF2b3JpdGVOZXR3b3Jrc01pc3NpbmdQcmljZSIsImFjdGl2ZU5ldHdvcmtNaXNzaW5nUHJpY2UiLCJiYWxhbmNlVG90YWxVU0QiLCJiYWxhbmNlVG90YWxVU0RTdW0iLCJzdW0iLCJ0b3RhbEJhbGFuY2VTdW0iLCJ0b3RhbEJhbGFuY2VDaGFuZ2VzIiwicHJpY2VDaGFuZ2UiLCJ0b3RhbEJhbGFuY2VDaGFuZ2UiLCJwZXJjZW50YWdlIiwiYmFsYW5jZVRvdGFsIiwibWluSGVpZ2h0IiwidGl0bGUiLCJvcGFjaXR5Iiwic2hvd1BlcmNlbnRhZ2UiXSwic291cmNlUm9vdCI6IiJ9